define([
    './address/index',
    './builder/index',
    './builderComponent/index',
    './builderComponents/index',
    './builderEditForm/index',
    './builderPlaceholder/index',
    './builderSidebar/index',
    './builderSidebarGroup/index',
    './builderWizard/index',
    './button/index',
    './checkbox/index',
    './columns/index',
    './component/index',
    './componentModal/index',
    './components/index',
    './container/index',
    './datagrid/index',
    './day/index',
    './dialog/index',
    './editgrid/index',
    './field/index',
    './fieldset/index',
    './file/index',
    './html/index',
    './icon/index',
    './iconClass',
    './input/index',
    './label/index',
    './loader/index',
    './loading/index',
    './map/index',
    './message/index',
    './multipleMasksInput/index',
    './multiValueRow/index',
    './multiValueTable/index',
    './panel/index',
    './pdf/index',
    './pdfBuilder/index',
    './pdfBuilderUpload/index',
    './radio/index',
    './resourceAdd/index',
    './select/index',
    './selectOption/index',
    './signature/index',
    './survey/index',
    './tab/index',
    './table/index',
    './tree/index',
    './tree/partials/index',
    './webform/index',
    './well/index',
    './wizard/index',
    './wizardHeader/index',
    './wizardNav/index',
    './cssClasses'
], function (address, builder, builderComponent, builderComponents, builderEditForm, builderPlaceholder, builderSidebar, builderSidebarGroup, builderWizard, button, checkbox, columns, component, componentModal, components, container, datagrid, day, dialog, editgrid, field, fieldset, file, html, icon, iconClass, input, label, loader, loading, map, message, multipleMasksInput, multiValueRow, multiValueTable, panel, pdf, pdfBuilder, pdfBuilderUpload, radio, resourceAdd, select, selectOption, signature, survey, tab, table, tree, treePartials, webform, well, wizard, wizardHeader, wizardNav, cssClasses) {
    'use strict';
    return {
        transform(type, text) {
            if (!text) {
                return text;
            }
            switch (type) {
            case 'class':
                return this.cssClasses.hasOwnProperty(text.toString()) ? this.cssClasses[text.toString()] : text;
            }
            return text;
        },
        defaultIconset: 'fa',
        iconClass,
        cssClasses,
        address,
        builder,
        builderComponent,
        builderComponents,
        builderEditForm,
        builderPlaceholder,
        builderSidebar,
        builderSidebarGroup,
        builderWizard,
        button,
        checkbox,
        columns,
        component,
        componentModal,
        components,
        container,
        datagrid,
        day,
        dialog,
        editgrid,
        field,
        fieldset,
        file,
        html,
        icon,
        input,
        label,
        loader,
        loading,
        map,
        message,
        multipleMasksInput,
        multiValueRow,
        multiValueTable,
        panel,
        pdf,
        pdfBuilder,
        pdfBuilderUpload,
        radio,
        resourceAdd,
        select,
        selectOption,
        signature,
        survey,
        tab,
        table,
        tree,
        ...treePartials,
        webform,
        well,
        wizard,
        wizardHeader,
        wizardNav
    };
});