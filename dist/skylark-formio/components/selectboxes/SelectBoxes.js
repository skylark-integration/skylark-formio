/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../radio/Radio"],function(e,t){"use strict";return class s extends t{static schema(...e){return t.schema({type:"selectboxes",label:"Select Boxes",key:"selectBoxes",inline:!1},...e)}static get builderInfo(){return{title:"Select Boxes",group:"basic",icon:"plus-square",weight:60,documentation:"http://help.form.io/userguide/#selectboxes",schema:s.schema()}}constructor(...e){super(...e),this.validators=this.validators.concat("minSelectedCount","maxSelectedCount")}init(){super.init(),this.component.inputType="checkbox"}get defaultSchema(){return s.schema()}get inputInfo(){const e=super.elementInfo();return e.attr.name+="[]",e.attr.type="checkbox",e.attr.class="form-check-input",e}get emptyValue(){return this.component.values.reduce((e,t)=>(e[t.value]=!1,e),{})}isEmpty(e=this.dataValue){let t=!0;for(const s in e)if(e.hasOwnProperty(s)&&e[s]){t=!1;break}return t}getValue(){if(this.viewOnly||!this.refs.input||!this.refs.input.length)return this.dataValue;const t={};return e.each(this.refs.input,e=>{t[e.value]=!!e.checked}),t}normalizeValue(t){return"object"!=typeof(t=t||{})&&(t="string"==typeof t?{[t]:!0}:{}),Array.isArray(t)&&e.each(t,e=>{t[e]=!0}),t}setValue(t,s={}){const i=this.updateValue(t,s);return t=this.dataValue,e.each(this.refs.input,s=>{e.isUndefined(t[s.value])&&(t[s.value]=!1),s.checked=!!t[s.value]}),i}getValueAsString(t){return t?e(this.component.values||[]).filter(e=>t[e.value]).map("label").join(", "):""}checkComponentValidity(e,t,s){const i=this.component.validate.minSelectedCount,n=this.component.validate.maxSelectedCount;if((n||i)&&!this.isValid(e,t)){const e=Object.keys(this.validationValue).reduce((e,t)=>(this.validationValue[t]&&e++,e),0);if(n&&e>=n){if(this.refs.input&&this.refs.input.forEach(e=>{e.checked||(e.disabled=!0)}),n&&e>n){const e=this.component.maxSelectedCountMessage?this.component.maxSelectedCountMessage:`You can only select up to ${n} items.`;return this.setCustomValidity(e,t),!1}}else{if(i&&e<i){this.refs.input&&this.refs.input.forEach(e=>{e.disabled=!1});const e=this.component.minSelectedCountMessage?this.component.minSelectedCountMessage:`You must select at least ${i} items.`;return this.setCustomValidity(e,t),!1}this.refs.input&&this.refs.input.forEach(e=>{e.disabled=!1})}}return super.checkComponentValidity(e,t,s)}}});
//# sourceMappingURL=../../sourcemaps/components/selectboxes/SelectBoxes.js.map
