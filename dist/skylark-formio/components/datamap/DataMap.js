/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["../_classes/component/Component","../datagrid/DataGrid","skylark-lodash","../../vendors/eventemitter2/EventEmitter2","../../utils/utils"],function(e,t,a,n,s){"use strict";return class o extends t{static schema(...t){return e.schema({label:"Data Map",key:"dataMap",type:"datamap",clearOnHide:!0,addAnother:"Add Another",disableAddingRemovingRows:!1,keyBeforeValue:!0,valueComponent:{type:"textfield",key:"value",label:"Value",input:!0},input:!0,validate:{maxLength:0,minLength:0}},...t)}static get builderInfo(){return{title:"Data Map",icon:"th-list",group:"data",documentation:"http://help.form.io/userguide/#datamap",weight:20,schema:o.schema()}}get schema(){const e=super.schema;return this.components&&this.components.length>0&&(e.valueComponent=this.components[this.components.length-1].schema),a.omit(e,"components")}constructor(e,t,a){super(e,t,a),this.type="datamap"}init(){this.components=[],this.rows=[],this.createRows(),this.visibleColumns={key:!0,[this.valueKey]:!0},this.component.valueComponent.hideLabel=!0}get defaultSchema(){return o.schema()}get emptyValue(){return{}}get dataValue(){return!this.key||!this.visible&&this.component.clearOnHide?this.emptyValue:(this.hasValue()||(this.dataValue=this.emptyValue),a.get(this.data,this.key))}set dataValue(e){super.dataValue=e}get defaultValue(){const e=super.defaultValue;return Array.isArray(e)?e[0]:this.emptyValue}get keySchema(){return{type:"textfield",input:!0,hideLabel:!0,label:this.component.keyLabel||"Key",key:"__key"}}get valueKey(){return this.component.valueComponent.key}getRowValues(){const e=this.dataValue;return this.builderMode?[e]:a.isEmpty(e)?[]:Object.keys(e).map(()=>e)}hasHeader(){return!0}hasRemoveButtons(){return!this.component.disableAddingRemovingRows&&!this.options.readOnly&&!this.disabled&&this.fullMode}getColumns(){const e=Object.assign({},this.keySchema),t=Object.assign({},this.component.valueComponent);return e.hideLabel=!1,t.hideLabel=!1,this.component.keyBeforeValue?[e,t]:[t,e]}getRowKey(e){const t=Object.keys(this.dataValue);return t[e]||(t[e]=s.uniqueKey(this.dataValue,"key")),t[e]}createRowComponents(e,t){let o=this.getRowKey(t);const i=a.clone(this.options);i.events=new n({wildcard:!1,maxListeners:0}),i.name+=`[${t}]`,i.row=`${t}`;const h={};h.__key=this.createComponent(this.keySchema,i,{__key:o}),h.__key.on("componentChange",e=>{const t=this.dataValue,a=s.uniqueKey(t,e.value);t[a]=t[o],delete t[o],h[this.valueKey].component.key=a,o=a});const l=a.clone(this.component.valueComponent);return l.key=o,h[this.valueKey]=this.createComponent(l,this.options,this.dataValue),h}get canAddColumn(){return!1}addChildComponent(e){this.component.valueComponent=e}saveChildComponent(e){this.component.valueComponent=e}removeChildComponent(){const e=o.schema();this.component.valueComponent=e.valueComponent}addRow(){const e=this.rows.length;this.rows[e]=this.createRowComponents(this.dataValue,e),this.redraw(),this.triggerChange()}removeRow(e){const t=Object.keys(this.dataValue);t[e]&&delete this.dataValue[t[e]],this.rows.splice(e,1),this.redraw(),this.triggerChange()}setValue(e,t={}){const a=this.hasChanged(e,this.dataValue);return this.dataValue=e,this.createRows(),this.updateOnChange(t,a),a}checkColumns(){return{rebuild:!1,show:!0}}}});
//# sourceMappingURL=../../sourcemaps/components/datamap/DataMap.js.map
