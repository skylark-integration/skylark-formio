/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../_classes/field/Field","../../utils/utils"],function(t,e,s){"use strict";return class i extends e{static schema(...t){return e.schema({type:"day",label:"Day",key:"day",fields:{day:{type:"number",placeholder:"",required:!1},month:{type:"select",placeholder:"",required:!1},year:{type:"number",placeholder:"",required:!1}},dayFirst:!1},...t)}static get builderInfo(){return{title:"Day",group:"advanced",icon:"calendar",documentation:"http://help.form.io/userguide/#day",weight:50,schema:i.schema()}}get emptyValue(){return"00/00/0000"}get valueMask(){return/^\d{2}\/\d{2}\/\d{4}$/}get dayRequired(){return this.showDay&&t.get(this.component,"fields.day.required",!1)}get showDay(){return!t.get(this.component,"fields.day.hide",!1)}get monthRequired(){return this.showMonth&&t.get(this.component,"fields.month.required",!1)}get showMonth(){return!t.get(this.component,"fields.month.hide",!1)}get yearRequired(){return this.showYear&&t.get(this.component,"fields.year.required",!1)}get showYear(){return!t.get(this.component,"fields.year.hide",!1)}get defaultSchema(){return i.schema()}get inputInfo(){const t=super.elementInfo();return t.type="input",t.attr.type="hidden",t.changeEvent="input",t}inputDefinition(e){let s,i;return"day"===e&&(s=1,i=31),"month"===e&&(s=1,i=12),"year"===e&&(s=t.get(this.component,"fields.year.minYear",1900)||1900,i=t.get(this.component,"fields.year.maxYear",2030)||1900),{type:"input",ref:e,attr:{id:`${this.component.key}-${e}`,class:`form-control ${this.transform("class",`formio-day-component-${e}`)}`,type:"select"===this.component.fields[e].type?"select":"number",placeholder:this.component.fields[e].placeholder,step:1,min:s,max:i}}}selectDefinition(t){return{multiple:!1,ref:t,widget:"html5",attr:{id:`${this.component.key}-${t}`,class:"form-control",name:t,lang:this.options.language}}}get days(){if(this._days)return this._days;this._days=[{value:"",label:t.get(this.component,"fields.day.placeholder","")}];for(let t=1;t<=31;t++)this._days.push({value:t,label:t.toString()});return this._days}get months(){return this._months?this._months:(this._months=[{value:"",label:t.get(this.component,"fields.month.placeholder")||(this.hideInputLabels?this.t("Month"):"")},{value:1,label:"January"},{value:2,label:"February"},{value:3,label:"March"},{value:4,label:"April"},{value:5,label:"May"},{value:6,label:"June"},{value:7,label:"July"},{value:8,label:"August"},{value:9,label:"September"},{value:10,label:"October"},{value:11,label:"November"},{value:12,label:"December"}],this._months)}get years(){if(this._years)return this._years;this._years=[{value:"",label:t.get(this.component,"fields.year.placeholder","")}];const e=t.get(this.component,"fields.year.minYear",1900)||1900,s=t.get(this.component,"fields.year.maxYear",2030)||2030;for(let t=e;t<=s;t++)this._years.push({value:t,label:t.toString()});return this._years}setErrorClasses(t,e,s){super.setErrorClasses(t,e,s),super.setErrorClasses([this.refs.day,this.refs.month,this.refs.year],e,s)}removeInputError(t){super.removeInputError([this.refs.day,this.refs.month,this.refs.year]),super.removeInputError(t)}init(){super.init(),this.validators=this.validators.concat(["day","maxDate","minDate","minYear","maxYear"]);const t=this.component.fields.year.minYear,e=this.component.fields.year.maxYear;this.component.maxYear=e,this.component.minYear=t;const i=s.getLocaleDateFormatInfo(this.options.language);this.dayFirst=this.component.useLocaleSettings?i.dayFirst:this.component.dayFirst}render(){return super.render(this.renderTemplate("day",{dayFirst:this.dayFirst,showDay:this.showDay,showMonth:this.showMonth,showYear:this.showYear,day:this.renderField("day"),month:this.renderField("month"),year:this.renderField("year")}))}renderField(t){return"select"===this.component.fields[t].type?this.renderTemplate("select",{input:this.selectDefinition(t),selectOptions:this[`${t}s`].reduce((t,e)=>t+this.renderTemplate("selectOption",{option:e,selected:!1,attrs:{}}),"")}):this.renderTemplate("input",{input:this.inputDefinition(t)})}attach(t){this.loadRefs(t,{day:"single",month:"single",year:"single",input:"multiple"});const e=super.attach(t);return this.shouldDisabled?(this.setDisabled(this.refs.day,!0),this.setDisabled(this.refs.month,!0),this.setDisabled(this.refs.year,!0),this.refs.input&&this.refs.input.forEach(t=>this.setDisabled(t,!0))):(this.addEventListener(this.refs.day,"input",()=>this.updateValue(null,{modified:!0})),this.addEventListener(this.refs.month,"input",()=>{const t=this.refs.year?parseInt(new Date(this.refs.year.value,this.refs.month.value,0).getDate(),10):"",e=this.getFieldValue("day");!this.component.fields.day.hide&&t&&(this.refs.day.max=t),t&&e>t&&(this.refs.day.value=this.refs.day.max),this.updateValue(null,{modified:!0})}),this.addEventListener(this.refs.year,"input",()=>this.updateValue(null,{modified:!0})),this.addEventListener(this.refs.input,this.info.changeEvent,()=>this.updateValue(null,{modified:!0}))),this.setValue(this.dataValue),e}validateRequired(t,e){const{day:i,month:a,year:r}=this.parts;return!(this.dayRequired&&!i)&&(!(this.monthRequired&&!a)&&(!(this.yearRequired&&!r)&&(!s.boolValue(t)||!this.isEmpty(e))))}set disabled(t){super.disabled=t,this.refs.year&&this.refs.month&&this.refs.day&&(t?(this.refs.year.setAttribute("disabled","disabled"),this.refs.month.setAttribute("disabled","disabled"),this.refs.day.setAttribute("disabled","disabled")):(this.refs.year.removeAttribute("disabled"),this.refs.month.removeAttribute("disabled"),this.refs.day.removeAttribute("disabled")))}normalizeValue(t){if(!t||this.valueMask.test(t))return t;const e=[],s=t.split("/"),i=(t,i)=>e.push(t?s.shift():i);return this.dayFirst&&i(this.showDay,"00"),i(this.showMonth,"00"),this.dayFirst||i(this.showDay,"00"),i(this.showYear,"0000"),e.join("/")}setValueAt(t,e){if(!e||"Invalid date"===e)return null;const s=e.split("/");let i;this.component.dayFirst&&(i=s.shift());const a=s.shift();this.component.dayFirst||(i=s.shift());const r=s.shift();this.refs.day&&this.showDay&&(this.refs.day.value="00"===i?"":parseInt(i,10)),this.refs.month&&this.showMonth&&(this.refs.month.value="00"===a?"":parseInt(a,10)),this.refs.year&&this.showYear&&(this.refs.year.value="0000"===r?"":parseInt(r,10))}getFieldValue(e){const s=this.dataValue?this.dataValue.split("/"):[];let i=0;switch(e){case"month":i=s[this.dayFirst?1:0];break;case"day":i=s[this.dayFirst?0:1];break;case"year":i=s[2]}return i=parseInt(i,10),!t.isNaN(i)&&t.isNumber(i)?i:0}get parts(){return{day:this.getFieldValue("day"),month:this.getFieldValue("month"),year:this.getFieldValue("year")}}get format(){let t="";return this.component.dayFirst&&this.showDay&&(t+="D/"),this.showMonth&&(t+="M/"),!this.component.dayFirst&&this.showDay&&(t+="D/"),this.showYear?t+="YYYY":t.length?t.substring(0,t.length-1):t}getDate(e){let s,i,a,r=[];const[h,n,o]=this.component.dayFirst?[0,1,2]:[1,0,2],l=e||this.component.defaultValue;let d;return l&&(r=l.split("/").map(t=>parseInt(t,10))),this.showDay&&this.refs.day&&(s=parseInt(this.refs.day.value,10)),(void 0===s||t.isNaN(s))&&(s=r[h]&&!t.isNaN(r[h])?r[h]:0),this.showMonth&&this.refs.month&&(i=parseInt(this.refs.month.value,10)),(void 0===i||t.isNaN(i))&&(i=r[n]&&!t.isNaN(r[n])?r[n]:0),this.showYear&&this.refs.year&&(a=parseInt(this.refs.year.value)),(void 0===a||t.isNaN(a))&&(a=r[o]&&!t.isNaN(r[o])?r[o]:0),s||i||a?(s=this.showDay?s.toString().padStart(2,0):"",i=this.showMonth?i.toString().padStart(2,0):"",a=this.showYear?a.toString().padStart(4,0):"",d=this.component.dayFirst?`${s}${this.showDay&&this.showMonth||this.showDay&&this.showYear?"/":""}${i}${this.showMonth&&this.showYear?"/":""}${a}`:`${i}${this.showDay&&this.showMonth||this.showMonth&&this.showYear?"/":""}${s}${this.showDay&&this.showYear?"/":""}${a}`):null}get date(){return this.getDate()}normalizeMinMaxDates(){return[this.component.minDate,this.component.maxDate].map(t=>t?t.split("-").reverse().join("/"):t)}get validationValue(){return[this.component.minDate,this.component.maxDate]=this.dayFirst?this.normalizeMinMaxDates():[this.component.minDate,this.component.maxDate],this.dataValue}getValue(){const t=super.getValue();return t||this.dataValue}getValueAt(t){const e=this.date;return e?(this.refs.input[t].value=e,this.refs.input[t].value):(this.refs.input[t].value="",null)}getValueAsString(t){return this.getDate(t)||""}focus(){this.dayFirst&&this.showDay||!this.dayFirst&&!this.showMonth&&this.showDay?this.refs.day.focus():this.dayFirst&&!this.showDay&&this.showMonth||!this.dayFirst&&this.showMonth?this.refs.month.focus():this.showDay||this.showDay||!this.showYear||this.refs.year.focus()}isPartialDay(t){if(!t)return!1;const[e,s,i]=this.component.dayFirst?[0,1,2]:[1,0,2],a=t.split("/");return"00"===a[e]||"00"===a[s]||"0000"===a[i]}}});
//# sourceMappingURL=../../sourcemaps/components/day/Day.js.map
