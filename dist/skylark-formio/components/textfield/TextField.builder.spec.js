/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["../../../test/harness","../../EventEmitter","power-assert"],function(t,e,l){"use strict";describe("TextField Builder",()=>{let i=null;before(l=>{t.builderBefore(l,{editForm:{events:new e({wildcard:!1,maxListeners:0,loadLimit:250,log:!0})}})}),after(()=>{t.builderAfter()}),it("Should create a new textfield component",()=>(i=t.buildComponent("textfield")).editForm.formReady.then(()=>{const t=i.componentPreview.innerHTML;l(-1!==t.indexOf("formio-component formio-component-textfield formio-component-textField"),"Must have correct classes"),l(-1!==t.indexOf('<label class="control-label" style="">Text Field</label>'),"Must have a label"),l(-1!==t.indexOf('<input name="data[textField]" type="text" class="form-control"'),"Must have an input")})),it("Should allow you to change the label",e=>{t.setComponentProperty("label","Text Field","First Name",t=>{l(t.match(/label.*input/),"Label must be on top."),l(-1!==t.indexOf('<label class="control-label" style="">First Name</label>'),"Must have a label"),e()})}),it("Should allow you to hide/show the label",e=>{t.setComponentProperty("hideLabel",!1,!0,i=>{l(-1===i.indexOf('<label class="control-label"'),"Must not have a label"),t.setComponentProperty("hideLabel",!0,!1,t=>{l(-1!==t.indexOf('<label class="control-label"'),"Must have a label"),e()})})}),it("Should allow you to change the label position",e=>{t.setComponentProperty("labelPosition","top","bottom",i=>{l(i.match(/input.*label/),"Label must be on bottom."),t.setComponentProperty("labelPosition","bottom","left-left",i=>{l(i.match(/label.*style=".*float: left; width: 30%; margin-right: 3%;.*input/),"Label must be positioned on the left floated left"),t.setComponentProperty("labelPosition","left-left","left-right",i=>{l(i.match(/label.*style=".*float: left; width: 30%; margin-right: 3%; text-align: right;.*input/),"Label must be positioned on the left floated right"),t.setComponentProperty("labelPosition","left-right","right-left",i=>{l(i.match(/label.*style=".*float: right; width: 30%; margin-left: 3%;.*input/),"Label must be positioned on the right floated left"),t.setComponentProperty("labelPosition","right-left","right-right",t=>{l(t.match(/label.*style=".*float: right; width: 30%; margin-left: 3%; text-align: right;.*input/),"Label must be positioned on the right floated right"),e()})})})})})}),it("Should allow you to change the label width and margin",e=>{t.setComponentProperty("labelPosition","right-right","top",()=>{t.testVisibility(i.editForm,".formio-component-labelWidth",!1),t.testVisibility(i.editForm,".formio-component-labelMargin",!1),t.setComponentProperty("labelPosition","top","left-left",()=>{t.testVisibility(i.editForm,".formio-component-labelWidth",!0),t.testVisibility(i.editForm,".formio-component-labelMargin",!0),t.setComponentProperty("labelWidth",30,20,()=>{t.setComponentProperty("labelMargin",3,5,o=>{l(o.match(/label.*style=".*float: left; width: 20%; margin-right: 5%;.*input/),"Label must be positioned on the left floated left"),t.setComponentProperty("labelPosition","left-left","right-right",o=>{l(o.match(/label.*style=".*float: right; width: 20%; margin-left: 5%; text-align: right;.*input/),"Label must be positioned on the right floated right"),t.testVisibility(i.editForm,".formio-component-labelWidth",!0),t.testVisibility(i.editForm,".formio-component-labelMargin",!0),e()})})})})})}),it("Should allow you to set the input mask",e=>{t.testBuilderProperty("inputMask","","(999) 999-9999",null,()=>{l.equal(i.preview.inputs[0].placeholder,"(___) ___-____"),i.preview.setValue("1234567890"),l.equal(i.preview.inputs[0].value,"(123) 456-7890"),l.equal(i.preview.getValue(),"(123) 456-7890"),e()})}),it("Should set the placeholder of the input",e=>{t.setComponentProperty("labelPosition","right-right","top",()=>{t.testBuilderProperty("placeholder","","Enter something here",/input.*name="data\[firstName\].*placeholder="Enter something here"/,e)})}),it("Should set the description of the input",e=>{t.testBuilderProperty("description","","This is a description",/input.*div.*class="help-block">This is a description<\/div>/,e)}),it("Should set the tooltip of the input",e=>{t.testBuilderProperty("tooltip","","This is something you should fill out.",/label.*i.*class="glyphicon glyphicon-question-sign text-muted.*<\/label>/,()=>{l(i.preview.tooltip,"There should be a tooltip instance"),i.preview.tooltip.show();const t=i.preview.element.querySelector(".tooltip-inner");l.equal(t.innerHTML,"This is something you should fill out."),e()})}),it("Should set the prefix of the input",e=>{t.testBuilderProperty("prefix","","$",/div class="input-group">.*<div class="input-group-addon">\$<\/div>.*input/,e)}),it("Should set the suffix of the input",e=>{t.testBuilderProperty("suffix","","USD",/div class="input-group">.*input.*<div class="input-group-addon">USD<\/div>/,e)}),it("Should set the custom css class of the input",e=>{t.testBuilderProperty("customClass","","custom-text-field",null,()=>{l(i.preview.hasClass(i.preview.element,"custom-text-field"),"Preview should have this custom class"),e()})}),it("Should set the tab index of the input element",e=>{t.testBuilderProperty("tabindex","",10,null,()=>{l.equal(i.preview.inputs[0].tabIndex,10),e()})}),it("Should allow you to set the multiple flag",e=>{t.testBuilderProperty("multiple",!1,!0,null,()=>{e()})})})});
//# sourceMappingURL=../../sourcemaps/components/textfield/TextField.builder.spec.js.map
