/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../_classes/nestedarray/NestedArrayComponent","../_classes/component/Component","../../utils/utils","./templates"],function(t,e,s,o,n){"use strict";var i=t.isEqual;const a={New:"new",Editing:"editing",Saved:"saved",Removed:"removed"};return class s extends e{static schema(...t){return e.schema({type:"editgrid",label:"Edit Grid",key:"editGrid",clearOnHide:!0,input:!0,tree:!0,removeRow:"Cancel",defaultOpen:!1,openWhenEmpty:!1,components:[],inlineEdit:!1,templates:{header:s.defaultHeaderTemplate,row:s.defaultRowTemplate,footer:""}},...t)}static get builderInfo(){return{title:"Edit Grid",icon:"tasks",group:"data",documentation:"http://help.form.io/userguide/#editgrid",weight:30,schema:s.schema()}}static get defaultHeaderTemplate(){return'<div class="row">\n  {% util.eachComponent(components, function(component) { %}\n    <div class="col-sm-2">{{ component.label }}</div>\n  {% }) %}\n</div>'}static get defaultRowTemplate(){return'<div class="row">\n  {% util.eachComponent(components, function(component) { %}\n    <div class="col-sm-2">\n      {{ getView(component, row[component.key]) }}\n    </div>\n  {% }) %}\n  {% if (!instance.options.readOnly && !instance.originalComponent.disabled) { %}\n    <div class="col-sm-2">\n      <div class="btn-group pull-right">\n        <button class="btn btn-default btn-light btn-sm editRow"><i class="{{ iconClass(\'edit\') }}"></i></button>\n        {% if (!instance.hasRemoveButtons || instance.hasRemoveButtons()) { %}\n          <button class="btn btn-danger btn-sm removeRow"><i class="{{ iconClass(\'trash\') }}"></i></button>\n        {% } %}\n      </div>\n    </div>\n  {% } %}\n</div>'}get defaultSchema(){return s.schema()}get emptyValue(){return[]}get editgridKey(){return`editgrid-${this.key}`}get rowRef(){return`${this.editgridKey}-row`}get rowElements(){return this.refs[this.rowRef]}get addRowRef(){return`${this.editgridKey}-addRow`}get addRowElements(){return this.refs[this.addRowRef]}get saveRowRef(){return`${this.editgridKey}-saveRow`}get saveRowElements(){return this.refs[this.saveRowRef]}get cancelRowRef(){return`${this.editgridKey}-cancelRow`}get cancelRowElements(){return this.refs[this.cancelRowRef]}get inlineEditMode(){return this.component.inlineEdit}get saveEditMode(){return!this.inlineEditMode}get minLength(){return t.get(this.component,"validate.minLength",0)}get data(){return this._data}set data(t){this._data=t;const e=this.dataValue;(this.editRows||[]).forEach((t,s)=>{const o=e[s];t.data=o,t.components.forEach(t=>{t.data=o})})}get iteratableRows(){return this.editRows}constructor(...t){super(...t),this.type="editgrid"}hasRemoveButtons(){return!this.component.disableAddingRemovingRows&&!this.options.readOnly&&!this.disabled&&this.fullMode&&this.dataValue.length>t.get(this.component,"validate.minLength",0)}init(){if(this.builderMode)return this.editRows=[],super.init();this.components=this.components||[];const t=this.dataValue||[];if(!t.length&&this.component.openWhenEmpty){const t={};this.editRows=[{components:this.createRowComponents(t,0),data:t,state:a.New,backup:null,error:null}],this.inlineEditMode&&this.dataValue.push(t)}else this.editRows=t.map((t,e)=>({components:this.createRowComponents(t,e),data:t,state:a.Saved,backup:null,error:null}));this.checkData()}isOpen(t){return[a.New,a.Editing].includes(t.state)}render(e){if(this.builderMode)return super.render();const s=this.dataValue||[],i=o.Evaluator.noeval?n.header:t.get(this.component,"templates.header");return super.render(e||this.renderTemplate("editgrid",{ref:{row:this.rowRef,addRow:this.addRowRef,saveRow:this.saveRowRef,cancelRow:this.cancelRowRef},header:this.renderString(i,{components:this.component.components,value:s}),footer:this.renderString(t.get(this.component,"templates.footer"),{components:this.component.components,value:s}),rows:this.editRows.map(this.renderRow.bind(this)),openRows:this.editRows.map(t=>this.isOpen(t)),errors:this.editRows.map(t=>t.error),hasAddButton:this.hasAddButton(),hasRemoveButtons:this.hasRemoveButtons()}))}attach(t){if(this.builderMode)return super.attach(t);this.loadRefs(t,{[this.addRowRef]:"multiple",[this.saveRowRef]:"multiple",[this.cancelRowRef]:"multiple",[this.rowRef]:"multiple"}),this.addRowElements.forEach(t=>{this.addEventListener(t,"click",()=>this.addRow())});let e=0;return this.rowElements.forEach((t,s)=>{const o=this.editRows[s];this.isOpen(o)?(this.attachComponents(t,o.components),this.addEventListener(this.saveRowElements[e],"click",()=>this.saveRow(s)),this.addEventListener(this.cancelRowElements[e],"click",()=>this.cancelRow(s)),e++):[{className:"removeRow",event:"click",action:()=>this.removeRow(s)},{className:"editRow",event:"click",action:()=>this.editRow(s)}].forEach(({className:e,event:s,action:o})=>{const n=t.getElementsByClassName(e);Array.prototype.forEach.call(n,t=>{this.addEventListener(t,s,o)})})}),e?this.addClass(this.refs.component,`formio-component-${this.component.type}-row-open`):this.removeClass(this.refs.component,`formio-component-${this.component.type}-row-open`),super.attach(t)}clearOnHide(t){if(super.clearOnHide(t),this.component.clearOnHide&&!this.visible){if(!this.editRows)return;this.removeAllRows()}}renderRow(e,i){const a=this.dataValue||[];if(this.isOpen(e))return this.renderComponents(e.components);{const e=this.flattenComponents(i),r=o.Evaluator.noeval?n.row:t.get(this.component,"templates.row",s.defaultRowTemplate);return this.renderString(r,{row:a[i]||{},data:this.data,rowIndex:i,components:this.component.components,flattenedComponents:e,getView:(s,o)=>{const n=e[s.key];let i=n?n.getView(o):"";return n&&n.widget&&"--- PROTECTED ---"!==i&&(i=t.isArray(i)?i.map(t=>n.widget.getValueAsString(t)):n.widget.getValueAsString(i)),i}})}}everyComponent(e,s){const o=this.getComponents(s);t.each(o,(t,s)=>!1!==e(t,o,s)&&(("function"!=typeof t.everyComponent||!1!==t.everyComponent(e))&&void 0))}flattenComponents(t){const e={};return this.everyComponent(t=>{e[t.component.flattenAs||t.key]=t},t),e}getComponents(e){return this.editRows=this.editRows||[],this.builderMode?super.getComponents():t.isNumber(e)?this.editRows[e].components||[]:this.editRows.reduce((t,e)=>t.concat(e.components||[]),[])}destroyComponents(t){if(this.builderMode)return super.destroyComponents();this.getComponents(t).slice().forEach(t=>t.destroy())}addRow(){if(this.options.readOnly)return;const t={},e=this.editRows.length,s={components:this.createRowComponents(t,e),data:t,state:a.New,backup:null,error:null};return this.editRows.push(s),this.inlineEditMode&&(this.dataValue.push(t),this.triggerChange()),this.emit("editGridAddRow",{component:this.component,row:s}),this.checkRow("checkData",null,{},s.data,s.components),this.component.modal?this.addRowModal(e):this.redraw(),s}addRowModal(t){const e=this.ce("div"),s=this.editRows[t],{components:o}=s;e.innerHTML=this.renderComponents(o);const n=this.component.modal?this.createModal(e):void 0;n.refs.dialogContents.appendChild(this.ce("button",{class:"btn btn-primary",onClick:()=>{this.validateRow(s,!0)&&(n.close(),this.saveRow(t))}},this.component.saveRow||"Save")),this.attachComponents(e,o)}editRow(t){const e=this.editRows[t];e.state=a.Editing;const s=o.fastCloneDeep(e.data);this.inlineEditMode?e.backup=s:(e.backup=e.data,e.data=s,this.restoreRowContext(e)),this.component.modal?this.addRowModal(t):this.redraw()}clearErrors(t){const e=this.editRows[t];e&&Array.isArray(e.components)&&e.components.forEach(t=>{t.setPristine(!0),t.setCustomValidity("")})}cancelRow(t){if(this.options.readOnly)return;const e=this.editRows[t];switch(e.state){case a.New:e.state=a.Removed,this.clearErrors(t),this.destroyComponents(t),this.inlineEditMode&&this.splice(t),this.editRows.splice(t,1);break;case a.Editing:e.state=a.Saved,this.inlineEditMode&&(this.dataValue[t]=e.backup),e.data=e.backup,e.backup=null,this.restoreRowContext(e),this.clearErrors(t)}this.checkValidity(null,!0),this.redraw()}saveRow(t){if(this.options.readOnly)return;const e=this.editRows[t];if(!this.validateRow(e,!0))return!1;if(this.saveEditMode){const s=this.dataValue||[];switch(e.state){case a.New:{const o=s.length;s.push(e.data),t!==o&&(this.editRows.splice(t,1),this.editRows.splice(o,0,e));break}case a.Editing:s[t]=e.data}}return e.state=a.Saved,e.backup=null,this.updateValue(),this.triggerChange(),this.checkValidity(null,!0),this.redraw(),!0}updateComponentsRowIndex(t,e){t.forEach((t,s)=>{t.rowIndex=e,t.row=`${e}-${s}`})}updateRowsComponents(t){this.editRows.slice(t).forEach((t,e)=>{this.updateComponentsRowIndex(t.components,e)})}removeRow(t){if(this.options.readOnly)return;this.editRows[t].state=a.Removed,this.destroyComponents(t),this.splice(t),this.editRows.splice(t,1),this.updateRowsComponents(t),this.updateValue(),this.triggerChange(),this.checkValidity(null,!0),this.checkData(),this.redraw()}removeAllRows(){if(this.options.readOnly)return;for(let t=(this.editRows||[]).length-1;t>=0;t--)this.removeRow(t)}createRowComponents(e,s){return this.component.components.map((o,n)=>{const i=t.clone(o),a=t.clone(this.options);a.name+=`[${s}]`,a.row=`${s}-${n}`,a.onChange=((t,e,o)=>{const n=this.editRows[s];this.inlineEditMode?this.triggerRootChange(t,e,o):n&&this.checkRow("checkData",null,{changed:e},n.data,n.components)});const r=this.createComponent(t.assign({},i,{row:a.row}),a,e);return r.rowIndex=s,r.path&&i.key&&(r.path=r.path.replace(new RegExp(`\\.${i.key}$`),`[${s}].${i.key}`)),r})}validateRow(t,e){let s=!0;return(t.state===a.Editing||e)&&t.components.forEach(o=>{o.setPristine(!e),s&=o.checkValidity(null,e,t.data)}),this.component.validate&&this.component.validate.row&&("true"!==(s=this.evaluate(this.component.validate.row,{valid:s,row:t.data},"valid",!0)).toString()?(t.error=s,s=!1):t.error=null,null===s&&(s=`Invalid row validation for ${this.key}`)),!!s}checkValidity(t,e,s){return t=t||this.rootValue,s=s||this.data,this.checkCondition(s,t)?this.checkComponentValidity(t,e,s):(this.setCustomValidity(""),!0)}checkComponentValidity(t,e,s){if(!super.checkComponentValidity(t,e,s))return!1;let o=!0,n=!1;if(this.editRows.forEach(t=>{const s=this.validateRow(t,e);o&=s,n|=e&&this.isOpen(t)}),!o)return this.setCustomValidity("Please correct rows before proceeding.",e),!1;if(n&&this.saveEditMode)return this.setCustomValidity("Please save all rows before proceeding.",e),!1;const i=this.invalid||this.invalidMessage(t,e);return this.setCustomValidity(i,e),!0}get defaultValue(){const e=super.defaultValue,s=Array.isArray(e)?e:[];return t.times(this.minLength-s.length,()=>s.push({})),s}setValue(t,e={}){if(i(this.defaultValue,t))return!1;if(!t)return this.dataValue=this.defaultValue,!1;if(!Array.isArray(t)){if("object"!=typeof t)return!1;t=[t]}const s=this.hasChanged(t,this.dataValue);return this.dataValue=t,this.dataValue.forEach((t,s)=>{let o=this.editRows[s];o?(o.data=t,this.restoreRowContext(o,e),o.state=a.Saved,o.backup=null,o.error=null):(o=this.editRows[s]={components:this.createRowComponents(t,s),data:t,state:a.Saved,backup:null,error:null},this.checkRow("checkData",null,{},o.data,o.components))}),this.updateOnChange(e,s),s&&this.redraw(),s}restoreRowContext(t,e={}){t.components.forEach(s=>{s.data=t.data,this.setNestedValue(s,t.data,e)})}}});
//# sourceMappingURL=../../sourcemaps/components/editgrid/EditGrid.js.map
