/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../_classes/component/Component","../Components","../_classes/nested/NestedComponent","./Node","../../vendors/getify/npo"],function(e,t,o,s,n,r){"use strict";return class t extends s{static schema(...e){return s.schema({label:"Tree",key:"tree",type:"tree",clearOnHide:!0,input:!0,tree:!0,components:[]},...e)}static get builderInfo(){return{title:"Tree",icon:"indent",group:"data",weight:40,schema:t.schema()}}constructor(...e){super(...e),this.type="tree"}get emptyValue(){return{}}get viewComponents(){return this.viewComponentsInstantiated||(this.viewComponentsInstantiated=!0,this._viewComponents=this.createComponents({})),this._viewComponents}init(){if(this.builderMode)return super.init();this.components=[],this.componentOptions={...this.options,parent:this,root:this.root||this},this.setRoot(),this.viewComponentsInstantiated=!1,this._viewComponents=[]}destroy(){super.destroy(),this.builderMode||this.removeComponents(this._viewComponents)}createComponents(e,t){const s=this.componentComponents.map(t=>o.create(t,this.componentOptions,e));return t&&this.checkNode(this.data,t),s}removeComponents(e){return e.map(e=>e.destroy())}render(){return this.builderMode?super.render():super.render(this.renderTree(this.treeRoot))}renderTree(e={},t=!0){const o=e.hasChildren&&!e.collapsed?this.renderChildNodes(e.children,!t):[],s=e.changing?this.renderEdit(e):this.renderView(e);return this.renderTemplate("tree",{odd:t,childNodes:o,content:s,node:e})}renderChildNodes(e=[],t){return e.map(e=>this.renderTree(e,t))}renderEdit(e={}){return this.renderTemplate("treeEdit",{children:this.renderComponents(e.components),node:e})}renderView(e={}){return this.renderTemplate("treeView",{values:this.viewComponents.map(t=>(t.data=e.data,t.checkComponentConditions(e.data),t.getView(t.dataValue))),nodeData:e.data,node:e})}attach(e){return this.builderMode?super.attach(e):(this.loadRefs(e,{root:"single"}),r.all([super.attach(e),this.attachNode(this.refs.root,this.treeRoot)]))}attachNode(t,o){if(!t)return r.resolve();let s=r.resolve(),n=r.resolve();return o.refs=e.reduce(t.children,(e,t)=>t.hasAttribute("ref")?{...e,[t.getAttribute("ref")]:t}:e,{}),o.refs.content&&(this.attachActions(o),s=this.attachComponents(o)),o.refs.childNodes&&(n=this.attachChildren(o)),r.all([s,n])}attachActions(e){this.loadRefs.call(e,e.refs.content,{addChild:"single",cancelNode:"single",editNode:"single",removeNode:"single",revertNode:"single",saveNode:"single",toggleNode:"single"}),e.refs.addChild&&this.addEventListener(e.refs.addChild,"click",()=>{this.addChild(e)}),e.refs.cancelNode&&this.addEventListener(e.refs.cancelNode,"click",()=>{this.cancelNode(e)}),e.refs.editNode&&this.addEventListener(e.refs.editNode,"click",()=>{this.editNode(e)}),e.refs.removeNode&&this.addEventListener(e.refs.removeNode,"click",()=>{this.removeNode(e)}),e.refs.revertNode&&this.addEventListener(e.refs.revertNode,"click",()=>{this.revertNode(e)}),e.refs.saveNode&&this.addEventListener(e.refs.saveNode,"click",()=>{this.saveNode(e)}),e.refs.toggleNode&&this.addEventListener(e.refs.toggleNode,"click",()=>{this.toggleNode(e)})}attachComponents(e,...t){return this.builderMode?super.attachComponents.call(this,e,...t):(this.loadRefs.call(e,e.refs.content,{nodeEdit:"single"}),e.refs.nodeEdit?super.attachComponents(e.refs.nodeEdit,e.components):r.resolve())}attachChildren(t){const o=t.refs.childNodes.children;return r.all(e.map(o,(e,o)=>this.attachNode(e,t.children[o])))}setValue(e,t={}){const o=this.updateValue(e,t);return this.setRoot(),o}addChild(e){this.options.readOnly||e.new||this.hook("tree.addChild",{parent:e,component:this},()=>{const t=e.addChild();return this.redraw(),t})}cancelNode(e){this.options.readOnly||this.hook("tree.cancelNode",{node:e,component:this},()=>(e.isRoot?this.removeRoot():(e.cancel(),this.redraw()),e))}editNode(e){this.options.readOnly||e.new||this.hook("tree.editNode",{node:e,component:this},()=>(e.edit(),this.redraw(),e))}removeNode(e){this.options.readOnly||e.new||this.hook("tree.removeNode",{node:e,component:this},()=>(e.isRoot?this.removeRoot():(e.remove(),this.updateTree()),e))}revertNode(e){!this.options.readOnly&&e.revertAvailable&&this.hook("tree.revertNode",{node:e,component:this},()=>(e.revert(),this.updateTree(),e))}saveNode(e){this.options.readOnly||this.hook("tree.saveNode",{node:e,component:this},()=>(e.save(),this.updateTree(),e))}toggleNode(e){this.hook("tree.toggleNode",{node:e,component:this},()=>(e.collapsed=!e.collapsed,this.redraw(),e))}removeRoot(){this.options.readOnly||(this.dataValue=this.defaultValue,this.setRoot(),this.redraw())}setRoot(){const e=this.dataValue;this.treeRoot=new n(null,e,{isNew:!e.data,createComponents:this.createComponents.bind(this),checkNode:this.checkNode.bind(this,this.data),removeComponents:this.removeComponents}),this.hook("tree.setRoot",{root:this.treeRoot,component:this})}getValue(){return this.dataValue}updateTree(){this.updateValue(this.treeRoot.value),this.redraw()}checkData(e,t,o){return this.checkNode(e,this.treeRoot,t,o)}checkNode(e,t,o,s){return t.children.reduce((t,n)=>this.checkNode(e,n,o,s)&&t,super.checkData(e,o,t.data,t.components))}}});
//# sourceMappingURL=../../sourcemaps/components/tree/Tree.js.map
