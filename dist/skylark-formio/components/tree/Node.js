/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash"],function(t){"use strict";return class e{constructor(i,{data:s={},children:n=[]}={},{checkNode:h,createComponents:r,isNew:a=!0,removeComponents:o}={}){this.parent=i,this.previousData={},this.persistentData=t.cloneDeep(s),this.new=a,this.createComponents=r,this.checkNode=h,this.removeComponents=o,this.revertAvailable=!1,this.editing=!1,this.collapsed=!1,this.components=[],this.children=[],this.resetData(),this.children=n.map(t=>new e(this,t,{checkNode:h,createComponents:r,isNew:!1,removeComponents:o}))}get value(){return this.new?null:{data:t.cloneDeep(this.persistentData),children:this.children.filter(t=>!t.new).map(t=>t.value)}}get isRoot(){return null===this.parent}get changing(){return this.new||this.editing}get hasChangingChildren(){return this.changin||this.children.some(t=>t.hasChangingChildren)}get hasData(){return!t.isEmpty(this.persistentData)}get hasChildren(){return Array.isArray(this.children)&&this.children.length>0}eachChild(t){return t(this),this.children.forEach(e=>e.eachChild(t)),this}getComponents(){return this.children.reduce((t,e)=>t.concat(e.getComponents()),this.components)}addChild(){if(this.new)return null;const t=new e(this,{},{checkNode:this.checkNode,createComponents:this.createComponents,isNew:!0,removeComponents:this.removeComponents});return this.children=this.children.concat(t),t}removeChild(t){return this.new||(this.children=this.children.filter(e=>e!==t)),this}edit(){return this.new?this:(this.editing=!0,this.resetData())}save(){return this.changing&&(this.new?this.new=!1:(this.editing=!1,this.revertAvailable=!0),this.commitData()),this}cancel(){return this.new?this.remove():this.editing&&(this.editing=!1,this.resetData()),this}remove(){return this.parent.removeChild(this),this.parent=null,this.clearComponents(),this}revert(){return this.revertAvailable?(this.data=this.previousData,this.commitData()):this}commitData(){return this.previousData=this.persistentData,this.persistentData=t.cloneDeep(this.data),this.clearComponents(),this}resetData(){return this.data=t.cloneDeep(this.persistentData),this.updateComponentsContext(),this}updateComponentsContext(){return this.changing?this.instantiateComponents():this.clearComponents(),this}instantiateComponents(){this.components=this.createComponents(this.data,this),this.checkNode(this)}clearComponents(){this.removeComponents(this.components),this.components=[]}}});
//# sourceMappingURL=../../sourcemaps/components/tree/Node.js.map
