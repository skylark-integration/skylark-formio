/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["../_classes/field/Field"],function(t){"use strict";return class e extends t{static schema(...e){return t.schema({type:"checkbox",inputType:"checkbox",label:"Checkbox",key:"checkbox",dataGridLabel:!0,labelPosition:"right",value:"",name:""},...e)}static get builderInfo(){return{title:"Checkbox",group:"basic",icon:"check-square",documentation:"http://help.form.io/userguide/#checkbox",weight:50,schema:e.schema()}}get defaultSchema(){return e.schema()}get defaultValue(){return this.component.name?"":"true"===(this.component.defaultValue||!1).toString()}get labelClass(){let t="";return this.isInputComponent&&!this.options.inputsOnly&&this.component.validate&&this.component.validate.required&&(t+=" field-required"),`${t}`}get hasSetValue(){return this.hasValue()}get inputInfo(){const t=super.elementInfo();return t.type="input",t.changeEvent="click",t.attr.type=this.component.inputType||"checkbox",t.attr.class="form-check-input",this.component.name&&(t.attr.name=`data[${this.component.name}]`),t.attr.value=this.component.value?this.component.value:0,t.label=this.t(this.component.label),t.labelClass=this.labelClass,t}get labelInfo(){return{hidden:!0}}render(){return super.render(this.renderTemplate("checkbox",{input:this.inputInfo,checked:this.dataValue,tooltip:this.interpolate(this.t(this.component.tooltip)||"").replace(/(?:\r\n|\r|\n)/g,"<br />")}))}attach(t){return this.loadRefs(t,{input:"multiple"}),this.input=this.refs.input[0],this.refs.input&&(this.addEventListener(this.input,this.inputInfo.changeEvent,()=>this.updateValue(null,{modified:!0})),this.addShortcut(this.input)),super.attach(t)}detach(t){t&&this.input&&this.removeShortcut(this.input)}get emptyValue(){return!1}isEmpty(t=this.dataValue){return super.isEmpty(t)||!1===t}get key(){return this.component.name?this.component.name:super.key}getValueAt(t){return this.component.name?this.refs.input[t].checked?this.component.value:"":!!this.refs.input[t].checked}getValue(){const t=super.getValue();return this.component.name?t?this.setCheckedState(t):this.setCheckedState(this.dataValue):""===t?this.dataValue:!!t}setCheckedState(t){if(this.input)return this.component.name?(this.input.value=t===this.component.value?this.component.value:0,this.input.checked=t===this.component.value?1:0):"on"===t?(this.input.value=1,this.input.checked=1):"off"===t?(this.input.value=0,this.input.checked=0):t?(this.input.value=1,this.input.checked=1):(this.input.value=0,this.input.checked=0),this.input.checked?this.input.setAttribute("checked",!0):this.input.removeAttribute("checked"),t}setValue(t,e={}){return(void 0!==this.setCheckedState(t)||!(this.input||void 0===t||!this.visible&&this.component.clearOnHide))&&this.updateValue(t,e)}getValueAsString(t){return t?"Yes":"No"}}});
//# sourceMappingURL=../../sourcemaps/components/checkbox/Checkbox.js.map
