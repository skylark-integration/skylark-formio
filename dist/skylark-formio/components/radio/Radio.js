/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../_classes/field/Field"],function(e,t){"use strict";return class i extends t{static schema(...e){return t.schema({type:"radio",inputType:"radio",label:"Radio",key:"radio",values:[{label:"",value:""}],fieldSet:!1},...e)}static get builderInfo(){return{title:"Radio",group:"basic",icon:"dot-circle-o",weight:80,documentation:"http://help.form.io/userguide/#radio",schema:i.schema()}}constructor(e,t,i){super(e,t,i),this.previousValue=this.dataValue||null}get defaultSchema(){return i.schema()}get inputInfo(){const e=super.elementInfo();return e.type="input",e.changeEvent="click",e.attr.class="form-check-input",e.attr.name=e.attr.name+=`[${this.id}]`,e}get emptyValue(){return""}get isRadio(){return"radio"===this.component.inputType}render(){return super.render(this.renderTemplate("radio",{input:this.inputInfo,inline:this.component.inline,values:this.component.values,value:this.dataValue,row:this.row}))}attach(e){return this.loadRefs(e,{input:"multiple",wrapper:"multiple"}),this.refs.input.forEach((e,t)=>{this.addEventListener(e,this.inputInfo.changeEvent,()=>this.updateValue(null,{modified:!0})),this.addShortcut(e,this.component.values[t].shortcut),this.isRadio&&(e.checked=this.dataValue===e.value,this.addEventListener(e,"keyup",t=>{" "===t.key&&this.dataValue===e.value&&(t.preventDefault(),this.updateValue(null,{modified:!0}))}))}),super.attach(e)}detach(e){e&&this.refs.input&&this.refs.input.forEach((e,t)=>{this.removeShortcut(e,this.component.values[t].shortcut)})}getValue(){if(this.viewOnly||!this.refs.input||!this.refs.input.length)return this.dataValue;let e=this.dataValue;return this.refs.input.forEach(t=>{t.checked&&(e=t.value)}),e}getValueAsString(t){if(!t)return"";if(!e.isString(t))return e.toString(t);const i=e.find(this.component.values,e=>e.value===t);return e.get(i,"label","")}setValueAt(e,t){if(this.refs.input&&this.refs.input[e]&&null!==t&&void 0!==t){const i=this.refs.input[e].value;this.refs.input[e].checked=i===t.toString()}}updateValue(e,t){const i=super.updateValue(e,t);if(i&&this.refs.wrapper){const e=this.dataValue,t="radio-selected";this.refs.wrapper.forEach((i,a)=>{const s=this.refs.input[a];s&&s.value.toString()===e.toString()?this.addClass(i,t):this.removeClass(i,t)})}return t&&t.modified&&this.isRadio?(this.currentValue=this.dataValue,!(t&&t.noUpdateEvent)&&this.previousValue===this.currentValue&&(this.resetValue(),this.triggerChange()),this.previousValue=this.dataValue,i):i}normalizeValue(e){switch(this.component.dataType||"auto"){case"auto":!isNaN(parseFloat(e))&&isFinite(e)&&(e=+e),"true"===e&&(e=!0),"false"===e&&(e=!1);break;case"number":e=+e;break;case"string":e="object"==typeof e?JSON.stringify(e):e.toString();break;case"boolean":e=!(!e||"false"===e.toString())}return super.normalizeValue(e)}}});
//# sourceMappingURL=../../sourcemaps/components/radio/Radio.js.map
