/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["../field/Field","skylark-lodash"],function(t,e){"use strict";return class extends t{get dataValue(){const t=super.dataValue;return!t&&this.component.multiple?[]:t}set dataValue(t){super.dataValue=t}get defaultValue(){let t=super.defaultValue;return this.component.multiple&&(t=e.isArray(t)?t.length?t:[super.emptyValue]:[t]),t}get addAnother(){return this.t(this.component.addAnother||" Add Another")}useWrapper(){return this.component.hasOwnProperty("multiple")&&this.component.multiple}render(){if(!this.useWrapper())return super.render(`<div ref="element">${this.renderElement(this.dataValue)}</div>`);let t=this.dataValue;return Array.isArray(t)||(t=t?[t]:[]),super.render(this.renderTemplate("multiValueTable",{rows:t.map(this.renderRow.bind(this)).join(""),disabled:this.disabled,addAnother:this.addAnother}))}renderElement(){return""}renderRow(t,e){return this.renderTemplate("multiValueRow",{index:e,disabled:this.disabled,element:`${this.renderElement(t,e)}`})}attach(t){const e=super.attach(t);if(this.loadRefs(t,{addButton:"multiple",input:"multiple",removeRow:"multiple",mask:"multiple",select:"multiple"}),this.refs.input.forEach(this.attachElement.bind(this)),this.component.multiple)return this.refs.removeRow.forEach((t,e)=>{this.addEventListener(t,"click",t=>{t.preventDefault(),this.removeValue(e)})}),this.refs.addButton.forEach(t=>{this.addEventListener(t,"click",t=>{t.preventDefault(),this.addValue()})}),e}detach(){this.refs.input&&this.refs.input.length&&this.refs.input.forEach(t=>{t.mask&&t.mask.destroy(),t.widget&&t.widget.destroy()}),this.refs.mask&&this.refs.mask.length&&this.refs.mask.forEach(t=>{t.mask&&t.mask.destroy()}),super.detach()}attachElement(t,s){this.addEventListener(t,this.inputInfo.changeEvent,()=>{const a=e.get(this.component,"case","mixed");if("mixed"!==a){const{selectionStart:e,selectionEnd:s}=t;"uppercase"===a&&t.value&&(t.value=t.value.toUpperCase()),"lowercase"===a&&t.value&&(t.value=t.value.toLowerCase()),t.selectionStart&&t.selectionEnd&&(t.selectionStart=e,t.selectionEnd=s)}if(!t.mask)return this.updateValue(null,{modified:"hidden"!==this.component.type},s);setTimeout(()=>this.updateValue(null,{modified:"hidden"!==this.component.type},s),1)}),this.attachMultiMask(s)||this.setInputMask(t)}onSelectMaskHandler(t){this.updateMask(t.target.maskInput,this.getMaskPattern(t.target.value))}getMaskPattern(t){if(this.multiMasks||(this.multiMasks={}),this.multiMasks[t])return this.multiMasks[t];const e=this.component.inputMasks.find(e=>e.label===t);return this.multiMasks[t]=e?e.mask:this.component.inputMasks[0].mask,this.multiMasks[t]}attachMultiMask(t){if(!(this.isMultipleMasksField&&this.component.inputMasks.length&&this.refs.input.length))return!1;const e=this.refs.select[t];return e.onchange=this.onSelectMaskHandler.bind(this),e.maskInput=this.refs.mask[t],this.setInputMask(e.maskInput,this.component.inputMasks[0].mask),!0}updateMask(t,e){e&&(this.setInputMask(t,e,!this.component.placeholder),this.updateValue())}addNewValue(t){void 0===t&&(t=this.component.defaultValue?this.component.defaultValue:this.emptyValue,Array.isArray(t)&&0===t.length&&(t=this.emptyValue));let e=this.dataValue||[];Array.isArray(e)||(e=[e]),Array.isArray(t)?e=e.concat(t):e.push(t),this.dataValue=e}addValue(){this.addNewValue(),this.redraw(),this.checkConditions(),this.isEmpty(this.dataValue)||this.restoreValue(),this.root&&this.root.onChange()}}});
//# sourceMappingURL=../../../sourcemaps/components/_classes/multivalue/Multivalue.js.map
