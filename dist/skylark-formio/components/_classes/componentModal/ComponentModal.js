/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(function(){"use strict";return class{static render(e,t,n){const s=e.renderTemplate("component",t,n);return e.renderTemplate("componentModal",{...t,children:s})}constructor(e,t){this.component=e,this.modal=t,this.currentValue=this.component.dataValue,this.dataLoaded=!1,this.init()}get refs(){return this.component.refs}init(){this.loadRefs()}setValue(e){this.dataLoaded||(this.currentValue=e,this.dataLoaded=!0,this.updateView())}setOpenModalElement(e){this.openModalTemplate=e,this.component.setContent(this.refs.openModalWrapper,e),this.loadRefs(),this.setEventListeners()}loadRefs(){this.component.loadRefs(this.modal,{modalOverlay:"single",modalContents:"single",modalClose:"single",openModalWrapper:"single",openModal:"single",modalSave:"single",modalWrapper:"single"})}setEventListeners(){this.component.addEventListener(this.refs.openModal,"click",this.openModalHandler.bind(this)),this.component.addEventListener(this.refs.modalOverlay,"click",this.closeModalHandler.bind(this)),this.component.addEventListener(this.refs.modalClose,"click",this.closeModalHandler.bind(this)),this.component.addEventListener(this.refs.modalSave,"click",this.saveModalValueHandler.bind(this))}setOpenEventListener(){this.component.loadRefs(this.modal,{openModal:"single"}),this.component.addEventListener(this.refs.openModal,"click",this.openModalHandler.bind(this))}openModalHandler(e){e.preventDefault(),this.refs.modalWrapper.classList.remove("component-rendering-hidden")}updateView(){const e=this.currentValue===this.component.defaultValue?this.openModalTemplate:this.component.getModalPreviewTemplate();this.component.setContent(this.refs.openModalWrapper,e),this.setOpenEventListener()}closeModal(){this.refs.modalWrapper.classList.add("component-rendering-hidden"),this.updateView()}closeModalHandler(e){e.preventDefault(),this.component.setValue(this.currentValue),this.closeModal()}saveModalValueHandler(e){e.preventDefault(),this.currentValue=this.component.dataValue,this.closeModal()}}});
//# sourceMappingURL=../../../sourcemaps/components/_classes/componentModal/ComponentModal.js.map
