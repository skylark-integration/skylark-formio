/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","skylark-dragula","../_classes/nestedarray/NestedArrayComponent","../../utils/utils"],function(t,e,s,o){"use strict";return class i extends s{static schema(...t){return s.schema({label:"Data Grid",key:"dataGrid",type:"datagrid",clearOnHide:!0,input:!0,tree:!0,components:[]},...t)}static get builderInfo(){return{title:"Data Grid",icon:"th",group:"data",documentation:"http://help.form.io/userguide/#datagrid",weight:30,schema:i.schema()}}constructor(...t){super(...t),this.type="datagrid"}init(){this.components=this.components||[],this.rows=[],this.createRows(!0),this.visibleColumns={},this.checkColumns()}get dataValue(){const t=super.dataValue;return t&&Array.isArray(t)?t:this.emptyValue}set dataValue(t){super.dataValue=t}get defaultSchema(){return i.schema()}get emptyValue(){return[{}]}get addAnotherPosition(){return t.get(this.component,"addAnotherPosition","bottom")}get minLength(){return this.hasRowGroups()?t.sum(this.getGroupSizes()):t.get(this.component,"validate.minLength",0)}get defaultValue(){const t=super.defaultValue;let e;for(let s=(e=Array.isArray(t)?t:t&&"object"==typeof t?[t]:this.emptyValue).length;s<this.minLength;s++)e.push({});return e}set disabled(e){super.disabled=e,t.each(this.refs[`${this.datagridKey}-addRow`],t=>{t.disabled=e}),t.each(this.refs[`${this.datagridKey}-removeRow`],t=>{t.disabled=e})}get disabled(){return super.disabled}get datagridKey(){return`datagrid-${this.key}`}get allowReorder(){return!this.options.readOnly&&t.get(this.component,"reorder",!1)}get iteratableRows(){return this.rows.map((t,e)=>({components:t,data:this.dataValue[e]}))}getRowChunks(e,s){const[,o]=e.reduce(([t,e],s)=>{const o=t+s;return[o,[...e,[t,o]]]},[0,[]]);return o.map(e=>t.slice(s,...e))}getGroups(){const e=t.get(this.component,"rowGroups",[]),s=t.map(e,"numberOfRows").slice(0,-1).reduce((t,e)=>{const s=t[t.length-1];return t.concat(s+e)},[0]);return e.reduce((t,e,o)=>({...t,[s[o]]:e}),{})}getGroupSizes(){return t.map(t.get(this.component,"rowGroups",[]),"numberOfRows")}hasRowGroups(){return t.get(this,"component.enableRowGroups",!1)&&!this.builderMode}totalRowsNumber(e){return t.sum(t.map(e,"numberOfRows"))}setStaticValue(e){this.dataValue=t.range(e).map(()=>({}))}hasExtraColumn(){return this.hasRemoveButtons()||this.canAddColumn}hasRemoveButtons(){return!this.component.disableAddingRemovingRows&&!this.options.readOnly&&!this.disabled&&this.fullMode&&this.dataValue.length>t.get(this.component,"validate.minLength",0)}hasTopSubmit(){return this.hasAddButton()&&["top","both"].includes(this.addAnotherPosition)}hasBottomSubmit(){return this.hasAddButton()&&["bottom","both"].includes(this.addAnotherPosition)}get canAddColumn(){return this.builderMode}render(){const e=this.getColumns();return super.render(this.renderTemplate("datagrid",{rows:this.getRows(),columns:e,groups:this.hasRowGroups()?this.getGroups():[],visibleColumns:this.visibleColumns,hasToggle:t.get(this,"component.groupToggle",!1),hasHeader:this.hasHeader(),hasExtraColumn:this.hasExtraColumn(),hasAddButton:this.hasAddButton(),hasRemoveButtons:this.hasRemoveButtons(),hasTopSubmit:this.hasTopSubmit(),hasBottomSubmit:this.hasBottomSubmit(),hasGroups:this.hasRowGroups(),numColumns:e.length+(this.hasExtraColumn()?1:0),datagridKey:this.datagridKey,allowReorder:this.allowReorder,builder:this.builderMode,canAddColumn:this.canAddColumn,placeholder:this.renderTemplate("builderPlaceholder",{position:this.componentComponents.length})}))}getRows(){return this.rows.map(e=>{const s={};return t.each(e,(t,e)=>{s[e]=t.render()}),s})}getColumns(){return this.component.components.filter(t=>!this.visibleColumns.hasOwnProperty(t.key)||this.visibleColumns[t.key])}hasHeader(){return this.component.components.reduce((t,e)=>t||(e.label||e.title)&&!e.hideLabel,!1)}attach(t){this.loadRefs(t,{[`${this.datagridKey}-row`]:"multiple",[`${this.datagridKey}-tbody`]:"single",[`${this.datagridKey}-addRow`]:"multiple",[`${this.datagridKey}-removeRow`]:"multiple",[`${this.datagridKey}-group-header`]:"multiple",[this.datagridKey]:"multiple"}),this.allowReorder&&(this.refs[`${this.datagridKey}-row`].forEach((t,e)=>{t.dragInfo={index:e}}),this.dragula=e([this.refs[`${this.datagridKey}-tbody`]],{moves:(t,e,s)=>s.classList.contains("formio-drag-button")}).on("drop",this.onReorder.bind(this))),this.refs[`${this.datagridKey}-addRow`].forEach(t=>{this.addEventListener(t,"click",this.addRow.bind(this))}),this.refs[`${this.datagridKey}-removeRow`].forEach((t,e)=>{this.addEventListener(t,"click",this.removeRow.bind(this,e))}),this.hasRowGroups()&&(this.refs.chunks=this.getRowChunks(this.getGroupSizes(),this.refs[`${this.datagridKey}-row`]),this.refs[`${this.datagridKey}-group-header`].forEach((t,e)=>{this.addEventListener(t,"click",()=>this.toggleGroup(t,e))}));const s=this.getColumns(),o=s.length;return this.rows.forEach((t,e)=>{let i=0;s.forEach(t=>{this.attachComponents(this.refs[this.datagridKey][e*o+i],[this.rows[e][t.key]],this.component.components),i++})}),super.attach(t)}onReorder(t,e,s,i){if(!t.dragInfo||i&&!i.dragInfo)return void console.warn("There is no Drag Info available for either dragged or sibling element");const r=t.dragInfo.index,a=i?i.dragInfo.index:this.dataValue.length,n=a>r,h=o.fastCloneDeep(this.dataValue),d=h[r];h.splice(a,0,d),h.splice(n?r:r+1,1),this.setValue(h),this.redraw()}addRow(){const t=this.rows.length;this.dataValue.length===t&&this.dataValue.push({}),this.rows[t]=this.createRowComponents(this.dataValue[t],t),this.checkConditions(),this.redraw()}removeRow(e){this.splice(e);const[s]=this.rows.splice(e,1);t.each(s,t=>this.removeComponent(t)),this.redraw()}getRowValues(){return this.dataValue}createRows(e){let s=!1;const o=this.getRowValues();return o.forEach((e,o)=>{this.rows[o]?t.each(this.rows[o],t=>t.data=e):(this.rows[o]=this.createRowComponents(e,o),s=!0)}),this.rows.splice(o.length),!e&&s&&this.redraw(),s}createRowComponents(e,s){const o={};return this.component.components.map((i,r)=>{const a=t.clone(this.options);a.name+=`[${s}]`,a.row=`${s}-${r}`;const n=this.createComponent(i,a,e);n.parentDisabled=!!this.disabled,n.path&&i.key&&(n.path=n.path.replace(new RegExp(`\\.${i.key}$`),`[${s}].${i.key}`)),n.rowIndex=s,n.inDataGrid=!0,o[i.key]=n}),o}checkValidity(t,e,s){return t=t||this.rootValue,s=s||this.data,this.checkCondition(s,t)?!!this.checkComponentValidity(t,e,s)&&this.checkRows("checkValidity",t,e,!0):(this.setCustomValidity(""),!0)}checkColumns(e,s={}){e=e||this.rootValue;let o=!1;if(!this.rows||!this.rows.length)return{rebuild:!1,show:!1};if(this.builderMode)return{rebuild:!1,show:!0};const i={},r=this.dataValue;this.rows.forEach((o,a)=>{t.each(o,(t,o)=>{t&&"function"==typeof t.checkConditions&&(i[o]=!!i[o]||t.checkConditions(e,s,r[a])&&"hidden"!==t.type)})});const a=!t.isEqual(i,this.visibleColumns);return t.each(i,t=>{o|=t}),this.visibleColumns=i,{rebuild:a,show:o}}checkComponentConditions(t,e,s){if(!super.checkComponentConditions(t,e,s))return!1;const{rebuild:o,show:i}=this.checkColumns(t,e);return o&&this.redraw(),i}setValue(e,s={}){if(!e)return this.dataValue=this.defaultValue,this.createRows(),!1;Array.isArray(e)||("object"==typeof e?e=[e]:(this.createRows(),e=[{}])),e&&!e.length&&e.push({});const o=this.hasChanged(e,this.dataValue);return this.dataValue=e,this.createRows(),this.rows.forEach((o,i)=>{e.length<=i||t.each(o,t=>{t.rowIndex=i,this.setNestedValue(t,e[i],s)})}),this.updateOnChange(s,o),o}restoreComponentsContext(){this.rows.forEach((e,s)=>t.forIn(e,t=>t.data=this.dataValue[s]))}getComponent(e,s){e=Array.isArray(e)?e:[e];const[o,...i]=e;let r=[];return t.isString(o)?(this.everyComponent((t,e)=>{if(t.component.key===o){let o=t;i.length>0&&"getComponent"in t?o=t.getComponent(i,s):s&&s(t,e),r=r.concat(o)}}),r.length>0?r:null):r}toggleGroup(e,s){e.classList.toggle("collapsed"),t.each(this.refs.chunks[s],t=>{t.classList.toggle("hidden")})}}});
//# sourceMappingURL=../../sourcemaps/components/datagrid/DataGrid.js.map
