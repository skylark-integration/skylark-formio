/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["chai","../utils"],function(e,o){"use strict";describe("Lodash operators",()=>{describe("Arrays",()=>{}),describe("Collection",()=>{}),describe("Date",()=>{}),describe("Function",()=>{}),describe("Lang",()=>{it("isEqual",()=>{e.expect(o.jsonLogic.apply({_isEqual:[[2,3],[2,3]]})).to.be.equal(!0),e.expect(o.jsonLogic.apply({_isEqual:[[2,3],[2,4]]})).to.be.equal(!1)})}),describe("Math",()=>{it("add",()=>{e.expect(o.jsonLogic.apply({_add:[2,3]})).to.be.equal(5)}),it("ceil",()=>{e.expect(o.jsonLogic.apply({_ceil:[4.006]})).to.be.equal(5)}),it("divide",()=>{e.expect(o.jsonLogic.apply({_divide:[6,3]})).to.be.equal(2)}),it("floor",()=>{e.expect(o.jsonLogic.apply({_floor:[4.906]})).to.be.equal(4)}),it("max",()=>{e.expect(o.jsonLogic.apply({_max:[[2,5,6,3]]})).to.be.equal(6)}),it("maxBy",()=>{const t=[{n:4},{n:2},{n:8},{n:6}];e.expect(o.jsonLogic.apply({_maxBy:[{var:""},"n"]},t)).to.be.equal(t[2]),e.expect(o.jsonLogic.apply({_maxBy:[{var:""},{_property:"n"}]},t)).to.be.equal(t[2])}),it("mean",()=>{e.expect(o.jsonLogic.apply({_mean:[[2,5,6,3]]})).to.be.equal(4)}),it("meanBy",()=>{const t=[{n:4},{n:2},{n:8},{n:6}];e.expect(o.jsonLogic.apply({_meanBy:[{var:""},"n"]},t)).to.be.equal(5),e.expect(o.jsonLogic.apply({_meanBy:[{var:""},{_property:"n"}]},t)).to.be.equal(5)}),it("min",()=>{e.expect(o.jsonLogic.apply({_min:[[2,5,6,3]]})).to.be.equal(2)}),it("minBy",()=>{const t=[{n:4},{n:2},{n:8},{n:6}];e.expect(o.jsonLogic.apply({_minBy:[{var:""},"n"]},t)).to.be.equal(t[1]),e.expect(o.jsonLogic.apply({_minBy:[{var:""},{_property:"n"}]},t)).to.be.equal(t[1])}),it("multiply",()=>{e.expect(o.jsonLogic.apply({_multiply:[2,3]})).to.be.equal(6)}),it("round",()=>{e.expect(o.jsonLogic.apply({_round:[4.006]})).to.be.equal(4),e.expect(o.jsonLogic.apply({_round:[4.906]})).to.be.equal(5)}),it("multiply",()=>{e.expect(o.jsonLogic.apply({_multiply:[2,3]})).to.be.equal(6)}),it("subtract",()=>{e.expect(o.jsonLogic.apply({_subtract:[2,3]})).to.be.equal(-1)}),it("sum",()=>{e.expect(o.jsonLogic.apply({_sum:[[2,3]]})).to.be.equal(5)}),it("sumBy",()=>{const t=[{n:4},{n:2},{n:8},{n:6}];e.expect(o.jsonLogic.apply({_sumBy:[{var:""},"n"]},t)).to.be.equal(20),e.expect(o.jsonLogic.apply({_sumBy:[{var:""},{_property:"n"}]},t)).to.be.equal(20)})}),describe("Number",()=>{}),describe("Object",()=>{}),describe("String",()=>{}),describe("Util",()=>{it("property",()=>{e.expect(o.jsonLogic.apply({_sumBy:[{var:""},{_property:"a.b"}]},[{a:{b:2}},{a:{b:1}}])).to.be.equal(3)})})})});
//# sourceMappingURL=../../sourcemaps/utils/jsonlogic/operators.spec.js.map
