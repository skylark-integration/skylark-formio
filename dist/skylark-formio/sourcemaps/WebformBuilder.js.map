{"version":3,"sources":["WebformBuilder.js"],"names":["define","langx","Webform","Component","dragula","Tooltip","NativePromise","Components","Formio","a","b","BuilderUtils","_","Templates","[object Object]","element","options","arguments","HTMLElement","skipInit","super","this","builderHeight","schemas","sideBarScroll","get","sideBarScrollOffset","componentInfo","type","components","component","builderInfo","dragDropEnabled","builder","defaultsDeep","defaultGroups","each","config","key","groups","groupOrder","group","componentOrder","subgroups","Object","keys","map","groupKey","push","filter","ignore","sort","weight","schema","addBuilderComponentInfo","info","comp","hooks","renderComponent","html","self","disabled","includes","parent","noDragDrop","renderTemplate","replace","renderComponents","length","nodrop","position","renderInput","name","renderLoading","attachComponents","container","containerElement","querySelector","formioContainer","formioComponent","allowDrop","containers","children","attachDatagrid","loadRefs","refs","parentNode","attachComponent","removeComponent","editComponent","moveComponent","copyComponent","pasteComponent","editJson","trigger","placement","title","t","addEventListener","pasteToolTip","hide","getParentElement","query","params","limit","select","resourceTag","tags","hasOwnProperty","formio","projectUrl","isResourcesDisabled","resource","noProject","resourceOptions","loadForms","then","resources","addExistingResourceFields","attachMode","webform","createForm","index","resourceKey","subgroup","default","eachComponent","resourceFilter","indexOf","componentName","label","upperFirst","merge","fastCloneDeep","lockKey","source","noSource","undefined","_id","isNew","triggerRedraw","form","ready","basic","advanced","layout","data","premium","prototype","redraw","call","value","noDefaultSubmitButton","size","block","action","disableOnInvalid","theme","rebuild","getComponent","namespaceKey","recurseNamespace","tree","arrayTree","sidebar","scrollEnabled","groupId","id","render","on","populateRecaptchaSettings","attach","sidebar-anchor","sidebar-group","sidebar-container","current","handleBuilderSidebarScroll","window","sessionStorage","getItem","addClass","bootstrapVersion","forEach","style","display","getAttribute","anchor","clickedParentId","slice","clickedId","groupIndex","openByDefault","groupParent","initDragula","destroy","containersArray","Array","item","el","moves","from","classList","contains","copy","accepts","target","sibling","onDrop","clearBuilderSidebarScroll","detach","groupComponents","resourceGroups","resourceGroup","find","camelCase","placeholder","path","columnIndex","tableRowIndex","tableColumnIndex","tabIndex","findIndex","rows","row","some","column","columns","tab","getComponentInfo","splice","uniquify","findNamespaceRoot","getComponentsPath","addChildComponent","noNewEdit","resolve","emit","setForm","retVal","setTimeout","offsetHeight","isRecaptchaEnabled","set","original","remove","skipRemoveConfirm","isArray","message","confirm","removeChildComponent","changed","preview","omit","previewElement","componentEdit","setContent","defaultValueComponent","editForm","instance","hasComponent","assign","parentComponent","tabs","tIndex","compIndex","newComp","addComponent","pull","validators","checkValidity","build","repeatablePaths","Map","has","getComponents","setCustomValidity","parentContainer","dialog","close","submissionData","submission","componentJson","saveChildComponent","highlightInvalidComponents","isJsonEdit","saved","componentCopy","ComponentClass","isCustom","unknown","editFormOptions","clone","overrides","language","as","editor","input","tooltip","cloneDeep","ce","class","createModal","updateComponent","event","keyModified","everyComponent","setValue","preventDefault","setPristine","showErrors","saveComponent","dialogClose","removeEventListener","console","warn","setItem","JSON","stringify","removeClass","parse","groupInfo","initialized","updateBuilderGroup"],"mappings":"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","file":"../WebformBuilder.js","sourcesContent":["define([\n    'skylark-langx/langx',\n    './Webform',\n    './components/_classes/component/Component',\n    'skylark-dragula',\n    './vendors/tooltip-js/tooltip',\n    './vendors/getify/npo',\n    './components/Components',\n    './Formio',\n    './utils/utils',\n    './utils/formUtils',\n    './utils/builder',\n    'skylark-lodash',\n    './templates/Templates',\n    \"./components/builder\"\n], function (langx,Webform, Component, dragula, Tooltip, NativePromise, Components, Formio, a, b, BuilderUtils, _, Templates) {\n    'use strict';\n\n    class WebformBuilder extends Component {\n        constructor() {\n            let element, options;\n            if (arguments[0] instanceof HTMLElement || arguments[1]) {\n                element = arguments[0];\n                options = arguments[1];\n            } else {\n                options = arguments[0];\n            }\n            options.skipInit = false;\n            super(null, options);\n            this.element = element;\n            this.builderHeight = 0;\n            this.schemas = {};\n            this.sideBarScroll = _.get(this.options, 'sideBarScroll', true);\n            this.sideBarScrollOffset = _.get(this.options, 'sideBarScrollOffset', 0);\n            const componentInfo = {};\n            for (const type in Components.components) {\n                const component = Components.components[type];\n                if (component.builderInfo) {\n                    component.type = type;\n                    componentInfo[type] = component.builderInfo;\n                }\n            }\n            this.dragDropEnabled = true;\n            this.builder = _.defaultsDeep({}, this.options.builder, this.defaultGroups);\n            langx.each(this.defaultGroups, (config, key) => {\n                if (config === false) {\n                    this.builder[key] = false;\n                }\n            });\n            this.groups = {};\n            this.groupOrder = [];\n            for (const group in this.builder) {\n                if (this.builder[group]) {\n                    this.builder[group].key = group;\n                    this.groups[group] = this.builder[group];\n                    this.groups[group].components = this.groups[group].components || {};\n                    this.groups[group].componentOrder = this.groups[group].componentOrder || [];\n                    this.groups[group].subgroups = Object.keys(this.groups[group].groups || {}).map(groupKey => {\n                        this.groups[group].groups[groupKey].componentOrder = Object.keys(this.groups[group].groups[groupKey].components).map(key => key);\n                        return this.groups[group].groups[groupKey];\n                    });\n                    this.groupOrder.push(this.groups[group]);\n                }\n            }\n            this.groupOrder = this.groupOrder.filter(group => group && !group.ignore).sort((a, b) => a.weight - b.weight).map(group => group.key);\n            for (const type in Components.components) {\n                const component = Components.components[type];\n                if (component.builderInfo) {\n                    this.schemas[type] = component.builderInfo.schema;\n                    component.type = type;\n                    const builderInfo = component.builderInfo;\n                    builderInfo.key = component.type;\n                    this.addBuilderComponentInfo(builderInfo);\n                }\n            }\n            for (const group in this.groups) {\n                const info = this.groups[group];\n                for (const key in info.components) {\n                    const comp = info.components[key];\n                    if (comp) {\n                        if (comp.schema) {\n                            this.schemas[key] = comp.schema;\n                        }\n                        info.components[key] = comp === true ? componentInfo[key] : comp;\n                        info.components[key].key = key;\n                    }\n                }\n            }\n            for (const group in this.groups) {\n                if (this.groups[group] && this.groups[group].components) {\n                    this.groups[group].componentOrder = Object.keys(this.groups[group].components).map(key => this.groups[group].components[key]).filter(component => component && !component.ignore).sort((a, b) => a.weight - b.weight).map(component => component.key);\n                }\n            }\n            this.options.hooks = this.options.hooks || {};\n            this.options.hooks.renderComponent = (html, {self}) => {\n                if (self.type === 'form' && !self.key) {\n                    return html.replace('formio-component-form', '');\n                }\n                if (this.options.disabled && this.options.disabled.includes(self.key) || self.parent.noDragDrop) {\n                    return html;\n                }\n                return this.renderTemplate('builderComponent', { html });\n            };\n            this.options.hooks.renderComponents = (html, {components, self}) => {\n                if (self.type === 'datagrid' && components.length > 0 || self.noDragDrop) {\n                    return html;\n                }\n                if (!components || !components.length && !components.nodrop || self.type === 'form' && components.length <= 1 && (components.length === 0 || components[0].type === 'button')) {\n                    html = this.renderTemplate('builderPlaceholder', { position: 0 }) + html;\n                }\n                return this.renderTemplate('builderComponents', {\n                    key: self.key,\n                    type: self.type,\n                    html\n                });\n            };\n            this.options.hooks.renderInput = (html, {self}) => {\n                if (self.type === 'hidden') {\n                    return html + self.name;\n                }\n                return html;\n            };\n            this.options.hooks.renderLoading = (html, {self}) => {\n                if (self.type === 'form' && self.key) {\n                    return self.name;\n                }\n                return html;\n            };\n            this.options.hooks.attachComponents = (element, components, container, component) => {\n                if (!element) {\n                    return;\n                }\n                if (component.noDragDrop) {\n                    return element;\n                }\n                const containerElement = element.querySelector(`[ref=\"${ component.component.key }-container\"]`) || element;\n                containerElement.formioContainer = container;\n                containerElement.formioComponent = component;\n                if (this.dragula && this.allowDrop(element)) {\n                    this.dragula.containers.push(containerElement);\n                }\n                if ((component.type === 'datagrid' || component.type === 'datamap') && components.length > 0) {\n                    return element;\n                }\n                return element.children[0];\n            };\n            this.options.hooks.attachDatagrid = (element, component) => {\n                component.loadRefs(element, { [`${ component.key }-container`]: 'single' });\n                component.attachComponents(component.refs[`${ component.key }-container`].parentNode, [], component.component.components);\n            };\n            this.options.hooks.attachComponent = (element, component) => {\n                element.formioComponent = component;\n                component.loadRefs(element, {\n                    removeComponent: 'single',\n                    editComponent: 'single',\n                    moveComponent: 'single',\n                    copyComponent: 'single',\n                    pasteComponent: 'single',\n                    editJson: 'single'\n                });\n                if (component.refs.copyComponent) {\n                    new Tooltip(component.refs.copyComponent, {\n                        trigger: 'hover',\n                        placement: 'top',\n                        title: this.t('Copy')\n                    });\n                    component.addEventListener(component.refs.copyComponent, 'click', () => this.copyComponent(component));\n                }\n                if (component.refs.pasteComponent) {\n                    const pasteToolTip = new Tooltip(component.refs.pasteComponent, {\n                        trigger: 'hover',\n                        placement: 'top',\n                        title: this.t('Paste below')\n                    });\n                    component.addEventListener(component.refs.pasteComponent, 'click', () => {\n                        pasteToolTip.hide();\n                        this.pasteComponent(component);\n                    });\n                }\n                if (component.refs.moveComponent) {\n                    new Tooltip(component.refs.moveComponent, {\n                        trigger: 'hover',\n                        placement: 'top',\n                        title: this.t('Move')\n                    });\n                }\n                const parent = this.getParentElement(element);\n                if (component.refs.editComponent) {\n                    new Tooltip(component.refs.editComponent, {\n                        trigger: 'hover',\n                        placement: 'top',\n                        title: this.t('Edit')\n                    });\n                    component.addEventListener(component.refs.editComponent, 'click', () => this.editComponent(component.schema, parent, false, false, component.component));\n                }\n                if (component.refs.editJson) {\n                    new Tooltip(component.refs.editJson, {\n                        trigger: 'hover',\n                        placement: 'top',\n                        title: this.t('Edit JSON')\n                    });\n                    component.addEventListener(component.refs.editJson, 'click', () => this.editComponent(component.schema, parent, false, true, component.component));\n                }\n                if (component.refs.removeComponent) {\n                    new Tooltip(component.refs.removeComponent, {\n                        trigger: 'hover',\n                        placement: 'top',\n                        title: this.t('Remove')\n                    });\n                    component.addEventListener(component.refs.removeComponent, 'click', () => this.removeComponent(component.schema, parent, component.component));\n                }\n                return element;\n            };\n            const query = {\n                params: {\n                    type: 'resource',\n                    limit: 4294967295,\n                    select: '_id,title,name,components'\n                }\n            };\n            if (this.options && this.options.resourceTag) {\n                query.params.tags = [this.options.resourceTag];\n            } else if (!this.options || !this.options.hasOwnProperty('resourceTag')) {\n                query.params.tags = ['builder'];\n            }\n            const formio = new Formio(Formio.projectUrl);\n            const isResourcesDisabled = this.options.builder && this.options.builder.resource === false;\n            if (!formio.noProject && !isResourcesDisabled) {\n                const resourceOptions = this.options.builder && this.options.builder.resource;\n                formio.loadForms(query).then(resources => {\n                    if (resources.length) {\n                        this.builder.resource = {\n                            title: resourceOptions ? resourceOptions.title : 'Existing Resource Fields',\n                            key: 'resource',\n                            weight: resourceOptions ? resourceOptions.weight : 50,\n                            subgroups: [],\n                            components: [],\n                            componentOrder: []\n                        };\n                        this.groups.resource = {\n                            title: resourceOptions ? resourceOptions.title : 'Existing Resource Fields',\n                            key: 'resource',\n                            weight: resourceOptions ? resourceOptions.weight : 50,\n                            subgroups: [],\n                            components: [],\n                            componentOrder: []\n                        };\n                        if (!this.groupOrder.includes('resource')) {\n                            this.groupOrder.push('resource');\n                        }\n                        this.addExistingResourceFields(resources);\n                    }\n                });\n            }\n            this.options.attachMode = 'builder';\n            this.webform = this.webform || this.createForm(this.options);\n        }\n        allowDrop() {\n            return true;\n        }\n        addExistingResourceFields(resources) {\n            langx.each(resources, (resource, index) => {\n                const resourceKey = `resource-${ resource.name }`;\n                const subgroup = {\n                    key: resourceKey,\n                    title: resource.title,\n                    components: [],\n                    componentOrder: [],\n                    default: index === 0\n                };\n                b.eachComponent(resource.components, component => {\n                    if (component.type === 'button')\n                        return;\n                    if (this.options && this.options.resourceFilter && (!component.tags || component.tags.indexOf(this.options.resourceFilter) === -1))\n                        return;\n                    let componentName = component.label;\n                    if (!componentName && component.key) {\n                        componentName = langx.upperFirst(component.key);\n                    }\n                    subgroup.componentOrder.push(component.key);\n                    subgroup.components[component.key] = _.merge(a.fastCloneDeep(Components.components[component.type].builderInfo), { //_.merge\n                        key: component.key,\n                        title: componentName,\n                        group: 'resource',\n                        subgroup: resourceKey\n                    }, {\n                        schema: {\n                            ...component,\n                            label: component.label,\n                            key: component.key,\n                            lockKey: true,\n                            source: !this.options.noSource ? resource._id : undefined,\n                            isNew: true\n                        }\n                    });\n                }, true);\n                this.groups.resource.subgroups.push(subgroup);\n            });\n            this.triggerRedraw();\n        }\n        createForm(options) {\n            this.webform = new Webform(this.element, options);\n            if (this.element) {\n                this.loadRefs(this.element, { form: 'single' });\n                if (this.refs.form) {\n                    this.webform.element = this.refs.form;\n                }\n            }\n            return this.webform;\n        }\n        get ready() {\n            return this.webform.ready;\n        }\n        get defaultGroups() {\n            return {\n                basic: {\n                    title: 'Basic',\n                    weight: 0,\n                    default: true\n                },\n                advanced: {\n                    title: 'Advanced',\n                    weight: 10\n                },\n                layout: {\n                    title: 'Layout',\n                    weight: 20\n                },\n                data: {\n                    title: 'Data',\n                    weight: 30\n                },\n                premium: {\n                    title: 'Premium',\n                    weight: 40\n                }\n            };\n        }\n        redraw() {\n            return Webform.prototype.redraw.call(this);\n        }\n        get form() {\n            return this.webform.form;\n        }\n        get schema() {\n            return this.webform.schema;\n        }\n        set form(value) {\n            if (!value.components) {\n                value.components = [];\n            }\n            const isShowSubmitButton = !this.options.noDefaultSubmitButton && !value.components.length;\n            if (isShowSubmitButton) {\n                value.components.push({\n                    type: 'button',\n                    label: 'Submit',\n                    key: 'submit',\n                    size: 'md',\n                    block: false,\n                    action: 'submit',\n                    disableOnInvalid: true,\n                    theme: 'primary'\n                });\n            }\n            this.webform.form = value;\n            this.rebuild();\n        }\n        get container() {\n            return this.webform.form.components;\n        }\n        findNamespaceRoot(component) {\n            const comp = b.getComponent(this.webform.form.components, component.key, true);\n            const namespaceKey = this.recurseNamespace(comp);\n            if (!namespaceKey || this.form.key === namespaceKey) {\n                return this.form.components;\n            }\n            if (namespaceKey === component.key) {\n                return [\n                    ...component.components,\n                    component\n                ];\n            }\n            const namespaceComponent = b.getComponent(this.form.components, namespaceKey, true);\n            return namespaceComponent.components;\n        }\n        recurseNamespace(component) {\n            if (!component) {\n                return null;\n            }\n            if ([\n                    'container',\n                    'datagrid',\n                    'editgrid',\n                    'tree'\n                ].includes(component.type) || component.tree || component.arrayTree) {\n                return component.key;\n            }\n            return this.recurseNamespace(component.parent);\n        }\n        render() {\n            return this.renderTemplate('builder', {\n                sidebar: this.renderTemplate('builderSidebar', {\n                    scrollEnabled: this.sideBarScroll,\n                    groupOrder: this.groupOrder,\n                    groupId: `builder-sidebar-${ this.id }`,\n                    groups: this.groupOrder.map(groupKey => this.renderTemplate('builderSidebarGroup', {\n                        group: this.groups[groupKey],\n                        groupKey,\n                        groupId: `builder-sidebar-${ this.id }`,\n                        subgroups: this.groups[groupKey].subgroups.map(group => this.renderTemplate('builderSidebarGroup', {\n                            group,\n                            groupKey: group.key,\n                            groupId: `group-container-${ groupKey }`,\n                            subgroups: []\n                        }))\n                    }))\n                }),\n                form: this.webform.render()\n            });\n        }\n        attach(element) {\n            this.on('change', form => {\n                this.populateRecaptchaSettings(form);\n            });\n            return super.attach(element).then(() => {\n                this.loadRefs(element, {\n                    form: 'single',\n                    sidebar: 'single',\n                    'container': 'multiple',\n                    'sidebar-anchor': 'multiple',\n                    'sidebar-group': 'multiple',\n                    'sidebar-container': 'multiple'\n                });\n                if (this.sideBarScroll && Templates.current.handleBuilderSidebarScroll) {\n                    Templates.current.handleBuilderSidebarScroll.call(this, this);\n                }\n                if (window.sessionStorage) {\n                    const data = window.sessionStorage.getItem('formio.clipboard');\n                    if (data) {\n                        this.addClass(this.refs.form, 'builder-paste-mode');\n                    }\n                }\n                if (!a.bootstrapVersion(this.options)) {\n                    this.refs['sidebar-group'].forEach(group => {\n                        group.style.display = group.getAttribute('data-default') === 'true' ? 'inherit' : 'none';\n                    });\n                    this.refs['sidebar-anchor'].forEach((anchor, index) => {\n                        this.addEventListener(anchor, 'click', () => {\n                            const clickedParentId = anchor.getAttribute('data-parent').slice('#builder-sidebar-'.length);\n                            const clickedId = anchor.getAttribute('data-target').slice('#group-'.length);\n                            this.refs['sidebar-group'].forEach((group, groupIndex) => {\n                                const openByDefault = group.getAttribute('data-default') === 'true';\n                                const groupId = group.getAttribute('id').slice('group-'.length);\n                                const groupParent = group.getAttribute('data-parent').slice('#builder-sidebar-'.length);\n                                group.style.display = openByDefault && groupParent === clickedId || groupId === clickedParentId || groupIndex === index ? 'inherit' : 'none';\n                            });\n                        }, true);\n                    });\n                }\n                if (this.dragDropEnabled) {\n                    this.initDragula();\n                }\n                if (this.refs.form) {\n                    return this.webform.attach(this.refs.form);\n                }\n            });\n        }\n        initDragula() {\n            const options = this.options;\n            if (this.dragula) {\n                this.dragula.destroy();\n            }\n            const containersArray = Array.prototype.slice.call(this.refs['sidebar-container']).filter(item => {\n                return item.id !== 'group-container-resource';\n            });\n            this.dragula = dragula(containersArray, {\n                moves(el) {\n                    let moves = true;\n                    const list = Array.from(el.classList).filter(item => item.indexOf('formio-component-') === 0);\n                    list.forEach(item => {\n                        const key = item.slice('formio-component-'.length);\n                        if (options.disabled && options.disabled.includes(key)) {\n                            moves = false;\n                        }\n                    });\n                    if (el.classList.contains('no-drag')) {\n                        moves = false;\n                    }\n                    return moves;\n                },\n                copy(el) {\n                    return el.classList.contains('drag-copy');\n                },\n                accepts(el, target) {\n                    return !el.contains(target) && !target.classList.contains('no-drop');\n                }\n            }).on('drop', (element, target, source, sibling) => this.onDrop(element, target, source, sibling));\n        }\n        detach() {\n            if (this.dragula) {\n                this.dragula.destroy();\n            }\n            this.dragula = null;\n            if (this.sideBarScroll && Templates.current.clearBuilderSidebarScroll) {\n                Templates.current.clearBuilderSidebarScroll.call(this, this);\n            }\n            super.detach();\n        }\n        getComponentInfo(key, group) {\n            let info;\n            if (this.schemas.hasOwnProperty(key)) {\n                info = a.fastCloneDeep(this.schemas[key]);\n            } else if (this.groups.hasOwnProperty(group)) {\n                const groupComponents = this.groups[group].components;\n                if (groupComponents.hasOwnProperty(key)) {\n                    info = a.fastCloneDeep(groupComponents[key].schema);\n                }\n            }\n            if (group.slice(0, group.indexOf('-')) === 'resource') {\n                const resourceGroups = this.groups.resource.subgroups;\n                const resourceGroup = _.find(resourceGroups, { key: group });\n                if (resourceGroup && resourceGroup.components.hasOwnProperty(key)) {\n                    info = a.fastCloneDeep(resourceGroup.components[key].schema);\n                }\n            }\n            if (info) {\n                info.key = _.camelCase(info.title || info.label || info.placeholder || info.type);\n            }\n            return info;\n        }\n        getComponentsPath(component, parent) {\n            let path = 'components';\n            let columnIndex = 0;\n            let tableRowIndex = 0;\n            let tableColumnIndex = 0;\n            let tabIndex = 0;\n            switch (parent.type) {\n            case 'table':\n                tableRowIndex = _.findIndex(parent.rows, row => row.some(column => column.components.some(comp => comp.key === component.key)));\n                tableColumnIndex = _.findIndex(parent.rows[tableRowIndex], column => column.components.some(comp => comp.key === component.key));\n                path = `rows[${ tableRowIndex }][${ tableColumnIndex }].components`;\n                break;\n            case 'columns':\n                columnIndex = _.findIndex(parent.columns, column => column.components.some(comp => comp.key === component.key));\n                path = `columns[${ columnIndex }].components`;\n                break;\n            case 'tabs':\n                tabIndex = _.findIndex(parent.components, tab => tab.components.some(comp => comp.key === component.key));\n                path = `components[${ tabIndex }].components`;\n                break;\n            }\n            return path;\n        }\n        onDrop(element, target, source, sibling) {\n            if (!target) {\n                return;\n            }\n            if (element.contains(target)) {\n                return;\n            }\n            const key = element.getAttribute('data-key');\n            const type = element.getAttribute('data-type');\n            const group = element.getAttribute('data-group');\n            let info, isNew, path, index;\n            if (key) {\n                info = this.getComponentInfo(key, group);\n                if (!info && type) {\n                    info = this.getComponentInfo(type, group);\n                }\n                isNew = true;\n            } else if (source.formioContainer) {\n                index = _.findIndex(source.formioContainer, { key: element.formioComponent.component.key });\n                if (index !== -1) {\n                    info = source.formioContainer.splice(_.findIndex(source.formioContainer, { key: element.formioComponent.component.key }), 1);\n                    info = info[0];\n                }\n            }\n            if (!info) {\n                return;\n            }\n            if (target !== source) {\n                BuilderUtils.uniquify(this.findNamespaceRoot(target.formioComponent.component), info);\n            }\n            const parent = target.formioComponent;\n            if (target.formioContainer) {\n                if (sibling) {\n                    if (!sibling.getAttribute('data-noattach')) {\n                        index = _.findIndex(target.formioContainer, { key: _.get(sibling, 'formioComponent.component.key') });\n                        index = index === -1 ? 0 : index;\n                    } else {\n                        index = sibling.getAttribute('data-position');\n                    }\n                    if (index !== -1) {\n                        target.formioContainer.splice(index, 0, info);\n                    }\n                } else {\n                    target.formioContainer.push(info);\n                }\n                path = this.getComponentsPath(info, parent.component);\n                index = _.findIndex(_.get(parent.schema, path), { key: info.key });\n                if (index === -1) {\n                    index = 0;\n                }\n            }\n            if (parent && parent.addChildComponent) {\n                parent.addChildComponent(info, element, target, source, sibling);\n            }\n            if (isNew && !this.options.noNewEdit) {\n                this.editComponent(info, target, isNew);\n            }\n            let rebuild;\n            if (target !== source) {\n                if (source.formioContainer && source.contains(target)) {\n                    rebuild = source.formioComponent.rebuild();\n                } else if (target.contains(source)) {\n                    rebuild = target.formioComponent.rebuild();\n                } else {\n                    if (source.formioContainer) {\n                        rebuild = source.formioComponent.rebuild();\n                    }\n                    rebuild = target.formioComponent.rebuild();\n                }\n            } else {\n                rebuild = target.formioComponent.rebuild();\n            }\n            if (!rebuild) {\n                rebuild = NativePromise.resolve();\n            }\n            return rebuild.then(() => {\n                this.emit('addComponent', info, parent, path, index, isNew);\n            });\n        }\n        setForm(form) {\n            this.emit('change', form);\n            return super.setForm(form).then(retVal => {\n                setTimeout(() => this.builderHeight = this.refs.form.offsetHeight, 200);\n                return retVal;\n            });\n        }\n        populateRecaptchaSettings(form) {\n            var isRecaptchaEnabled = false;\n            if (this.form.components) {\n                b.eachComponent(form.components, component => {\n                    if (isRecaptchaEnabled) {\n                        return;\n                    }\n                    if (component.type === 'recaptcha') {\n                        isRecaptchaEnabled = true;\n                        return false;\n                    }\n                });\n                if (isRecaptchaEnabled) {\n                    _.set(form, 'settings.recaptcha.isEnabled', true);\n                } else if (_.get(form, 'settings.recaptcha.isEnabled')) {\n                    _.set(form, 'settings.recaptcha.isEnabled', false);\n                }\n            }\n        }\n        removeComponent(component, parent, original) {\n            if (!parent) {\n                return;\n            }\n            let remove = true;\n            if (!component.skipRemoveConfirm && (Array.isArray(component.components) && component.components.length || Array.isArray(component.rows) && component.rows.length || Array.isArray(component.columns) && component.columns.length)) {\n                const message = 'Removing this component will also remove all of its children. Are you sure you want to do this?';\n                remove = window.confirm(this.t(message));\n            }\n            if (!original) {\n                original = parent.formioContainer.find(comp => comp.key === component.key);\n            }\n            const index = parent.formioContainer ? parent.formioContainer.indexOf(original) : 0;\n            if (remove && index !== -1) {\n                const path = this.getComponentsPath(component, parent.formioComponent.component);\n                if (parent.formioContainer) {\n                    parent.formioContainer.splice(index, 1);\n                } else if (parent.formioComponent && parent.formioComponent.removeChildComponent) {\n                    parent.formioComponent.removeChildComponent(component);\n                }\n                const rebuild = parent.formioComponent.rebuild() || NativePromise.resolve();\n                rebuild.then(() => {\n                    this.emit('removeComponent', component, parent.formioComponent.schema, path, index);\n                    this.emit('change', this.form);\n                });\n            }\n            return remove;\n        }\n        updateComponent(component, changed) {\n            if (this.preview) {\n                this.preview.form = {\n                    components: [_.omit(component, [\n                            'hidden',\n                            'conditional',\n                            'calculateValue',\n                            'logic',\n                            'autofocus',\n                            'customConditional'\n                        ])]\n                };\n                const previewElement = this.componentEdit.querySelector('[ref=\"preview\"]');\n                if (previewElement) {\n                    this.setContent(previewElement, this.preview.render());\n                    this.preview.attach(previewElement);\n                }\n            }\n            const defaultValueComponent = b.getComponent(this.editForm.components, 'defaultValue');\n            if (defaultValueComponent) {\n                const defaultChanged = changed && (changed.component && changed.component.key === 'defaultValue' || changed.instance && defaultValueComponent.hasComponent && defaultValueComponent.hasComponent(changed.instance));\n                if (!defaultChanged) {\n                    _.assign(defaultValueComponent.component, _.omit(component, [\n                        'key',\n                        'label',\n                        'placeholder',\n                        'tooltip',\n                        'hidden',\n                        'autofocus',\n                        'validate',\n                        'disabled',\n                        'defaultValue',\n                        'customDefaultValue',\n                        'calculateValue',\n                        'conditional',\n                        'customConditional'\n                    ]));\n                    const parentComponent = defaultValueComponent.parent;\n                    let tabIndex = -1;\n                    let index = -1;\n                    parentComponent.tabs.some((tab, tIndex) => {\n                        tab.some((comp, compIndex) => {\n                            if (comp.id === defaultValueComponent.id) {\n                                tabIndex = tIndex;\n                                index = compIndex;\n                                return true;\n                            }\n                            return false;\n                        });\n                    });\n                    if (tabIndex !== -1 && index !== -1) {\n                        const sibling = parentComponent.tabs[tabIndex][index + 1];\n                        parentComponent.removeComponent(defaultValueComponent);\n                        const newComp = parentComponent.addComponent(defaultValueComponent.component, defaultValueComponent.data, sibling);\n                        _.pull(newComp.validators, 'required');\n                        parentComponent.tabs[tabIndex].splice(index, 1, newComp);\n                        newComp.checkValidity = () => true;\n                        newComp.build(defaultValueComponent.element);\n                    }\n                }\n            }\n            this.emit('updateComponent', component);\n        }\n        highlightInvalidComponents() {\n            const repeatablePaths = [];\n            const keys = new Map();\n            b.eachComponent(this.form.components, (comp, path) => {\n                if (!comp.key) {\n                    return;\n                }\n                if (keys.has(comp.key)) {\n                    if (keys.get(comp.key).includes(path)) {\n                        repeatablePaths.push(path);\n                    } else {\n                        keys.set(comp.key, [\n                            ...keys.get(comp.key),\n                            path\n                        ]);\n                    }\n                } else {\n                    keys.set(comp.key, [path]);\n                }\n            });\n            b.eachComponent(this.webform.getComponents(), (comp, path) => {\n                if (repeatablePaths.includes(path)) {\n                    comp.setCustomValidity(`API Key is not unique: ${ comp.key }`);\n                }\n            });\n        }\n        saveComponent(component, parent, isNew, original) {\n            this.editForm.detach();\n            const parentContainer = parent ? parent.formioContainer : this.container;\n            const parentComponent = parent ? parent.formioComponent : this;\n            this.dialog.close();\n            const path = parentContainer ? this.getComponentsPath(component, parentComponent.component) : '';\n            if (!original) {\n                original = parent.formioContainer.find(comp => comp.key === component.key);\n            }\n            const index = parentContainer ? parentContainer.indexOf(original) : 0;\n            if (index !== -1) {\n                let submissionData = this.editForm.submission.data;\n                submissionData = submissionData.componentJson || submissionData;\n                if (parentContainer) {\n                    parentContainer[index] = submissionData;\n                } else if (parentComponent && parentComponent.saveChildComponent) {\n                    parentComponent.saveChildComponent(submissionData);\n                }\n                const rebuild = parentComponent.rebuild() || NativePromise.resolve();\n                return rebuild.then(() => {\n                    let schema = parentContainer ? parentContainer[index] : [];\n                    parentComponent.getComponents().forEach(component => {\n                        if (component.key === schema.key) {\n                            schema = component.schema;\n                        }\n                    });\n                    this.emit('saveComponent', schema, component, parentComponent.schema, path, index, isNew);\n                    this.emit('change', this.form);\n                    this.highlightInvalidComponents();\n                });\n            }\n            this.highlightInvalidComponents();\n            return NativePromise.resolve();\n        }\n        editComponent(component, parent, isNew, isJsonEdit, original) {\n            if (!component.key) {\n                return;\n            }\n            let saved = false;\n            const componentCopy = a.fastCloneDeep(component);\n            let ComponentClass = Components.components[componentCopy.type];\n            const isCustom = ComponentClass === undefined;\n            isJsonEdit = isJsonEdit || isCustom;\n            ComponentClass = isCustom ? Components.components.unknown : ComponentClass;\n            if (this.dialog) {\n                this.dialog.close();\n                this.highlightInvalidComponents();\n            }\n            const editFormOptions = _.clone(_.get(this, 'options.editForm', {}));\n            if (this.editForm) {\n                this.editForm.destroy();\n            }\n            const overrides = _.get(this.options, `editForm.${ componentCopy.type }`, {});\n            editFormOptions.editForm = this.form;\n            editFormOptions.editComponent = component;\n            this.editForm = new Webform({\n                ..._.omit(this.options, [\n                    'hooks',\n                    'builder',\n                    'events',\n                    'attachMode',\n                    'skipInit'\n                ]),\n                language: this.options.language,\n                ...editFormOptions\n            });\n            this.editForm.form = isJsonEdit && !isCustom ? {\n                components: [{\n                        type: 'textarea',\n                        as: 'json',\n                        editor: 'ace',\n                        weight: 10,\n                        input: true,\n                        key: 'componentJson',\n                        label: 'Component JSON',\n                        tooltip: 'Edit the JSON for this component.'\n                    }]\n            } : ComponentClass.editForm(_.cloneDeep(overrides));\n            const instance = new ComponentClass(componentCopy);\n            this.editForm.submission = isJsonEdit ? { data: { componentJson: instance.component } } : { data: instance.component };\n            if (this.preview) {\n                this.preview.destroy();\n            }\n            if (!ComponentClass.builderInfo.hasOwnProperty('preview') || ComponentClass.builderInfo.preview) {\n                this.preview = new Webform(_.omit({\n                    ...this.options,\n                    preview: true\n                }, [\n                    'hooks',\n                    'builder',\n                    'events',\n                    'attachMode',\n                    'calculateValue'\n                ]));\n            }\n            this.componentEdit = this.ce('div', { 'class': 'component-edit-container' });\n            this.setContent(this.componentEdit, this.renderTemplate('builderEditForm', {\n                componentInfo: ComponentClass.builderInfo,\n                editForm: this.editForm.render(),\n                preview: this.preview ? this.preview.render() : false\n            }));\n            this.dialog = this.createModal(this.componentEdit, _.get(this.options, 'dialogAttr', {}));\n            this.editForm.attach(this.componentEdit.querySelector('[ref=\"editForm\"]'));\n            this.updateComponent(componentCopy);\n            this.editForm.on('change', event => {\n                if (event.changed) {\n                    if (event.changed.component && event.changed.component.key === 'key' || isJsonEdit) {\n                        componentCopy.keyModified = true;\n                    }\n                    if (event.changed.component && [\n                            'label',\n                            'title'\n                        ].includes(event.changed.component.key)) {\n                        if (isNew) {\n                            if (!event.data.keyModified) {\n                                this.editForm.everyComponent(component => {\n                                    if (component.key === 'key' && component.parent.component.key === 'tabs') {\n                                        component.setValue(_.camelCase(event.data.title || event.data.label || event.data.placeholder || event.data.type));\n                                        return false;\n                                    }\n                                });\n                            }\n                            if (this.form) {\n                                BuilderUtils.uniquify(this.findNamespaceRoot(parent.formioComponent.component), event.data);\n                            }\n                        }\n                    }\n                    this.updateComponent(event.data.componentJson || event.data, event.changed);\n                }\n            });\n            this.addEventListener(this.componentEdit.querySelector('[ref=\"cancelButton\"]'), 'click', event => {\n                event.preventDefault();\n                this.editForm.detach();\n                this.emit('cancelComponent', component);\n                this.dialog.close();\n                this.highlightInvalidComponents();\n            });\n            this.addEventListener(this.componentEdit.querySelector('[ref=\"removeButton\"]'), 'click', event => {\n                event.preventDefault();\n                saved = true;\n                this.editForm.detach();\n                this.removeComponent(component, parent, original);\n                this.dialog.close();\n                this.highlightInvalidComponents();\n            });\n            this.addEventListener(this.componentEdit.querySelector('[ref=\"saveButton\"]'), 'click', event => {\n                event.preventDefault();\n                if (!this.editForm.checkValidity(this.editForm.data, true, this.editForm.data)) {\n                    this.editForm.setPristine(false);\n                    this.editForm.showErrors();\n                    return false;\n                }\n                saved = true;\n                this.saveComponent(component, parent, isNew, original);\n            });\n            const dialogClose = () => {\n                this.editForm.destroy();\n                if (this.preview) {\n                    this.preview.destroy();\n                    this.preview = null;\n                }\n                if (isNew && !saved) {\n                    this.removeComponent(component, parent, original);\n                    this.highlightInvalidComponents();\n                }\n                this.removeEventListener(this.dialog, 'close', dialogClose);\n                this.dialog = null;\n            };\n            this.addEventListener(this.dialog, 'close', dialogClose);\n            this.emit('editComponent', component);\n        }\n        copyComponent(component) {\n            if (!window.sessionStorage) {\n                return console.warn('Session storage is not supported in this browser.');\n            }\n            this.addClass(this.refs.form, 'builder-paste-mode');\n            window.sessionStorage.setItem('formio.clipboard', JSON.stringify(component.schema));\n        }\n        pasteComponent(component) {\n            if (!window.sessionStorage) {\n                return console.warn('Session storage is not supported in this browser.');\n            }\n            this.removeClass(this.refs.form, 'builder-paste-mode');\n            if (window.sessionStorage) {\n                const data = window.sessionStorage.getItem('formio.clipboard');\n                if (data) {\n                    const schema = JSON.parse(data);\n                    const parent = this.getParentElement(component.element);\n                    BuilderUtils.uniquify(this.findNamespaceRoot(parent.formioComponent.component), schema);\n                    let path = '';\n                    let index = 0;\n                    if (parent.formioContainer) {\n                        index = parent.formioContainer.indexOf(component.component);\n                        path = this.getComponentsPath(schema, parent.formioComponent.component);\n                        parent.formioContainer.splice(index + 1, 0, schema);\n                    } else if (parent.formioComponent && parent.formioComponent.saveChildComponent) {\n                        parent.formioComponent.saveChildComponent(schema, false);\n                    }\n                    parent.formioComponent.rebuild();\n                    this.emit('saveComponent', schema, schema, parent.formioComponent.components, path, index + 1, true);\n                    this.emit('change', this.form);\n                }\n            }\n        }\n        getParentElement(element) {\n            let container = element;\n            do {\n                container = container.parentNode;\n            } while (container && !container.formioComponent);\n            return container;\n        }\n        addBuilderComponentInfo(component) {\n            if (!component || !component.group || !this.groups[component.group]) {\n                return;\n            }\n            component = langx.clone(component); //_.clone lwf\n            const groupInfo = this.groups[component.group];\n            if (!groupInfo.components.hasOwnProperty(component.key)) {\n                groupInfo.components[component.key] = component;\n            }\n            return component;\n        }\n        destroy() {\n            if (this.webform.initialized) {\n                this.webform.destroy();\n            }\n            super.destroy();\n        }\n        addBuilderGroup(name, group) {\n            if (!this.groups[name]) {\n                this.groups[name] = group;\n                this.groupOrder.push(name);\n                this.triggerRedraw();\n            } else {\n                this.updateBuilderGroup(name, group);\n            }\n        }\n        updateBuilderGroup(name, group) {\n            if (this.groups[name]) {\n                this.groups[name] = group;\n                this.triggerRedraw();\n            }\n        }\n    };\n\n\n    return WebformBuilder\n});"]}