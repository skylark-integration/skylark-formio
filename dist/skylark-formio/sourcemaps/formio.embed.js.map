{"version":3,"sources":["formio.embed.js"],"names":["scripts","document","getElementsByTagName","thisScript","i","length","src","indexOf","Form","require","Formio","loadModules","query","scriptSrc","replace","split","pop","join","forEach","item","decodeURIComponent","styles","embed","then","instance","events","emit","on","submission","returnUrl","return","redirect","_form","settings","formSrc","formio","formUrl","hasQuery","match","isOrigin","location","origin","_id","encodeURIComponent","window","href","reload","write"],"mappings":";;;;;;;AACA,MAAMA,QAAUC,SAASC,qBAAqB,UAC9C,IAAIC,WAAa,KACbC,EAAIJ,QAAQK,OAChB,KAAOD,KACL,GAAIJ,QAAQI,GAAGE,MAAoD,IAA5CN,QAAQI,GAAGE,IAAIC,QAAQ,gBAAyB,CACrEJ,WAAaH,QAAQI,GACrB,MAIJ,GAAID,WAAY,CACd,MAAMK,EAAOC,QAAQ,iBAAiBD,KACtCE,OAAOC,cACP,MAAMC,KACN,IAAIC,EAAYV,WAAWG,IAAIQ,QAAQ,aAAc,MAAMC,MAAM,KACjEF,EAAUG,MACVH,EAAYA,EAAUI,KAAK,KACPd,WAAWG,IAAIQ,QAAQ,YAAY,IAC3CA,QAAQ,MAAO,KAAKC,MAAM,KAAKG,QAASC,IAClDP,EAAMO,EAAKJ,MAAM,KAAK,IAAMI,EAAKJ,MAAM,KAAK,IAAMK,mBAAmBD,EAAKJ,MAAM,KAAK,MAEvFH,EAAMS,OAAST,EAAMS,WAAcR,wBACnCL,EAAKc,MAAMV,GAAOW,KAAMC,IACtBd,OAAOe,OAAOC,KAAK,eAAgBF,GACnCA,EAASG,GAAG,SAAWC,IACrB,IAAIC,EAAYjB,EAAMkB,QAAUlB,EAAMmB,SAiBtC,IAbGF,GAECL,EAASQ,OACTR,EAASQ,MAAMC,WAEbT,EAASQ,MAAMC,SAASJ,WACxBL,EAASQ,MAAMC,SAASF,YAI5BF,EAAYL,EAASQ,MAAMC,SAASJ,WAAaL,EAASQ,MAAMC,SAASF,UAGvEF,EAAW,CACb,MAAMK,EAAUV,EAASW,OAASX,EAASW,OAAOC,QAAU,GACtDC,IAAaR,EAAUS,MAAM,MAC7BC,EAAkD,IAAvCV,EAAUtB,QAAQiC,SAASC,QAC5CZ,GAAaQ,EAAW,IAAM,IAC9BR,UAAoBD,EAAWc,OAC1BH,GAAYL,IACfL,YAAsBc,mBAAmBT,MAE3CU,OAAOJ,SAASK,KAAOhB,EACnBU,GACFK,OAAOJ,SAASM,mBAQxB7C,SAAS8C,MAAM","file":"../formio.embed.js","sourcesContent":["/*global Formio*/\nconst scripts = document.getElementsByTagName('script');\nlet thisScript = null;\nlet i = scripts.length;\nwhile (i--) {\n  if (scripts[i].src && (scripts[i].src.indexOf('formio.embed') !== -1)) {\n    thisScript = scripts[i];\n    break;\n  }\n}\n\nif (thisScript) {\n  const Form = require('./formio.form').Form;\n  Formio.loadModules();\n  const query = {};\n  let scriptSrc = thisScript.src.replace(/^([^?]+).*/, '$1').split('/');\n  scriptSrc.pop();\n  scriptSrc = scriptSrc.join('/');\n  const queryString = thisScript.src.replace(/^[^?]+\\??/,'');\n  queryString.replace(/\\?/g, '&').split('&').forEach((item) => {\n    query[item.split('=')[0]] = item.split('=')[1] && decodeURIComponent(item.split('=')[1]);\n  });\n  query.styles = query.styles || (`${scriptSrc}/formio.full.min.css`);\n  Form.embed(query).then((instance) => {\n    Formio.events.emit('formEmbedded', instance);\n    instance.on('submit', (submission) => {\n      let returnUrl = query.return || query.redirect;\n\n      // Allow form based configuration for return url.\n      if (\n        !returnUrl &&\n        (\n          instance._form &&\n          instance._form.settings &&\n          (\n            instance._form.settings.returnUrl ||\n            instance._form.settings.redirect\n          )\n        )\n      ) {\n        returnUrl = instance._form.settings.returnUrl || instance._form.settings.redirect;\n      }\n\n      if (returnUrl) {\n        const formSrc = instance.formio ? instance.formio.formUrl : '';\n        const hasQuery = !!returnUrl.match(/\\?/);\n        const isOrigin = returnUrl.indexOf(location.origin) === 0;\n        returnUrl += hasQuery ? '&' : '?';\n        returnUrl += `sub=${submission._id}`;\n        if (!isOrigin && formSrc) {\n          returnUrl += `&form=${encodeURIComponent(formSrc)}`;\n        }\n        window.location.href = returnUrl;\n        if (isOrigin) {\n          window.location.reload();\n        }\n      }\n    });\n  });\n}\nelse {\n  // Show an error if the script cannot be found.\n  document.write('<span>Could not locate the Embedded form.</span>');\n}\n"]}