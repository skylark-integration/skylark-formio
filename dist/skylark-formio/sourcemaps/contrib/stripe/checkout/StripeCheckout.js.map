{"version":3,"sources":["contrib/stripe/checkout/StripeCheckout.js"],"names":["define","_","ButtonComponent","Formio","[object Object]","component","options","data","super","this","stripeCheckoutReady","requireLibrary","componentAction","action","builderInfo","group","schema","dataValue","value","flags","updateValue","token","setValue","id","emit","addClass","element","disabled","event","key","popupConfiguration","cloneDeep","stripe","each","t","root","isValid","handler","open","build","on","loading","disableOnInvalid","then","handlerConfiguration","apiKey","onToken","bind","locale","language","StripeCheckout","configure","onClickButton","addEventListener","window","close"],"mappings":";;;;;;;AAAAA,QACI,iBACA,oCACA,mBACD,SAAUC,EAAGC,EAAiBC,GAC7B,aACA,qBAA6CD,EACzCE,YAAYC,EAAWC,EAASC,GAC5BC,MAAMH,EAAWC,EAASC,GAE1BE,KAAKC,oBAAsBP,EAAOQ,eAAe,iBAAkB,iBADvD,2CAC8E,GAC1FF,KAAKG,gBAAkBH,KAAKJ,UAAUQ,OACtCJ,KAAKJ,UAAUQ,OAAS,QAE5BC,yBACI,OACIC,OAAO,EACPC,OAAQd,EAAgBc,UAGhCZ,WACI,OAAOK,KAAKQ,UAEhBb,SAASc,EAAOC,MACZ,OAAOV,KAAKW,YAAYF,EAAOC,GAEnCf,QAAQiB,GACJZ,KAAKa,SAASD,EAAME,IACS,WAAzBd,KAAKG,gBACLH,KAAKe,KAAK,iBAEVf,KAAKgB,SAAShB,KAAKiB,QAAS,eAC5BjB,KAAKkB,UAAW,GAGxBvB,cAAcwB,GACV,GAAInB,KAAKJ,UAAUwB,MAAQD,EAAMvB,UAAUwB,IACvC,OAEJ,MAAMC,EAAqB7B,EAAE8B,UAAUtB,KAAKJ,UAAU2B,OAAOF,wBAC7D7B,EAAEgC,KAAKH,EAAoB,CAACZ,EAAOW,KAC/BC,EAAmBD,GAAOpB,KAAKyB,EAAEhB,KAER,WAAzBT,KAAKG,gBACDH,KAAK0B,KAAKC,QAAQR,EAAMrB,MAAM,GAC9BE,KAAK4B,QAAQC,KAAKR,GAElBrB,KAAKe,KAAK,gBAGdf,KAAK4B,QAAQC,KAAKR,GAG1B1B,QACII,MAAM+B,QACuB,WAAzB9B,KAAKG,kBACLH,KAAK+B,GAAG,eAAgB,KACpB/B,KAAKgC,SAAU,EACfhC,KAAKkB,UAAW,IACjB,GACHlB,KAAK+B,GAAG,aAAc,KAClB/B,KAAKgC,SAAU,EACfhC,KAAKkB,UAAW,IACjB,GACHlB,KAAK+B,GAAG,SAAUtB,IACdT,KAAKgC,SAAU,EACfhC,KAAKkB,SAAWlB,KAAKJ,UAAUqC,mBAAqBjC,KAAK0B,KAAKC,QAAQlB,EAAMX,MAAM,KACnF,GACHE,KAAK+B,GAAG,QAAS,KACb/B,KAAKgC,SAAU,IAChB,IAEPhC,KAAKC,oBAAoBiC,KAAK,KAC1B,MAAMC,EAAuB3C,EAAE8B,UAAUtB,KAAKJ,UAAU2B,OAAOY,0BAC/DA,EAAqBf,IAAMpB,KAAKJ,UAAU2B,OAAOa,OACjDD,EAAqBvB,MAAQZ,KAAKqC,QAAQC,KAAKtC,WACJ,IAAhCmC,EAAqBI,SAC5BJ,EAAqBI,OAASvC,KAAKH,QAAQ2C,UAE/CxC,KAAK4B,QAAUa,eAAeC,UAAUP,GACxCnC,KAAK+B,GAAG,cAAe/B,KAAK2C,cAAcL,KAAKtC,OAC/CA,KAAK4C,iBAAiBC,OAAQ,WAAY,KACtC7C,KAAK4B,QAAQkB","file":"../../../../contrib/stripe/checkout/StripeCheckout.js","sourcesContent":["define([\n    'skylark-lodash',\n    '../../../components/button/Button',\n    '../../../Formio'\n], function (_, ButtonComponent, Formio) {\n    'use strict';\n    return class StripeCheckoutComponent extends ButtonComponent {\n        constructor(component, options, data) {\n            super(component, options, data);\n            const src = 'https://checkout.stripe.com/checkout.js';\n            this.stripeCheckoutReady = Formio.requireLibrary('stripeCheckout', 'StripeCheckout', src, true);\n            this.componentAction = this.component.action;\n            this.component.action = 'event';\n        }\n        static get builderInfo() {\n            return {\n                group: false,\n                schema: ButtonComponent.schema()\n            };\n        }\n        getValue() {\n            return this.dataValue;\n        }\n        setValue(value, flags = {}) {\n            return this.updateValue(value, flags);\n        }\n        onToken(token) {\n            this.setValue(token.id);\n            if (this.componentAction === 'submit') {\n                this.emit('submitButton');\n            } else {\n                this.addClass(this.element, 'btn-success');\n                this.disabled = true;\n            }\n        }\n        onClickButton(event) {\n            if (this.component.key !== event.component.key) {\n                return;\n            }\n            const popupConfiguration = _.cloneDeep(this.component.stripe.popupConfiguration) || {};\n            _.each(popupConfiguration, (value, key) => {\n                popupConfiguration[key] = this.t(value);\n            });\n            if (this.componentAction === 'submit') {\n                if (this.root.isValid(event.data, true)) {\n                    this.handler.open(popupConfiguration);\n                } else {\n                    this.emit('submitButton');\n                }\n            } else {\n                this.handler.open(popupConfiguration);\n            }\n        }\n        build() {\n            super.build();\n            if (this.componentAction === 'submit') {\n                this.on('submitButton', () => {\n                    this.loading = true;\n                    this.disabled = true;\n                }, true);\n                this.on('submitDone', () => {\n                    this.loading = false;\n                    this.disabled = false;\n                }, true);\n                this.on('change', value => {\n                    this.loading = false;\n                    this.disabled = this.component.disableOnInvalid && !this.root.isValid(value.data, true);\n                }, true);\n                this.on('error', () => {\n                    this.loading = false;\n                }, true);\n            }\n            this.stripeCheckoutReady.then(() => {\n                const handlerConfiguration = _.cloneDeep(this.component.stripe.handlerConfiguration) || {};\n                handlerConfiguration.key = this.component.stripe.apiKey;\n                handlerConfiguration.token = this.onToken.bind(this);\n                if (typeof handlerConfiguration.locale === 'undefined') {\n                    handlerConfiguration.locale = this.options.language;\n                }\n                this.handler = StripeCheckout.configure(handlerConfiguration);\n                this.on('customEvent', this.onClickButton.bind(this));\n                this.addEventListener(window, 'popstate', () => {\n                    this.handler.close();\n                });\n            });\n        }\n    };\n    if (typeof global === 'object' && global.Formio && global.Formio.registerComponent) {\n        global.Formio.registerComponent('stripeCheckout', StripeCheckoutComponent);\n    }\n});"]}