{"version":3,"sources":["components/datetime/editForm/DateTime.edit.date.js"],"names":["define","Evaluator","EditFormUtils","type","input","key","label","weight","tooltip","persistent","customConditional","data","component","datePicker","minDate","indexOf","enableMinDateInput","enableTime","maxDate","enableMaxDateInput","placeholder","title","collapsible","collapsed","style","margin-bottom","noeval","components","logicVariablesTable","editor","description","tag","content"],"mappings":";;;;;;;AAAAA,QACI,2BACA,2CACD,SAAUC,EAAWC,GACpB,aACA,QAEQC,KAAM,WACNC,OAAO,EACPC,IAAK,aACLC,MAAO,oBACPC,OAAQ,EACRC,QAAS,uCAGTL,KAAM,WACNC,OAAO,EACPC,IAAK,qBACLC,MAAO,yCACPG,YAAY,EACZF,OAAQ,EACRC,QAAS,mEAGTL,KAAM,WACNC,OAAO,EACPC,IAAK,qBACLC,MAAO,8BACPC,OAAQ,GACRC,QAAS,uCACTE,kBAAiB,EAACC,KAACA,EAAIC,UAAEA,OACjBA,EAAUC,aAAcD,EAAUC,WAAWC,UAA+D,IAApDF,EAAUC,WAAWC,QAAQC,QAAQ,aAGzFJ,EAAKK,qBAIjBb,KAAM,YACNC,OAAO,EACPa,YAAY,EACZZ,IAAK,qBACLC,MAAO,eACPE,QAAS,8HACTE,kBAAiB,EAACC,KAACA,EAAIC,UAAEA,QACjBA,EAAUC,aAAcD,EAAUC,WAAWC,UAA+D,IAApDF,EAAUC,WAAWC,QAAQC,QAAQ,YAG1FJ,EAAKK,mBAEhBT,OAAQ,KAGRJ,KAAM,WACNC,OAAO,EACPC,IAAK,qBACLC,MAAO,yCACPG,YAAY,EACZF,OAAQ,GACRC,QAAS,mEAGTL,KAAM,YACNC,OAAO,EACPa,YAAY,EACZZ,IAAK,qBACLC,MAAO,eACPE,QAAS,yHACTD,OAAQ,GACRG,kBAAiB,EAACC,KAACA,EAAIC,UAAEA,QACjBA,EAAUC,aAAcD,EAAUC,WAAWK,UAA+D,IAApDN,EAAUC,WAAWK,QAAQH,QAAQ,YAG1FJ,EAAKQ,qBAIhBhB,KAAM,WACNC,OAAO,EACPC,IAAK,qBACLC,MAAO,8BACPC,OAAQ,GACRC,QAAS,uCACTE,kBAAiB,EAACC,KAACA,EAAIC,UAAEA,OACjBA,EAAUC,aAAcD,EAAUC,WAAWK,UAA+D,IAApDN,EAAUC,WAAWK,QAAQH,QAAQ,aAGzFJ,EAAKQ,qBAIjBhB,KAAM,OACNC,OAAO,EACPC,IAAK,qBACLC,MAAO,2CACPc,YAAa,4CACbZ,QAAS,sEACTD,OAAQ,KAGRJ,KAAM,QACNkB,MAAO,wBACPC,aAAa,EACbC,WAAW,EACXC,OAASC,gBAAiB,QAC1BpB,IAAK,yBACLK,kBAAiB,KACLT,EAAUyB,OAEtBC,YACIzB,EAAc0B,oBAAoB,oDAE9BzB,KAAM,WACNC,OAAO,EACPyB,OAAQ,MACRxB,IAAK,6BACLC,MAAO,gCACPwB,YAAa,2HACbvB,OAAQ,KAGRJ,KAAM,cACN4B,IAAK,MACLC,QAAS,mHAMjB7B,KAAM,WACNC,OAAO,EACPC,IAAK,6BACLC,MAAO,mBACPE,QAAS,4BACTD,OAAQ,KAGRJ,KAAM,WACNC,OAAO,EACPC,IAAK,6BACLC,MAAO,mBACPE,QAAS,4BACTD,OAAQ","file":"../../../../components/datetime/editForm/DateTime.edit.date.js","sourcesContent":["define([\n    '../../../utils/Evaluator',\n    '../../_classes/component/editForm/utils'\n], function (Evaluator, EditFormUtils) {\n    'use strict';\n    return [\n        {\n            type: 'checkbox',\n            input: true,\n            key: 'enableDate',\n            label: 'Enable Date Input',\n            weight: 0,\n            tooltip: 'Enables date input for this field.'\n        },\n        {\n            type: 'checkbox',\n            input: true,\n            key: 'enableMinDateInput',\n            label: 'Use Input to add moment.js for minDate',\n            persistent: false,\n            weight: 0,\n            tooltip: 'Enables to use input for moment functions instead of calendar.'\n        },\n        {\n            type: 'datetime',\n            input: true,\n            key: 'datePicker.minDate',\n            label: 'Use calendar to set minDate',\n            weight: 10,\n            tooltip: 'Enables to use calendar to set date.',\n            customConditional({data, component}) {\n                if (component.datePicker && component.datePicker.minDate && component.datePicker.minDate.indexOf('moment') !== -1) {\n                    return false;\n                }\n                return !data.enableMinDateInput;\n            }\n        },\n        {\n            type: 'textfield',\n            input: true,\n            enableTime: false,\n            key: 'datePicker.minDate',\n            label: 'Minimum Date',\n            tooltip: \"The minimum date that can be picked. You can also use Moment.js functions. For example: \\n \\n moment().subtract(10, 'days')\",\n            customConditional({data, component}) {\n                if (component.datePicker && component.datePicker.minDate && component.datePicker.minDate.indexOf('moment') !== -1) {\n                    return true;\n                }\n                return data.enableMinDateInput;\n            },\n            weight: 10\n        },\n        {\n            type: 'checkbox',\n            input: true,\n            key: 'enableMaxDateInput',\n            label: 'Use Input to add moment.js for maxDate',\n            persistent: false,\n            weight: 20,\n            tooltip: 'Enables to use input for moment functions instead of calendar.'\n        },\n        {\n            type: 'textfield',\n            input: true,\n            enableTime: false,\n            key: 'datePicker.maxDate',\n            label: 'Maximum Date',\n            tooltip: \"The maximum date that can be picked. You can also use Moment.js functions. For example: \\n \\n moment().add(10, 'days')\",\n            weight: 20,\n            customConditional({data, component}) {\n                if (component.datePicker && component.datePicker.maxDate && component.datePicker.maxDate.indexOf('moment') !== -1) {\n                    return true;\n                }\n                return data.enableMaxDateInput;\n            }\n        },\n        {\n            type: 'datetime',\n            input: true,\n            key: 'datePicker.maxDate',\n            label: 'Use calendar to set maxDate',\n            weight: 20,\n            tooltip: 'Enables to use calendar to set date.',\n            customConditional({data, component}) {\n                if (component.datePicker && component.datePicker.maxDate && component.datePicker.maxDate.indexOf('moment') !== -1) {\n                    return false;\n                }\n                return !data.enableMaxDateInput;\n            }\n        },\n        {\n            type: 'tags',\n            input: true,\n            key: 'datePicker.disable',\n            label: 'Disable specific dates or dates by range',\n            placeholder: '(yyyy-MM-dd) or (yyyy-MM-dd - yyyy-MM-dd)',\n            tooltip: 'Add dates that you want to blacklist. For example: \\n \\n 2025-02-21',\n            weight: 21\n        },\n        {\n            type: 'panel',\n            title: 'Custom Disabled Dates',\n            collapsible: true,\n            collapsed: true,\n            style: { 'margin-bottom': '10px' },\n            key: 'panel-disable-function',\n            customConditional() {\n                return !Evaluator.noeval;\n            },\n            components: [\n                EditFormUtils.logicVariablesTable('<tr><th>date</th><td>The date object.</td></tr>'),\n                {\n                    type: 'textarea',\n                    input: true,\n                    editor: 'ace',\n                    key: 'datePicker.disableFunction',\n                    label: 'Disabling dates by a function',\n                    description: 'For more information check out the <a href=\"https://flatpickr.js.org/examples/#disabling-dates\" target=\"_blank\">Docs</a>',\n                    weight: 22\n                },\n                {\n                    type: 'htmlelement',\n                    tag: 'div',\n                    content: '<h4>Example</h4>' + `<pre>// Disable all weekends<br>date.getDay() === 0 || date.getDay() === 6</pre>\n          `\n                }\n            ]\n        },\n        {\n            type: 'checkbox',\n            input: true,\n            key: 'datePicker.disableWeekends',\n            label: 'Disable weekends',\n            tooltip: 'Check to disable weekends',\n            weight: 23\n        },\n        {\n            type: 'checkbox',\n            input: true,\n            key: 'datePicker.disableWeekdays',\n            label: 'Disable weekdays',\n            tooltip: 'Check to disable weekdays',\n            weight: 23\n        }\n    ];\n});"]}