{"version":3,"sources":["components/_classes/component/editForm/utils.spec.js"],"names":["define","a","_","utils","describe","it","expect","unionWith","key","label","input","one","two","unifyComponents","to","deep","equal","skipMerge","ok"],"mappings":";;;;;;;AAAAA,QACI,OACA,iBACA,WACD,SAAUC,EAAGC,EAAGC,GACf,aACAC,SAAS,kBAAmB,WACxBA,SAAS,kBAAmB,KACxBC,GAAG,6CAA8C,KAkB7CJ,EAAEK,OAAOJ,EAAEK,YAfHC,IAAK,IACLC,MAAO,EACPC,OAAO,IAGPF,IAAK,IACLG,IAAK,EACLC,IAAK,IAGLJ,IAAK,IACLG,IAAK,EACLC,IAAK,IAGoBT,EAAMU,kBAAkBC,GAAGC,KAAKC,QAEzDR,IAAK,IACLC,MAAO,EACPC,OAAO,EACPC,IAAK,EACLC,IAAK,IAGLJ,IAAK,IACLG,IAAK,EACLC,IAAK,OAIjBP,GAAG,iDAAkD,KA0BjDJ,EAAEK,OAAOJ,EAAEK,YAvBHC,IAAK,IACLC,MAAO,IAGPD,IAAK,IACLC,MAAO,EACPQ,WAAW,IAGXT,IAAK,IACLG,IAAK,EACLC,IAAK,IAGLJ,IAAK,IACLG,IAAK,IAGLH,IAAK,IACLG,IAAK,EACLO,IAAI,IAGqBf,EAAMU,kBAAkBC,GAAGC,KAAKC,QAEzDR,IAAK,IACLC,MAAO,IAGPD,IAAK,IACLC,MAAO,EACPQ,WAAW,IAGXT,IAAK,IACLG,IAAK,EACLC,IAAK,EACLM,IAAI","file":"../../../../../components/_classes/component/editForm/utils.spec.js","sourcesContent":["define([\n    'chai',\n    'skylark-lodash',\n    './utils'\n], function (a, _, utils) {\n    'use strict';\n    describe('Edit Form Utils', function () {\n        describe('unifyComponents', () => {\n            it('should merge all objects with the same key', () => {\n                const components = [\n                    {\n                        key: 'a',\n                        label: 1,\n                        input: true\n                    },\n                    {\n                        key: 'a',\n                        one: 1,\n                        two: 2\n                    },\n                    {\n                        key: 'b',\n                        one: 1,\n                        two: 2\n                    }\n                ];\n                a.expect(_.unionWith(components, utils.unifyComponents)).to.deep.equal([\n                    {\n                        key: 'a',\n                        label: 1,\n                        input: true,\n                        one: 1,\n                        two: 2\n                    },\n                    {\n                        key: 'b',\n                        one: 1,\n                        two: 2\n                    }\n                ]);\n            });\n            it('should not merge objects with \"skipMerge\" flag', () => {\n                const components = [\n                    {\n                        key: 'a',\n                        label: 1\n                    },\n                    {\n                        key: 'a',\n                        label: 2,\n                        skipMerge: true\n                    },\n                    {\n                        key: 'b',\n                        one: 1,\n                        two: 2\n                    },\n                    {\n                        key: 'b',\n                        one: 1\n                    },\n                    {\n                        key: 'b',\n                        one: 1,\n                        ok: true\n                    }\n                ];\n                a.expect(_.unionWith(components, utils.unifyComponents)).to.deep.equal([\n                    {\n                        key: 'a',\n                        label: 1\n                    },\n                    {\n                        key: 'a',\n                        label: 2,\n                        skipMerge: true\n                    },\n                    {\n                        key: 'b',\n                        one: 1,\n                        two: 2,\n                        ok: true\n                    }\n                ]);\n            });\n        });\n    });\n});"]}