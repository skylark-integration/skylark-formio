{"version":3,"sources":["components/_classes/component/editForm/Component.edit.logic.js"],"names":["define","a","weight","input","label","key","templates","header","row","footer","type","addAnother","saveRow","components","inputType","validate","required","title","tableView","data","values","value","dataSrc","template","customConditional","calculateValue","valueProperty","custom","context","getContextComponents","rows","editor","placeholder","description","as","json","hasOwnProperty","property","component"],"mappings":"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","file":"../../../../../components/_classes/component/editForm/Component.edit.logic.js","sourcesContent":["define(['../../../../utils/utils'], function (a) {\n    'use strict';\n    return [{\n            weight: 0,\n            input: true,\n            label: 'Advanced Logic',\n            key: 'logic',\n            templates: {\n                header: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <strong>{{ value.length }} Advanced Logic Configured</strong>\\n  </div>\\n</div>',\n                row: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <div>{{ row.name }} </div>\\n  </div>\\n  <div class=\"col-sm-2\"> \\n    <div class=\"btn-group pull-right\"> \\n      <div class=\"btn btn-default editRow\">Edit</div> \\n      <div class=\"btn btn-danger removeRow\">Delete</div> \\n    </div> \\n  </div> \\n</div>',\n                footer: ''\n            },\n            type: 'editgrid',\n            addAnother: 'Add Logic',\n            saveRow: 'Save Logic',\n            components: [\n                {\n                    weight: 0,\n                    input: true,\n                    inputType: 'text',\n                    label: 'Logic Name',\n                    key: 'name',\n                    validate: { required: true },\n                    type: 'textfield'\n                },\n                {\n                    weight: 10,\n                    key: 'triggerPanel',\n                    input: false,\n                    title: 'Trigger',\n                    tableView: false,\n                    components: [{\n                            weight: 0,\n                            input: true,\n                            tableView: false,\n                            components: [\n                                {\n                                    weight: 0,\n                                    input: true,\n                                    label: 'Type',\n                                    key: 'type',\n                                    tableView: false,\n                                    data: {\n                                        values: [\n                                            {\n                                                value: 'simple',\n                                                label: 'Simple'\n                                            },\n                                            {\n                                                value: 'javascript',\n                                                label: 'Javascript'\n                                            },\n                                            {\n                                                value: 'json',\n                                                label: 'JSON Logic'\n                                            },\n                                            {\n                                                value: 'event',\n                                                label: 'Event'\n                                            }\n                                        ]\n                                    },\n                                    dataSrc: 'values',\n                                    template: '<span>{{ item.label }}</span>',\n                                    type: 'select'\n                                },\n                                {\n                                    weight: 10,\n                                    label: '',\n                                    key: 'simple',\n                                    type: 'container',\n                                    tableView: false,\n                                    customConditional({row}) {\n                                        return row.type === 'simple';\n                                    },\n                                    components: [\n                                        {\n                                            input: true,\n                                            key: 'show',\n                                            label: 'Show',\n                                            type: 'hidden',\n                                            tableView: false,\n                                            calculateValue() {\n                                                return true;\n                                            }\n                                        },\n                                        {\n                                            type: 'select',\n                                            input: true,\n                                            label: 'When the form component:',\n                                            key: 'when',\n                                            dataSrc: 'custom',\n                                            valueProperty: 'value',\n                                            tableView: false,\n                                            data: {\n                                                custom(context) {\n                                                    return a.getContextComponents(context);\n                                                }\n                                            }\n                                        },\n                                        {\n                                            type: 'textfield',\n                                            input: true,\n                                            label: 'Has the value:',\n                                            key: 'eq',\n                                            tableView: false\n                                        }\n                                    ]\n                                },\n                                {\n                                    weight: 10,\n                                    type: 'textarea',\n                                    key: 'javascript',\n                                    rows: 5,\n                                    editor: 'ace',\n                                    input: true,\n                                    tableView: false,\n                                    placeholder: `result = (data['mykey'] > 1);`,\n                                    description: '\"row\", \"data\", and \"component\" variables are available. Return \"result\".',\n                                    customConditional({row}) {\n                                        return row.type === 'javascript';\n                                    }\n                                },\n                                {\n                                    weight: 10,\n                                    type: 'textarea',\n                                    key: 'json',\n                                    rows: 5,\n                                    editor: 'ace',\n                                    label: 'JSON Logic',\n                                    as: 'json',\n                                    input: true,\n                                    tableView: false,\n                                    placeholder: `{ ... }`,\n                                    description: '\"row\", \"data\", \"component\" and \"_\" variables are available. Return the result to be passed to the action if truthy.',\n                                    customConditional({row}) {\n                                        return row.type === 'json';\n                                    }\n                                },\n                                {\n                                    weight: 10,\n                                    type: 'textfield',\n                                    key: 'event',\n                                    label: 'Event Name',\n                                    placeholder: 'event',\n                                    description: 'The event that will trigger this logic. You can trigger events externally or via a button.',\n                                    tableView: false,\n                                    customConditional({row}) {\n                                        return row.type === 'event';\n                                    }\n                                }\n                            ],\n                            key: 'trigger',\n                            type: 'container'\n                        }],\n                    type: 'panel'\n                },\n                {\n                    weight: 20,\n                    input: true,\n                    label: 'Actions',\n                    key: 'actions',\n                    tableView: false,\n                    templates: {\n                        header: '<div class=\"row\"> \\n  <div class=\"col-sm-6\"><strong>{{ value.length }} actions</strong></div>\\n</div>',\n                        row: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <div>{{ row.name }} </div>\\n  </div>\\n  <div class=\"col-sm-2\"> \\n    <div class=\"btn-group pull-right\"> \\n      <div class=\"btn btn-default editRow\">Edit</div> \\n      <div class=\"btn btn-danger removeRow\">Delete</div> \\n    </div> \\n  </div> \\n</div>',\n                        footer: ''\n                    },\n                    type: 'editgrid',\n                    addAnother: 'Add Action',\n                    saveRow: 'Save Action',\n                    components: [{\n                            weight: 0,\n                            title: 'Action',\n                            input: false,\n                            key: 'actionPanel',\n                            type: 'panel',\n                            components: [\n                                {\n                                    weight: 0,\n                                    input: true,\n                                    inputType: 'text',\n                                    label: 'Action Name',\n                                    key: 'name',\n                                    validate: { required: true },\n                                    type: 'textfield'\n                                },\n                                {\n                                    weight: 10,\n                                    input: true,\n                                    label: 'Type',\n                                    key: 'type',\n                                    data: {\n                                        values: [\n                                            {\n                                                value: 'property',\n                                                label: 'Property'\n                                            },\n                                            {\n                                                value: 'value',\n                                                label: 'Value'\n                                            },\n                                            {\n                                                label: 'Merge Component Schema',\n                                                value: 'mergeComponentSchema'\n                                            }\n                                        ]\n                                    },\n                                    dataSrc: 'values',\n                                    template: '<span>{{ item.label }}</span>',\n                                    type: 'select'\n                                },\n                                {\n                                    weight: 20,\n                                    type: 'select',\n                                    template: '<span>{{ item.label }}</span>',\n                                    dataSrc: 'json',\n                                    tableView: false,\n                                    data: {\n                                        json: [\n                                            {\n                                                label: 'Hidden',\n                                                value: 'hidden',\n                                                type: 'boolean'\n                                            },\n                                            {\n                                                label: 'Required',\n                                                value: 'validate.required',\n                                                type: 'boolean'\n                                            },\n                                            {\n                                                label: 'Disabled',\n                                                value: 'disabled',\n                                                type: 'boolean'\n                                            },\n                                            {\n                                                label: 'Label',\n                                                value: 'label',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Title',\n                                                value: 'title',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Prefix',\n                                                value: 'prefix',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Suffix',\n                                                value: 'suffix',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Tooltip',\n                                                value: 'tooltip',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Description',\n                                                value: 'description',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Placeholder',\n                                                value: 'placeholder',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Input Mask',\n                                                value: 'inputMask',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'CSS Class',\n                                                value: 'className',\n                                                type: 'string'\n                                            },\n                                            {\n                                                label: 'Container Custom Class',\n                                                value: 'customClass',\n                                                type: 'string'\n                                            }\n                                        ]\n                                    },\n                                    key: 'property',\n                                    label: 'Component Property',\n                                    input: true,\n                                    customConditional({row}) {\n                                        return row.type === 'property';\n                                    }\n                                },\n                                {\n                                    weight: 30,\n                                    input: true,\n                                    label: 'Set State',\n                                    key: 'state',\n                                    tableView: false,\n                                    data: {\n                                        values: [\n                                            {\n                                                label: 'True',\n                                                value: 'true'\n                                            },\n                                            {\n                                                label: 'False',\n                                                value: 'false'\n                                            }\n                                        ]\n                                    },\n                                    dataSrc: 'values',\n                                    template: '<span>{{ item.label }}</span>',\n                                    type: 'select',\n                                    customConditional({row}) {\n                                        return row.type === 'property' && row.hasOwnProperty('property') && row.property.type === 'boolean';\n                                    }\n                                },\n                                {\n                                    weight: 30,\n                                    type: 'textfield',\n                                    key: 'text',\n                                    label: 'Text',\n                                    inputType: 'text',\n                                    input: true,\n                                    tableView: false,\n                                    description: 'Can use templating with {{ data.myfield }}. \"data\", \"row\", \"component\" and \"result\" variables are available.',\n                                    customConditional({row}) {\n                                        return row.type === 'property' && row.hasOwnProperty('property') && row.property.type === 'string' && !row.property.component;\n                                    }\n                                },\n                                {\n                                    weight: 20,\n                                    input: true,\n                                    label: 'Value (Javascript)',\n                                    key: 'value',\n                                    editor: 'ace',\n                                    rows: 5,\n                                    placeholder: `value = data.myfield;`,\n                                    type: 'textarea',\n                                    tableView: false,\n                                    description: '\"row\", \"data\", \"component\", and \"result\" variables are available. Return the value.',\n                                    customConditional({row}) {\n                                        return row.type === 'value';\n                                    }\n                                },\n                                {\n                                    weight: 20,\n                                    input: true,\n                                    label: 'Schema Defenition',\n                                    key: 'schemaDefinition',\n                                    editor: 'ace',\n                                    rows: 5,\n                                    placeholder: `schema = { label: 'Updated' };`,\n                                    type: 'textarea',\n                                    tableView: false,\n                                    description: '\"row\", \"data\", \"component\", and \"result\" variables are available. Return the schema.',\n                                    customConditional({row}) {\n                                        return row.type === 'mergeComponentSchema';\n                                    }\n                                }\n                            ]\n                        }]\n                }\n            ]\n        }];\n});"]}