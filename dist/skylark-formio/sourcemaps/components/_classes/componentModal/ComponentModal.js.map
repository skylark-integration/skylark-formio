{"version":3,"sources":["components/_classes/componentModal/ComponentModal.js"],"names":["define","[object Object]","component","data","topLevel","children","renderTemplate","modal","this","currentValue","dataValue","dataLoaded","init","refs","loadRefs","value","updateView","template","openModalTemplate","setContent","openModalWrapper","setEventListeners","modalOverlay","modalContents","modalClose","openModal","modalSave","modalWrapper","addEventListener","openModalHandler","bind","closeModalHandler","saveModalValueHandler","event","preventDefault","classList","remove","defaultValue","getModalPreviewTemplate","setOpenEventListener","add","setValue","closeModal"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,aACIC,cAAcC,EAAWC,EAAMC,GAC3B,MAAMC,EAAWH,EAAUI,eAAe,YAAaH,EAAMC,GAC7D,OAAOF,EAAUI,eAAe,qBACzBH,EACHE,SAAAA,IAGRJ,YAAYC,EAAWK,GACnBC,KAAKN,UAAYA,EACjBM,KAAKD,MAAQA,EACbC,KAAKC,aAAeD,KAAKN,UAAUQ,UACnCF,KAAKG,YAAa,EAClBH,KAAKI,OAETC,WACI,OAAOL,KAAKN,UAAUW,KAE1BZ,OACIO,KAAKM,WAETb,SAASc,GACDP,KAAKG,aAGTH,KAAKC,aAAeM,EACpBP,KAAKG,YAAa,EAClBH,KAAKQ,cAETf,oBAAoBgB,GAChBT,KAAKU,kBAAoBD,EACzBT,KAAKN,UAAUiB,WAAWX,KAAKK,KAAKO,iBAAkBH,GACtDT,KAAKM,WACLN,KAAKa,oBAETpB,WACIO,KAAKN,UAAUY,SAASN,KAAKD,OACzBe,aAAc,SACdC,cAAe,SACfC,WAAY,SACZJ,iBAAkB,SAClBK,UAAW,SACXC,UAAW,SACXC,aAAc,WAGtB1B,oBACIO,KAAKN,UAAU0B,iBAAiBpB,KAAKK,KAAKY,UAAW,QAASjB,KAAKqB,iBAAiBC,KAAKtB,OACzFA,KAAKN,UAAU0B,iBAAiBpB,KAAKK,KAAKS,aAAc,QAASd,KAAKuB,kBAAkBD,KAAKtB,OAC7FA,KAAKN,UAAU0B,iBAAiBpB,KAAKK,KAAKW,WAAY,QAAShB,KAAKuB,kBAAkBD,KAAKtB,OAC3FA,KAAKN,UAAU0B,iBAAiBpB,KAAKK,KAAKa,UAAW,QAASlB,KAAKwB,sBAAsBF,KAAKtB,OAElGP,uBACIO,KAAKN,UAAUY,SAASN,KAAKD,OAASkB,UAAa,WACnDjB,KAAKN,UAAU0B,iBAAiBpB,KAAKK,KAAKY,UAAW,QAASjB,KAAKqB,iBAAiBC,KAAKtB,OAE7FP,iBAAiBgC,GACbA,EAAMC,iBACN1B,KAAKK,KAAKc,aAAaQ,UAAUC,OAAO,8BAE5CnC,aACI,MAAMgB,EAAWT,KAAKC,eAAiBD,KAAKN,UAAUmC,aAAe7B,KAAKU,kBAAoBV,KAAKN,UAAUoC,0BAC7G9B,KAAKN,UAAUiB,WAAWX,KAAKK,KAAKO,iBAAkBH,GACtDT,KAAK+B,uBAETtC,aACIO,KAAKK,KAAKc,aAAaQ,UAAUK,IAAI,8BACrChC,KAAKQ,aAETf,kBAAkBgC,GACdA,EAAMC,iBACN1B,KAAKN,UAAUuC,SAASjC,KAAKC,cAC7BD,KAAKkC,aAETzC,sBAAsBgC,GAClBA,EAAMC,iBACN1B,KAAKC,aAAeD,KAAKN,UAAUQ,UACnCF,KAAKkC","file":"../../../../components/_classes/componentModal/ComponentModal.js","sourcesContent":["define(function () {\n    'use strict';\n    return class ComponentModal {\n        static render(component, data, topLevel) {\n            const children = component.renderTemplate('component', data, topLevel);\n            return component.renderTemplate('componentModal', {\n                ...data,\n                children\n            });\n        }\n        constructor(component, modal) {\n            this.component = component;\n            this.modal = modal;\n            this.currentValue = this.component.dataValue;\n            this.dataLoaded = false;\n            this.init();\n        }\n        get refs() {\n            return this.component.refs;\n        }\n        init() {\n            this.loadRefs();\n        }\n        setValue(value) {\n            if (this.dataLoaded) {\n                return;\n            }\n            this.currentValue = value;\n            this.dataLoaded = true;\n            this.updateView();\n        }\n        setOpenModalElement(template) {\n            this.openModalTemplate = template;\n            this.component.setContent(this.refs.openModalWrapper, template);\n            this.loadRefs();\n            this.setEventListeners();\n        }\n        loadRefs() {\n            this.component.loadRefs(this.modal, {\n                modalOverlay: 'single',\n                modalContents: 'single',\n                modalClose: 'single',\n                openModalWrapper: 'single',\n                openModal: 'single',\n                modalSave: 'single',\n                modalWrapper: 'single'\n            });\n        }\n        setEventListeners() {\n            this.component.addEventListener(this.refs.openModal, 'click', this.openModalHandler.bind(this));\n            this.component.addEventListener(this.refs.modalOverlay, 'click', this.closeModalHandler.bind(this));\n            this.component.addEventListener(this.refs.modalClose, 'click', this.closeModalHandler.bind(this));\n            this.component.addEventListener(this.refs.modalSave, 'click', this.saveModalValueHandler.bind(this));\n        }\n        setOpenEventListener() {\n            this.component.loadRefs(this.modal, { 'openModal': 'single' });\n            this.component.addEventListener(this.refs.openModal, 'click', this.openModalHandler.bind(this));\n        }\n        openModalHandler(event) {\n            event.preventDefault();\n            this.refs.modalWrapper.classList.remove('component-rendering-hidden');\n        }\n        updateView() {\n            const template = this.currentValue === this.component.defaultValue ? this.openModalTemplate : this.component.getModalPreviewTemplate();\n            this.component.setContent(this.refs.openModalWrapper, template);\n            this.setOpenEventListener();\n        }\n        closeModal() {\n            this.refs.modalWrapper.classList.add('component-rendering-hidden');\n            this.updateView();\n        }\n        closeModalHandler(event) {\n            event.preventDefault();\n            this.component.setValue(this.currentValue);\n            this.closeModal();\n        }\n        saveModalValueHandler(event) {\n            event.preventDefault();\n            this.currentValue = this.component.dataValue;\n            this.closeModal();\n        }\n    };\n});"]}