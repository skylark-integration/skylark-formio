{"version":3,"sources":["components/tags/Tags.js"],"names":["define","Input","Choices","TagsComponent","[object Object]","extend","schema","type","label","key","delimeter","storeas","maxTags","builderInfo","title","icon","group","documentation","weight","super","init","emptyValue","this","component","defaultSchema","inputInfo","info","attr","changeEvent","delimiter","element","index","attachElement","setAttribute","i18next","dir","choices","destroy","editItems","maxItemCount","removeItemButton","duplicateItemsAllowed","itemList","tabIndex","addEventListener","input","value","setValue","clearInput","hideDropdown","updateValue","modified","detach","Array","isArray","join","split","filter","result","flags","changed","dataValue","removeActiveItems","disabled","disable","enable","refs","length","parentNode","lastChild","focus"],"mappings":";;;;;;;AAAAA,QACI,0BACA,cACD,SAAUC,EAAOC,GAChB,aACA,aAAaC,UAAsBF,EAC/BG,iBAAiBC,GACb,OAAOJ,EAAMK,QACTC,KAAM,OACNC,MAAO,OACPC,IAAK,OACLC,UAAW,IACXC,QAAS,SACTC,QAAS,MACPP,GAEVQ,yBACI,OACIC,MAAO,OACPC,KAAM,OACNC,MAAO,WACPC,cAAe,sCACfC,OAAQ,GACRZ,OAAQH,EAAcG,UAG9BF,OACIe,MAAMC,OAEVC,iBACI,MAAkC,WAA3BC,KAAKC,UAAUZ,QAAuB,MAEjDa,oBACI,OAAOrB,EAAcG,SAEzBmB,gBACI,MAAMC,EAAOP,MAAMM,UAInB,OAHAC,EAAKnB,KAAO,QACZmB,EAAKC,KAAKpB,KAAO,OACjBmB,EAAKE,YAAc,SACZF,EAEXG,gBACI,OAAOP,KAAKC,UAAUb,WAAa,IAEvCN,cAAc0B,EAASC,GACnBZ,MAAMa,cAAcF,EAASC,GACxBD,IAGLA,EAAQG,aAAa,MAAOX,KAAKY,QAAQC,OACrCb,KAAKc,SACLd,KAAKc,QAAQC,UAEjBf,KAAKc,QAAU,IAAIlC,EAAQ4B,GACvBD,UAAWP,KAAKO,UAChBS,WAAW,EACXC,aAAcjB,KAAKC,UAAUX,QAC7B4B,kBAAkB,EAClBC,uBAAuB,IAE3BnB,KAAKc,QAAQM,SAASZ,QAAQa,SAAWb,EAAQa,SACjDrB,KAAKsB,iBAAiBtB,KAAKc,QAAQS,MAAMf,QAAS,OAAQ,KACtD,MAAMgB,EAAQxB,KAAKc,QAAQS,MAAMC,MAC7BA,IACAxB,KAAKc,QAAQW,UAAUD,IACvBxB,KAAKc,QAAQY,aACb1B,KAAKc,QAAQa,cAAa,GAC1B3B,KAAK4B,YAAY,MAAQC,UAAU,QAI/C/C,SACIe,MAAMiC,SACF9B,KAAKc,UACLd,KAAKc,QAAQC,UACbf,KAAKc,QAAU,MAGvBhC,eAAe0C,GACX,MAA+B,WAA3BxB,KAAKC,UAAUZ,SAAwB0C,MAAMC,QAAQR,GAC9CA,EAAMS,KAAKjC,KAAKO,WACW,UAA3BP,KAAKC,UAAUZ,SAAwC,iBAAVmC,EAC7CA,EAAMU,MAAMlC,KAAKO,WAAW4B,OAAOC,GAAUA,GAEjDZ,EAEX1C,SAAS0C,EAAOa,MACZ,MAAMC,EAAUzC,MAAM4B,SAASD,EAAOa,GACtC,GAAIrC,KAAKc,QAAS,CACd,IAAIyB,EAAYvC,KAAKuC,UACrBvC,KAAKc,QAAQ0B,oBACTD,IACyB,iBAAdA,IACPA,EAAYA,EAAUL,MAAMlC,KAAKO,WAAW4B,OAAOC,GAAUA,IAEjEpC,KAAKc,QAAQW,SAASM,MAAMC,QAAQO,GAAaA,GAAaA,KAGtE,OAAOD,EAEXG,aAAaA,GACT5C,MAAM4C,SAAWA,EACZzC,KAAKc,UAGN2B,EACAzC,KAAKc,QAAQ4B,UAEb1C,KAAKc,QAAQ6B,UAGrBF,eACI,OAAO5C,MAAM4C,SAEjB3D,QACQkB,KAAK4C,KAAKrB,OAASvB,KAAK4C,KAAKrB,MAAMsB,QACnC7C,KAAK4C,KAAKrB,MAAM,GAAGuB,WAAWC,UAAUC","file":"../../../components/tags/Tags.js","sourcesContent":["define([\n    '../_classes/input/Input',\n    'choices.js'\n], function (Input, Choices) {\n    'use strict';\n    return class TagsComponent extends Input {\n        static schema(...extend) {\n            return Input.schema({\n                type: 'tags',\n                label: 'Tags',\n                key: 'tags',\n                delimeter: ',',\n                storeas: 'string',\n                maxTags: 0\n            }, ...extend);\n        }\n        static get builderInfo() {\n            return {\n                title: 'Tags',\n                icon: 'tags',\n                group: 'advanced',\n                documentation: 'http://help.form.io/userguide/#tags',\n                weight: 30,\n                schema: TagsComponent.schema()\n            };\n        }\n        init() {\n            super.init();\n        }\n        get emptyValue() {\n            return this.component.storeas === 'string' ? '' : [];\n        }\n        get defaultSchema() {\n            return TagsComponent.schema();\n        }\n        get inputInfo() {\n            const info = super.inputInfo;\n            info.type = 'input';\n            info.attr.type = 'text';\n            info.changeEvent = 'change';\n            return info;\n        }\n        get delimiter() {\n            return this.component.delimeter || ',';\n        }\n        attachElement(element, index) {\n            super.attachElement(element, index);\n            if (!element) {\n                return;\n            }\n            element.setAttribute('dir', this.i18next.dir());\n            if (this.choices) {\n                this.choices.destroy();\n            }\n            this.choices = new Choices(element, {\n                delimiter: this.delimiter,\n                editItems: true,\n                maxItemCount: this.component.maxTags,\n                removeItemButton: true,\n                duplicateItemsAllowed: false\n            });\n            this.choices.itemList.element.tabIndex = element.tabIndex;\n            this.addEventListener(this.choices.input.element, 'blur', () => {\n                const value = this.choices.input.value;\n                if (value) {\n                    this.choices.setValue([value]);\n                    this.choices.clearInput();\n                    this.choices.hideDropdown(true);\n                    this.updateValue(null, { modified: true });\n                }\n            });\n        }\n        detach() {\n            super.detach();\n            if (this.choices) {\n                this.choices.destroy();\n                this.choices = null;\n            }\n        }\n        normalizeValue(value) {\n            if (this.component.storeas === 'string' && Array.isArray(value)) {\n                return value.join(this.delimiter);\n            } else if (this.component.storeas === 'array' && typeof value === 'string') {\n                return value.split(this.delimiter).filter(result => result);\n            }\n            return value;\n        }\n        setValue(value, flags = {}) {\n            const changed = super.setValue(value, flags);\n            if (this.choices) {\n                let dataValue = this.dataValue;\n                this.choices.removeActiveItems();\n                if (dataValue) {\n                    if (typeof dataValue === 'string') {\n                        dataValue = dataValue.split(this.delimiter).filter(result => result);\n                    }\n                    this.choices.setValue(Array.isArray(dataValue) ? dataValue : [dataValue]);\n                }\n            }\n            return changed;\n        }\n        set disabled(disabled) {\n            super.disabled = disabled;\n            if (!this.choices) {\n                return;\n            }\n            if (disabled) {\n                this.choices.disable();\n            } else {\n                this.choices.enable();\n            }\n        }\n        get disabled() {\n            return super.disabled;\n        }\n        focus() {\n            if (this.refs.input && this.refs.input.length) {\n                this.refs.input[0].parentNode.lastChild.focus();\n            }\n        }\n    };\n});"]}