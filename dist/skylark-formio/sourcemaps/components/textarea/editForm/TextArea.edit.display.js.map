{"version":3,"sources":["components/textarea/editForm/TextArea.edit.display.js"],"names":["define","_","Formio","key","ignore","type","input","label","weight","tooltip","placeholder","defaultValue","dataSrc","data","values","value","conditional","json","===","var","==","or","valueProperty","custom","map","Providers","getProviders","storage","title","rows","editor","and","clearOnHide","as","customDefaultValue","component","row","instance","wysiwygDefault"],"mappings":"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","file":"../../../../components/textarea/editForm/TextArea.edit.display.js","sourcesContent":["define([\n    'skylark-lodash',\n    '../../../Formio'\n], function (_, Formio) {\n    'use strict';\n    return [\n        {\n            key: 'inputMask',\n            ignore: true\n        },\n        {\n            key: 'allowMultipleMasks',\n            ignore: true\n        },\n        {\n            key: 'mask',\n            ignore: true\n        },\n        {\n            type: 'number',\n            input: true,\n            key: 'rows',\n            label: 'Rows',\n            weight: 210,\n            tooltip: 'This allows control over how many rows are visible in the text area.',\n            placeholder: 'Enter the amount of rows'\n        },\n        {\n            weight: 1350,\n            type: 'checkbox',\n            input: true,\n            key: 'spellcheck',\n            defaultValue: true,\n            label: 'Allow Spellcheck'\n        },\n        {\n            type: 'select',\n            input: true,\n            key: 'editor',\n            label: 'Editor',\n            tooltip: 'Select the type of WYSIWYG editor to use for this text area.',\n            dataSrc: 'values',\n            data: {\n                values: [\n                    {\n                        label: 'None',\n                        value: ''\n                    },\n                    {\n                        label: 'ACE',\n                        value: 'ace'\n                    },\n                    {\n                        label: 'CKEditor',\n                        value: 'ckeditor'\n                    },\n                    {\n                        label: 'Quill',\n                        value: 'quill'\n                    },\n                    {\n                        label: 'TinyMCE',\n                        value: 'tiny'\n                    }\n                ]\n            },\n            weight: 415\n        },\n        {\n            type: 'textfield',\n            input: true,\n            key: 'tinyApiKey',\n            label: 'TinyMCE Api Key',\n            weight: 415.2,\n            placeholder: 'If you have a TinyMCE APi Key, enter it here.',\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.editor' },\n                        'tiny'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'checkbox',\n            input: true,\n            key: 'autoExpand',\n            label: 'Auto Expand',\n            tooltip: \"This will make the TextArea auto expand it's height as the user is typing into the area.\",\n            weight: 415,\n            conditional: {\n                json: {\n                    '==': [\n                        { var: 'data.editor' },\n                        ''\n                    ]\n                }\n            }\n        },\n        {\n            type: 'checkbox',\n            input: true,\n            key: 'isUploadEnabled',\n            label: 'Enable Image Upload',\n            weight: 415.1,\n            conditional: {\n                json: {\n                    or: [{\n                            '===': [\n                                { var: 'data.editor' },\n                                'quill'\n                            ]\n                        }]\n                }\n            }\n        },\n        {\n            type: 'select',\n            input: true,\n            key: 'uploadStorage',\n            label: 'Image Upload Storage',\n            placeholder: 'Select your file storage provider',\n            weight: 415.2,\n            tooltip: 'Which storage to save the files in.',\n            valueProperty: 'value',\n            dataSrc: 'custom',\n            data: {\n                custom() {\n                    return _.map(Formio.Providers.getProviders('storage'), (storage, key) => ({\n                        label: storage.title,\n                        value: key\n                    }));\n                }\n            },\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.isUploadEnabled' },\n                        true\n                    ]\n                }\n            }\n        },\n        {\n            type: 'textfield',\n            input: true,\n            key: 'uploadUrl',\n            label: 'Image Upload Url',\n            weight: 415.3,\n            placeholder: 'Enter the url to post the files to.',\n            tooltip: \"See <a href='https://github.com/danialfarid/ng-file-upload#server-side' target='_blank'>https://github.com/danialfarid/ng-file-upload#server-side</a> for how to set up the server.\",\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.uploadStorage' },\n                        'url'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'textarea',\n            key: 'uploadOptions',\n            label: 'Image Upload Custom request options',\n            tooltip: 'Pass your custom xhr options(optional)',\n            rows: 5,\n            editor: 'ace',\n            input: true,\n            weight: 415.4,\n            placeholder: `{\n      \"withCredentials\": true\n    }`,\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.uploadStorage' },\n                        'url'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'textfield',\n            input: true,\n            key: 'uploadDir',\n            label: 'Image Upload Directory',\n            placeholder: '(optional) Enter a directory for the files',\n            tooltip: 'This will place all the files uploaded in this field in the directory',\n            weight: 415.5,\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.isUploadEnabled' },\n                        true\n                    ]\n                }\n            }\n        },\n        {\n            type: 'textfield',\n            key: 'fileKey',\n            input: true,\n            label: 'File\\xA0form-data\\xA0Key',\n            tooltip: 'Key\\xA0name\\xA0that\\xA0you\\xA0would\\xA0like\\xA0to\\xA0modify\\xA0for\\xA0the\\xA0file\\xA0while\\xA0calling\\xA0API\\xA0request.',\n            rows: 5,\n            weight: 415.6,\n            placeholder: 'Enter\\xA0the\\xA0key\\xA0name\\xA0of\\xA0a\\xA0file\\xA0for\\xA0form\\xA0data.',\n            conditional: {\n                json: {\n                    and: [\n                        {\n                            '===': [\n                                { var: 'data.editor' },\n                                'quill'\n                            ]\n                        },\n                        {\n                            '===': [\n                                { var: 'data.isUploadEnabled' },\n                                true\n                            ]\n                        },\n                        {\n                            '===': [\n                                { var: 'data.uploadStorage' },\n                                'url'\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            type: 'select',\n            input: true,\n            key: 'as',\n            label: 'Save As',\n            dataSrc: 'values',\n            tooltip: 'This setting determines how the value should be entered and stored in the database.',\n            clearOnHide: true,\n            data: {\n                values: [\n                    {\n                        label: 'String',\n                        value: 'string'\n                    },\n                    {\n                        label: 'JSON',\n                        value: 'json'\n                    },\n                    {\n                        label: 'HTML',\n                        value: 'html'\n                    }\n                ]\n            },\n            conditional: {\n                json: {\n                    or: [\n                        {\n                            '===': [\n                                { var: 'data.editor' },\n                                'quill'\n                            ]\n                        },\n                        {\n                            '===': [\n                                { var: 'data.editor' },\n                                'ace'\n                            ]\n                        }\n                    ]\n                }\n            },\n            weight: 416\n        },\n        {\n            type: 'textarea',\n            input: true,\n            editor: 'ace',\n            rows: 10,\n            as: 'json',\n            label: 'Editor Settings',\n            tooltip: 'Enter the WYSIWYG editor JSON configuration.',\n            key: 'wysiwyg',\n            customDefaultValue(value, component, row, data, instance) {\n                return instance ? instance.wysiwygDefault : '';\n            },\n            conditional: {\n                json: {\n                    or: [\n                        {\n                            '===': [\n                                { var: 'data.editor' },\n                                'ace'\n                            ]\n                        },\n                        {\n                            '===': [\n                                { var: 'data.editor' },\n                                'ckeditor'\n                            ]\n                        },\n                        {\n                            '===': [\n                                { var: 'data.editor' },\n                                'quill'\n                            ]\n                        },\n                        {\n                            '===': [\n                                { var: 'data.editor' },\n                                'tiny'\n                            ]\n                        }\n                    ]\n                }\n            },\n            weight: 417\n        }\n    ];\n});"]}