{"version":3,"sources":["components/file/File.js"],"names":["define","Field","utils","download","_","Formio","NativePromise","webViewCamera","navigator","camera","Camera","HTMLCanvasElement","prototype","toBlob","Object","defineProperty","value","callback","type","quality","canvas","this","setTimeout","binStr","atob","toDataURL","split","len","length","arr","Uint8Array","i","charCodeAt","Blob","FileComponent","[object Object]","extend","schema","label","key","image","privateDownload","imageSize","filePattern","fileMinSize","fileMaxSize","uploadOnly","builderInfo","title","group","icon","documentation","weight","super","init","fileReaderSupported","FileReader","formDataSupported","Boolean","window","FormData","progressSupported","XMLHttpRequest","support","filereader","formdata","hasWarning","progress","filesReady","resolve","reject","filesReadyResolve","filesReadyReject","cameraMode","statuses","dataReady","defaultSchema","fileInfo","fileService","downloadFile","then","result","url","emptyValue","isArray","map","join","get","dataValue","defaultValue","Array","hasTypes","component","fileTypes","options","formio","root","_form","_id","formUrl","projectUrl","render","renderTemplate","fileSize","files","disabled","constraints","mediaDevices","getUserMedia","video","width","min","ideal","height","aspectRatio","audio","videoStream","getVideoTracks","forEach","track","stop","videoPlayer","document","createElement","videoHeight","videoWidth","getContext","drawImage","getVideoStream","stream","refs","console","warn","redraw","srcObject","parseInt","webcamSize","setAttribute","play","catch","err","error","stopVideoStream","getFrame","frame","name","Date","now","upload","attrs","fileInput","ce","style","tabindex","body","appendChild","addEventListener","removeChild","trigger","click","_cameraMode","startVideo","stopVideo","useWebViewCamera","imageUpload","browseOptions","multiple","accept","storage","deleteFile","makeRequest","element","loadRefs","fileDrop","fileBrowse","galleryButton","cameraButton","takePictureButton","toggleCameraMode","fileLink","removeLink","fileStatusRemove","fileImage","fileType","input","superAttach","attach","event","className","preventDefault","dataTransfer","browseFiles","index","getFile","splice","getPicture","success","resolveLocalFileSystemURL","fileEntry","file","sourceType","PictureSourceType","PHOTOLIBRARY","CAMERA","encodingType","EncodingType","PNG","mediaType","MediaType","PICTURE","saveToPhotoAlbum","correctOrientation","takePicture","find","typeObj","target","loadingImages","push","loadImage","src","all","a","b","c","d","e","Math","log","pow","toFixed","str","regexp","excludes","substring","r","globStringToRegex","concat","startsWith","replace","RegExp","search","parseFloat","val","pattern","valid","isNil","test","reduce","excludePattern","exclude","size","translateScalars","slice","call","fileName","uniqueName","fileNameTemplate","evalContext","fileUpload","originalName","status","message","t","validatePattern","validateMinSize","validateMaxSize","dir","interpolate","private","fileKey","uploadFile","evt","loaded","total","indexOf","hasValue","triggerChange","response","alert","includes","open","focus"],"mappings":";;;;;;;AAAAA,QACI,0BACA,oBACA,oCACA,iBACA,eACA,4BACD,SAAUC,EAAOC,EAAOC,EAAUC,EAAGC,EAAQC,GAC5C,aACA,IACIC,EAAgBC,UAAUC,aAD1BC,EAgBJ,OAdKC,kBAAkBC,UAAUC,QAC7BC,OAAOC,eAAeJ,kBAAkBC,UAAW,UAC/CI,MAAO,SAAUC,EAAUC,EAAMC,GAC7B,IAAIC,EAASC,KACbC,WAAW,WAEP,IADA,IAAIC,EAASC,KAAKJ,EAAOK,UAAUP,EAAMC,GAASO,MAAM,KAAK,IAAKC,EAAMJ,EAAOK,OAAQC,EAAM,IAAIC,WAAWH,GACnGI,EAAI,EAAGA,EAAIJ,EAAKI,IACrBF,EAAIE,GAAKR,EAAOS,WAAWD,GAE/Bd,EAAS,IAAIgB,MAAMJ,IAAQX,KAAMA,GAAQ,0BAK5CgB,UAAsBjC,EAC/BkC,iBAAiBC,GACb,OAAOnC,EAAMoC,QACTnB,KAAM,OACNoB,MAAO,SACPC,IAAK,OACLC,OAAO,EACPC,iBAAiB,EACjBC,UAAW,MACXC,YAAa,IACbC,YAAa,MACbC,YAAa,MACbC,YAAY,MACVV,GAEVW,yBACI,OACIC,MAAO,OACPC,MAAO,UACPC,KAAM,OACNC,cAAe,sCACfC,OAAQ,IACRf,OAAQH,EAAcG,UAG9BF,OACIkB,MAAMC,OACN/C,EAAgBC,UAAUC,aA3C9BC,EA4CI,MAAM6C,EAA4C,oBAAfC,WAC7BC,EAAoBC,QAAQC,OAAOC,UACnCC,IAAoBF,OAAOG,gBAAiB,WAAY,IAAIA,eAClEzC,KAAK0C,SACDC,WAAYT,EACZU,SAAUR,EACVS,YAAaX,IAAwBE,IAAsBI,EAC3DM,SAAUN,GAEdxC,KAAK+C,WAAa,IAAI9D,EAAc,CAAC+D,EAASC,KAC1CjD,KAAKkD,kBAAoBF,EACzBhD,KAAKmD,iBAAmBF,IAE5BjD,KAAKoD,YAAa,EAClBpD,KAAKqD,YAETC,gBACI,OAAOtD,KAAK+C,WAEhBQ,oBACI,OAAO1C,EAAcG,SAEzBF,UAAU0C,GACN,OAAOxD,KAAKyD,YAAYC,aAAaF,GAAUG,KAAKC,GAAUA,EAAOC,KAEzEC,iBACI,SAEJhD,iBAAiBnB,GACb,OAAIZ,EAAEgF,QAAQpE,GACHZ,EAAEiF,IAAIrE,EAAO,gBAAgBsE,KAAK,MAEtClF,EAAEmF,IAAIvE,EAAO,eAAgB,IAExCmB,WACI,OAAOd,KAAKmE,UAEhBC,mBACI,MAAMzE,EAAQqC,MAAMoC,aACpB,OAAOC,MAAMN,QAAQpE,GAASA,KAElC2E,eACI,OAAOtE,KAAKuE,UAAUC,WAAaH,MAAMN,QAAQ/D,KAAKuE,UAAUC,YAAkD,IAApCxE,KAAKuE,UAAUC,UAAUjE,SAAuD,KAAtCP,KAAKuE,UAAUC,UAAU,GAAGvD,OAAsD,KAAtCjB,KAAKuE,UAAUC,UAAU,GAAG7E,OAEpM8D,kBACI,GAAIzD,KAAKyE,QAAQhB,YACb,OAAOzD,KAAKyE,QAAQhB,YAExB,GAAIzD,KAAKyE,QAAQC,OACb,OAAO1E,KAAKyE,QAAQC,OAExB,GAAI1E,KAAK2E,MAAQ3E,KAAK2E,KAAKD,OACvB,OAAO1E,KAAK2E,KAAKD,OAErB,MAAMA,EAAS,IAAI1F,EAInB,OAHIgB,KAAK2E,MAAQ3E,KAAK2E,KAAKC,OAAS5E,KAAK2E,KAAKC,MAAMC,MAChDH,EAAOI,WAAcJ,EAAOK,mBAAqB/E,KAAK2E,KAAKC,MAAMC,OAE9DH,EAEX5D,SACI,OAAOkB,MAAMgD,OAAOhF,KAAKiF,eAAe,QACpCC,SAAUlF,KAAKkF,SACfC,MAAOnF,KAAKmE,cACZd,SAAUrD,KAAKqD,SACf+B,SAAUpF,KAAKoF,SACf1C,QAAS1C,KAAK0C,WAGtB5B,eAAeuE,GACX,OAAOlG,UAAUmG,aAAaC,cAC1BC,OACIC,OACIC,IAAK,IACLC,MAAO,MAEXC,QACIF,IAAK,IACLC,MAAO,MAEXE,aAAeF,MAAO,GAAK,MACxBN,GAEPS,OAAO,IAGfhF,gBAAgBiF,GACZA,EAAYC,iBAAiBC,QAAQC,GAASA,EAAMC,QAExDrF,SAASsF,GACL,OAAO,IAAInH,EAAc+D,IACrB,MAAMjD,EAASsG,SAASC,cAAc,UACtCvG,EAAO6F,OAASQ,EAAYG,YAC5BxG,EAAO0F,MAAQW,EAAYI,WACXzG,EAAO0G,WAAW,MAC1BC,UAAUN,EAAa,EAAG,GAClCrG,EAAOP,OAAOwD,KAGtBlC,aACId,KAAK2G,iBAAiBhD,KAAKiD,IACvB5G,KAAK+F,YAAca,EACnB,MAAMR,YAACA,GAAepG,KAAK6G,KAC3B,IAAKT,EAID,OAHAU,QAAQC,KAAK,uCACb/G,KAAKoD,YAAa,OAClBpD,KAAKgH,SAGTZ,EAAYa,UAAYL,EACxB,MAAMnB,EAAQyB,SAASlH,KAAKuE,UAAU4C,aAAe,IACrDf,EAAYgB,aAAa,QAAS3B,GAClCW,EAAYiB,SACbC,MAAMC,IACLT,QAAQU,MAAMD,GACdvH,KAAKoD,YAAa,EAClBpD,KAAKgH,WAGblG,YACQd,KAAK+F,cACL/F,KAAKyH,gBAAgBzH,KAAK+F,aAC1B/F,KAAK+F,YAAc,MAG3BjF,cACI,MAAMsF,YAACA,GAAepG,KAAK6G,KAC3B,IAAKT,EAID,OAHAU,QAAQC,KAAK,uCACb/G,KAAKoD,YAAa,OAClBpD,KAAKgH,SAGThH,KAAK0H,SAAStB,GAAazC,KAAKgE,IAC5BA,EAAMC,cAAiBC,KAAKC,YAC5B9H,KAAK+H,QAAQJ,IACb3H,KAAKoD,YAAa,EAClBpD,KAAKgH,WAGblG,YAAYkH,MACR,OAAO,IAAI/I,EAAc+D,IACrB,MAAMiF,EAAYjI,KAAKkI,GAAG,SACtBrI,KAAM,OACNsI,MAAO,2CACPC,SAAU,QACPJ,IAEP3B,SAASgC,KAAKC,YAAYL,GAC1BA,EAAUM,iBAAiB,SAAU,KACjCvF,EAAQiF,EAAU9C,OAClBkB,SAASgC,KAAKG,YAAYP,KAC3B,GAC8B,mBAAtBA,EAAUQ,QACjBR,EAAUQ,QAAQ,SAElBR,EAAUS,UAItBtF,eAAezD,GACXK,KAAK2I,YAAchJ,EACfA,EACAK,KAAK4I,aAEL5I,KAAK6I,YAGbzF,iBACI,OAAOpD,KAAK2I,YAEhBG,uBACI,OAAO9I,KAAK+I,aAAe7J,EAE/B6J,kBACI,OAAO1G,QAAQrC,KAAKuE,UAAUpD,OAElC6H,oBACI,MAAMvE,KAON,OANIzE,KAAKuE,UAAU0E,WACfxE,EAAQwE,UAAW,GAEnBjJ,KAAK+I,cACLtE,EAAQyE,OAAS,WAEdzE,EAEX3D,WAAW0C,GACP,GAAIA,GAAuC,QAA3BxD,KAAKuE,UAAU4E,QAAmB,CAC9C,MAAM1F,EAAczD,KAAKyD,YACzB,GAAIA,GAAiD,mBAA3BA,EAAY2F,WAClC3F,EAAY2F,WAAW5F,OACpB,CACH,MAAMkB,EAAS1E,KAAKyE,QAAQC,QAAU1E,KAAK2E,MAAQ3E,KAAK2E,KAAKD,OACzDA,GACAA,EAAO2E,YAAY,GAAI7F,EAASK,IAAK,YAKrD/C,OAAOwI,GACHtJ,KAAKuJ,SAASD,GACVE,SAAU,SACVC,WAAY,SACZC,cAAe,SACfC,aAAc,SACdC,kBAAmB,SACnBC,iBAAkB,SAClBzD,YAAa,SACb0D,SAAU,WACVC,WAAY,WACZC,iBAAkB,WAClBC,UAAW,WACXC,SAAU,aAEdlK,KAAK6G,KAAKsD,SACV,MAAMC,EAAcpI,MAAMqI,OAAOf,GACjC,GAAItJ,KAAK6G,KAAK2C,SAAU,CACpB,MAAMF,EAAUtJ,KAChBA,KAAKuI,iBAAiBvI,KAAK6G,KAAK2C,SAAU,WAAY,SAAUc,GAC5DtK,KAAKuK,UAAY,4BACjBD,EAAME,mBAEVxK,KAAKuI,iBAAiBvI,KAAK6G,KAAK2C,SAAU,YAAa,SAAUc,GAC7DtK,KAAKuK,UAAY,eACjBD,EAAME,mBAEVxK,KAAKuI,iBAAiBvI,KAAK6G,KAAK2C,SAAU,OAAQ,SAAUc,GAIxD,OAHAtK,KAAKuK,UAAY,eACjBD,EAAME,iBACNlB,EAAQvB,OAAOuC,EAAMG,aAAatF,QAC3B,IAyFf,GAtFInF,KAAK6G,KAAK4C,YACVzJ,KAAKuI,iBAAiBvI,KAAK6G,KAAK4C,WAAY,QAASa,IACjDA,EAAME,iBACNxK,KAAK0K,YAAY1K,KAAKgJ,eAAerF,KAAKwB,IACtCnF,KAAK+H,OAAO5C,OAIxBnF,KAAK6G,KAAKiD,SAAS7D,QAAQ,CAAC6D,EAAUa,KAClC3K,KAAKuI,iBAAiBuB,EAAU,QAASQ,IACrCA,EAAME,iBACNxK,KAAK4K,QAAQ5K,KAAKmE,UAAUwG,QAGpC3K,KAAK6G,KAAKkD,WAAW9D,QAAQ,CAAC8D,EAAYY,KACtC3K,KAAKuI,iBAAiBwB,EAAY,QAASO,IACvC,MAAM9G,EAAWxD,KAAKmE,UAAUwG,GAChC3K,KAAKoJ,WAAW5F,GAChB8G,EAAME,iBACNxK,KAAK6K,OAAOF,GACZ3K,KAAKgH,aAGbhH,KAAK6G,KAAKmD,iBAAiB/D,QAAQ,CAAC+D,EAAkBW,KAClD3K,KAAKuI,iBAAiByB,EAAkB,QAASM,IAC7CA,EAAME,iBACNxK,KAAKqD,SAASwH,OAAOF,EAAO,GAC5B3K,KAAKgH,aAGThH,KAAK6G,KAAK6C,eAAiBxK,GAC3Bc,KAAKuI,iBAAiBvI,KAAK6G,KAAK6C,cAAe,QAASY,IACpDA,EAAME,iBACNtL,EAAc4L,WAAWC,IACrBzI,OAAO0I,0BAA0BD,EAASE,IACtCA,EAAUC,KAAKA,IACXlL,KAAK+H,QAAQmD,SAGtB3D,IACCT,QAAQU,MAAMD,KACb4D,WAAYjM,EAAckM,kBAAkBC,iBAGrDrL,KAAK6G,KAAK8C,cAAgBzK,GAC1Bc,KAAKuI,iBAAiBvI,KAAK6G,KAAK8C,aAAc,QAASW,IACnDA,EAAME,iBACNtL,EAAc4L,WAAWC,IACrBzI,OAAO0I,0BAA0BD,EAASE,IACtCA,EAAUC,KAAKA,IACXlL,KAAK+H,QAAQmD,SAGtB3D,IACCT,QAAQU,MAAMD,KAEd4D,WAAYjM,EAAckM,kBAAkBE,OAC5CC,aAAcrM,EAAcsM,aAAaC,IACzCC,UAAWxM,EAAcyM,UAAUC,QACnCC,kBAAkB,EAClBC,oBAAoB,MAI5B9L,KAAK6G,KAAK+C,mBACV5J,KAAKuI,iBAAiBvI,KAAK6G,KAAK+C,kBAAmB,QAASU,IACxDA,EAAME,iBACNxK,KAAK+L,gBAGT/L,KAAK6G,KAAKgD,kBACV7J,KAAKuI,iBAAiBvI,KAAK6G,KAAKgD,iBAAkB,QAASS,IACvDA,EAAME,iBACNxK,KAAKoD,YAAcpD,KAAKoD,WACxBpD,KAAKgH,WAGbhH,KAAK6G,KAAKqD,SAASjE,QAAQ,CAACiE,EAAUS,KAClC3K,KAAKmE,UAAUwG,GAAOT,SAAWlK,KAAKuE,UAAUC,UAAU,GAAGvD,MAC7DjB,KAAKuI,iBAAiB2B,EAAU,SAAUI,IACtCA,EAAME,iBACN,MAAMN,EAAWlK,KAAKuE,UAAUC,UAAUwH,KAAKC,GAAWA,EAAQtM,QAAU2K,EAAM4B,OAAOvM,OACzFK,KAAKmE,UAAUwG,GAAOT,SAAWA,EAASjJ,UAG9BjB,KAAKyD,YACR,CACb,MAAM0I,KACNnM,KAAK6G,KAAKoD,UAAUhE,QAAQ,CAAC9E,EAAOwJ,KAChCwB,EAAcC,KAAKpM,KAAKqM,UAAUrM,KAAKmE,UAAUwG,IAAQhH,KAAKE,GAAO1C,EAAMmL,IAAMzI,MAEjFsI,EAAc5L,QACdtB,EAAcsN,IAAIJ,GAAexI,KAAK,KAClC3D,KAAKkD,sBACNoE,MAAM,IAAMtH,KAAKmD,oBAG5B,OAAOiH,EAEXtJ,SAAS0L,EAAGC,EAAGC,EAAGC,EAAGC,GACjB,UAAYH,EAAII,KAAMH,EAAID,EAAEK,IAAKH,EAAI,KAAMC,EAAIF,EAAEF,GAAKE,EAAEC,GAAK,EAAGH,EAAIC,EAAEM,IAAIJ,EAAGC,IAAII,QAAQ,MAAQJ,KAAQ,aAAaA,MAAS,UAEnI9L,kBAAkBmM,GACd,IAAIC,EAAS,GAAIC,KACjB,GAAIF,EAAI1M,OAAS,GAAgB,MAAX0M,EAAI,IAAsC,MAAxBA,EAAIA,EAAI1M,OAAS,GACrD2M,EAASD,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,OACpC,CACH,MAAMF,EAAQ4M,EAAI5M,MAAM,KACxB,GAAIA,EAAME,OAAS,EACf,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAME,OAAQG,IAAK,CACnC,MAAM2M,EAAIrN,KAAKsN,kBAAkBjN,EAAMK,IACnC2M,EAAEH,QACFA,OAAeG,EAAEH,UACbxM,EAAIL,EAAME,OAAS,IACnB2M,GAAU,MAGdC,EAAWA,EAASI,OAAOF,EAAEF,eAIjCF,EAAIO,WAAW,KACfL,EAASf,aAAcpM,KAAKsN,kBAAkBL,EAAIG,UAAU,IAAIF,gBAE5DD,EAAIO,WAAW,OACfP,MAAWA,KAGfC,GADAA,MAAcD,EAAIQ,QAAQ,IAAIC,OAAO,oCAAqC,KAAM,YAChED,QAAQ,QAAS,MAAMA,QAAQ,QAAS,MAIpE,OACIP,OAAAA,EACAC,SAAAA,GAGRrM,iBAAiBmM,GACb,GAAmB,iBAARA,EAAkB,CACzB,GAAIA,EAAIU,OAAO,SAAWV,EAAI1M,OAAS,EACnC,OAAOqN,WAA8C,KAAnCX,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,IAEpD,GAAI0M,EAAIU,OAAO,SAAWV,EAAI1M,OAAS,EACnC,OAAOqN,WAA8C,KAAnCX,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,GAAY,MAEhE,GAAI0M,EAAIU,OAAO,SAAWV,EAAI1M,OAAS,EACnC,OAAOqN,WAA8C,KAAnCX,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,GAAY,KAAO,MAEvE,GAAI0M,EAAIU,OAAO,QAAUV,EAAI1M,OAAS,EAClC,OAAOqN,WAAWX,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,IAEpD,GAAI0M,EAAIU,OAAO,QAAUV,EAAI1M,OAAS,EAClC,OAAOqN,WAAWX,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,IAEpD,GAAI0M,EAAIU,OAAO,QAAUV,EAAI1M,OAAS,EAClC,OAAOqN,WAA8C,GAAnCX,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,IAEpD,GAAI0M,EAAIU,OAAO,QAAUV,EAAI1M,OAAS,EAClC,OAAOqN,WAA8C,KAAnCX,EAAIG,UAAU,EAAGH,EAAI1M,OAAS,IAGxD,OAAO0M,EAEXnM,gBAAgBoK,EAAM2C,GAClB,IAAKA,EACD,OAAO,EAEX,MAAMC,EAAU9N,KAAKsN,kBAAkBO,GACvC,IAAIE,GAAQ,EACZ,GAAID,EAAQZ,QAAUY,EAAQZ,OAAO3M,OAAQ,CACzC,MAAM2M,EAAS,IAAIQ,OAAOI,EAAQZ,OAAQ,KAC1Ca,GAAShP,EAAEiP,MAAM9C,EAAKrL,OAASqN,EAAOe,KAAK/C,EAAKrL,QAAUd,EAAEiP,MAAM9C,EAAKtD,OAASsF,EAAOe,KAAK/C,EAAKtD,MAMrG,OAJAmG,EAAQD,EAAQX,SAASe,OAAO,CAACtK,EAAQuK,KACrC,MAAMC,EAAU,IAAIV,OAAOS,EAAgB,KAC3C,OAAOvK,IAAW7E,EAAEiP,MAAM9C,EAAKrL,QAAUuO,EAAQH,KAAK/C,EAAKrL,SAAWd,EAAEiP,MAAM9C,EAAKtD,QAAUwG,EAAQH,KAAK/C,EAAKtD,QAChHmG,GAGPjN,gBAAgBoK,EAAM2C,GAClB,OAAO3C,EAAKmD,KAAO,IAAOrO,KAAKsO,iBAAiBT,GAEpD/M,gBAAgBoK,EAAM2C,GAClB,OAAO3C,EAAKmD,KAAO,IAAOrO,KAAKsO,iBAAiBT,GAEpD/M,OAAOqE,GACEnF,KAAKuE,UAAU0E,WAChB9D,EAAQd,MAAM9E,UAAUgP,MAAMC,KAAKrJ,EAAO,EAAG,IAE7CnF,KAAKuE,UAAU4E,SAAWhE,GAASA,EAAM5E,QACzC8D,MAAM9E,UAAU0G,QAAQuI,KAAKrJ,EAAO+F,IAChC,MAAMuD,EAAW5P,EAAM6P,WAAWxD,EAAKtD,KAAM5H,KAAKuE,UAAUoK,iBAAkB3O,KAAK4O,eAC7EC,GACFC,aAAc5D,EAAKtD,KACnBA,KAAM6G,EACNJ,KAAMnD,EAAKmD,KACXU,OAAQ,OACRC,QAAShP,KAAKiP,EAAE,oBAEhBjP,KAAKuE,UAAUjD,cAAgBtB,KAAKkP,gBAAgBhE,EAAMlL,KAAKuE,UAAUjD,eACzEuN,EAAWE,OAAS,QACpBF,EAAWG,QAAUhP,KAAKiP,EAAE,oDAAsDnB,QAAS9N,KAAKuE,UAAUjD,eAE1GtB,KAAKuE,UAAUhD,cAAgBvB,KAAKmP,gBAAgBjE,EAAMlL,KAAKuE,UAAUhD,eACzEsN,EAAWE,OAAS,QACpBF,EAAWG,QAAUhP,KAAKiP,EAAE,qDAAuDZ,KAAMrO,KAAKuE,UAAUhD,eAExGvB,KAAKuE,UAAU/C,cAAgBxB,KAAKoP,gBAAgBlE,EAAMlL,KAAKuE,UAAU/C,eACzEqN,EAAWE,OAAS,QACpBF,EAAWG,QAAUhP,KAAKiP,EAAE,kDAAoDZ,KAAMrO,KAAKuE,UAAU/C,eAEzG,MAAM6N,EAAMrP,KAAKsP,YAAYtP,KAAKuE,UAAU8K,KAAO,KAC7C5L,YAACA,GAAezD,KAOtB,GANKyD,IACDoL,EAAWE,OAAS,QACpBF,EAAWG,QAAUhP,KAAKiP,EAAE,+BAEhCjP,KAAKqD,SAAS+I,KAAKyC,GACnB7O,KAAKgH,SACqB,UAAtB6H,EAAWE,OAAoB,CAC3B/O,KAAKuE,UAAUnD,kBACf8J,EAAKqE,SAAU,GAEnB,MAAMpG,QAACA,EAAO1E,QAAEA,MAAgBzE,KAAKuE,UAC/BV,EAAM7D,KAAKsP,YAAYtP,KAAKuE,UAAUV,KACtC2L,EAAUxP,KAAKuE,UAAUiL,SAAW,OAC1C/L,EAAYgM,WAAWtG,EAAS+B,EAAMuD,EAAUY,EAAKK,IACjDb,EAAWE,OAAS,WACpBF,EAAW/L,SAAWoE,SAAS,IAAMwI,EAAIC,OAASD,EAAIE,cAC/Cf,EAAWG,QAClBhP,KAAKgH,UACNnD,EAAKY,EAAS+K,GAAS7L,KAAKH,IAC3B,MAAMmH,EAAQ3K,KAAKqD,SAASwM,QAAQhB,IACrB,IAAXlE,GACA3K,KAAKqD,SAASwH,OAAOF,EAAO,GAEhCnH,EAASsL,aAAe5D,EAAKtD,KACxB5H,KAAK8P,aACN9P,KAAKmE,cAETnE,KAAKmE,UAAUiI,KAAK5I,GACpBxD,KAAKgH,SACLhH,KAAK+P,kBACNzI,MAAM0I,IACLnB,EAAWE,OAAS,QACpBF,EAAWG,QAAUgB,SACdnB,EAAW/L,SAClB9C,KAAKgH,cAMzBlG,QAAQ0C,GACJ,MAAMiB,QACFA,MACAzE,KAAKuE,WACHd,YAACA,GAAezD,KACtB,IAAKyD,EACD,OAAOwM,MAAM,6BAEbjQ,KAAKuE,UAAUnD,kBACfoC,EAAS+L,SAAU,GAEvB9L,EAAYC,aAAaF,EAAUiB,GAASd,KAAKuH,IACzCA,KAEQ,SACA,aACFgF,SAAShF,EAAK/B,SAChBrK,EAASoM,EAAKrH,IAAKqH,EAAK4D,cAAgB5D,EAAKtD,KAAMsD,EAAKrL,MAExDyC,OAAO6N,KAAKjF,EAAKrH,IAAK,aAG/ByD,MAAM0I,IACLC,MAAMD,KAGdlP,QACQd,KAAK6G,KAAK4C,YACVzJ,KAAK6G,KAAK4C,WAAW2G","file":"../../../components/file/File.js","sourcesContent":["define([\n    '../_classes/field/Field',\n    '../../utils/utils',\n    '../../vendors/downloadjs/download',\n    'skylark-lodash',\n    '../../Formio',\n    '../../vendors/getify/npo'\n], function (Field, utils, download, _, Formio, NativePromise) {\n    'use strict';\n    let Camera;\n    let webViewCamera = navigator.camera || Camera;\n    if (!HTMLCanvasElement.prototype.toBlob) {\n        Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n            value: function (callback, type, quality) {\n                var canvas = this;\n                setTimeout(function () {\n                    var binStr = atob(canvas.toDataURL(type, quality).split(',')[1]), len = binStr.length, arr = new Uint8Array(len);\n                    for (var i = 0; i < len; i++) {\n                        arr[i] = binStr.charCodeAt(i);\n                    }\n                    callback(new Blob([arr], { type: type || 'image/png' }));\n                });\n            }\n        });\n    }\n    return class FileComponent extends Field {\n        static schema(...extend) {\n            return Field.schema({\n                type: 'file',\n                label: 'Upload',\n                key: 'file',\n                image: false,\n                privateDownload: false,\n                imageSize: '200',\n                filePattern: '*',\n                fileMinSize: '0KB',\n                fileMaxSize: '1GB',\n                uploadOnly: false\n            }, ...extend);\n        }\n        static get builderInfo() {\n            return {\n                title: 'File',\n                group: 'premium',\n                icon: 'file',\n                documentation: 'http://help.form.io/userguide/#file',\n                weight: 100,\n                schema: FileComponent.schema()\n            };\n        }\n        init() {\n            super.init();\n            webViewCamera = navigator.camera || Camera;\n            const fileReaderSupported = typeof FileReader !== 'undefined';\n            const formDataSupported = Boolean(window.FormData);\n            const progressSupported = window.XMLHttpRequest ? 'upload' in new XMLHttpRequest() : false;\n            this.support = {\n                filereader: fileReaderSupported,\n                formdata: formDataSupported,\n                hasWarning: !fileReaderSupported || !formDataSupported || !progressSupported,\n                progress: progressSupported\n            };\n            this.filesReady = new NativePromise((resolve, reject) => {\n                this.filesReadyResolve = resolve;\n                this.filesReadyReject = reject;\n            });\n            this.cameraMode = false;\n            this.statuses = [];\n        }\n        get dataReady() {\n            return this.filesReady;\n        }\n        get defaultSchema() {\n            return FileComponent.schema();\n        }\n        loadImage(fileInfo) {\n            return this.fileService.downloadFile(fileInfo).then(result => result.url);\n        }\n        get emptyValue() {\n            return [];\n        }\n        getValueAsString(value) {\n            if (_.isArray(value)) {\n                return _.map(value, 'originalName').join(', ');\n            }\n            return _.get(value, 'originalName', '');\n        }\n        getValue() {\n            return this.dataValue;\n        }\n        get defaultValue() {\n            const value = super.defaultValue;\n            return Array.isArray(value) ? value : [];\n        }\n        get hasTypes() {\n            return this.component.fileTypes && Array.isArray(this.component.fileTypes) && this.component.fileTypes.length !== 0 && (this.component.fileTypes[0].label !== '' || this.component.fileTypes[0].value !== '');\n        }\n        get fileService() {\n            if (this.options.fileService) {\n                return this.options.fileService;\n            }\n            if (this.options.formio) {\n                return this.options.formio;\n            }\n            if (this.root && this.root.formio) {\n                return this.root.formio;\n            }\n            const formio = new Formio();\n            if (this.root && this.root._form && this.root._form._id) {\n                formio.formUrl = `${ formio.projectUrl }/form/${ this.root._form._id }`;\n            }\n            return formio;\n        }\n        render() {\n            return super.render(this.renderTemplate('file', {\n                fileSize: this.fileSize,\n                files: this.dataValue || [],\n                statuses: this.statuses,\n                disabled: this.disabled,\n                support: this.support\n            }));\n        }\n        getVideoStream(constraints) {\n            return navigator.mediaDevices.getUserMedia({\n                video: {\n                    width: {\n                        min: 640,\n                        ideal: 1920\n                    },\n                    height: {\n                        min: 360,\n                        ideal: 1080\n                    },\n                    aspectRatio: { ideal: 16 / 9 },\n                    ...constraints\n                },\n                audio: false\n            });\n        }\n        stopVideoStream(videoStream) {\n            videoStream.getVideoTracks().forEach(track => track.stop());\n        }\n        getFrame(videoPlayer) {\n            return new NativePromise(resolve => {\n                const canvas = document.createElement('canvas');\n                canvas.height = videoPlayer.videoHeight;\n                canvas.width = videoPlayer.videoWidth;\n                const context = canvas.getContext('2d');\n                context.drawImage(videoPlayer, 0, 0);\n                canvas.toBlob(resolve);\n            });\n        }\n        startVideo() {\n            this.getVideoStream().then(stream => {\n                this.videoStream = stream;\n                const {videoPlayer} = this.refs;\n                if (!videoPlayer) {\n                    console.warn('Video player not found in template.');\n                    this.cameraMode = false;\n                    this.redraw();\n                    return;\n                }\n                videoPlayer.srcObject = stream;\n                const width = parseInt(this.component.webcamSize) || 320;\n                videoPlayer.setAttribute('width', width);\n                videoPlayer.play();\n            }).catch(err => {\n                console.error(err);\n                this.cameraMode = false;\n                this.redraw();\n            });\n        }\n        stopVideo() {\n            if (this.videoStream) {\n                this.stopVideoStream(this.videoStream);\n                this.videoStream = null;\n            }\n        }\n        takePicture() {\n            const {videoPlayer} = this.refs;\n            if (!videoPlayer) {\n                console.warn('Video player not found in template.');\n                this.cameraMode = false;\n                this.redraw();\n                return;\n            }\n            this.getFrame(videoPlayer).then(frame => {\n                frame.name = `photo-${ Date.now() }.png`;\n                this.upload([frame]);\n                this.cameraMode = false;\n                this.redraw();\n            });\n        }\n        browseFiles(attrs = {}) {\n            return new NativePromise(resolve => {\n                const fileInput = this.ce('input', {\n                    type: 'file',\n                    style: 'height: 0; width: 0; visibility: hidden;',\n                    tabindex: '-1',\n                    ...attrs\n                });\n                document.body.appendChild(fileInput);\n                fileInput.addEventListener('change', () => {\n                    resolve(fileInput.files);\n                    document.body.removeChild(fileInput);\n                }, true);\n                if (typeof fileInput.trigger === 'function') {\n                    fileInput.trigger('click');\n                } else {\n                    fileInput.click();\n                }\n            });\n        }\n        set cameraMode(value) {\n            this._cameraMode = value;\n            if (value) {\n                this.startVideo();\n            } else {\n                this.stopVideo();\n            }\n        }\n        get cameraMode() {\n            return this._cameraMode;\n        }\n        get useWebViewCamera() {\n            return this.imageUpload && webViewCamera;\n        }\n        get imageUpload() {\n            return Boolean(this.component.image);\n        }\n        get browseOptions() {\n            const options = {};\n            if (this.component.multiple) {\n                options.multiple = true;\n            }\n            if (this.imageUpload) {\n                options.accept = 'image/*';\n            }\n            return options;\n        }\n        deleteFile(fileInfo) {\n            if (fileInfo && this.component.storage === 'url') {\n                const fileService = this.fileService;\n                if (fileService && typeof fileService.deleteFile === 'function') {\n                    fileService.deleteFile(fileInfo);\n                } else {\n                    const formio = this.options.formio || this.root && this.root.formio;\n                    if (formio) {\n                        formio.makeRequest('', fileInfo.url, 'delete');\n                    }\n                }\n            }\n        }\n        attach(element) {\n            this.loadRefs(element, {\n                fileDrop: 'single',\n                fileBrowse: 'single',\n                galleryButton: 'single',\n                cameraButton: 'single',\n                takePictureButton: 'single',\n                toggleCameraMode: 'single',\n                videoPlayer: 'single',\n                fileLink: 'multiple',\n                removeLink: 'multiple',\n                fileStatusRemove: 'multiple',\n                fileImage: 'multiple',\n                fileType: 'multiple'\n            });\n            this.refs.input = [];\n            const superAttach = super.attach(element);\n            if (this.refs.fileDrop) {\n                const element = this;\n                this.addEventListener(this.refs.fileDrop, 'dragover', function (event) {\n                    this.className = 'fileSelector fileDragOver';\n                    event.preventDefault();\n                });\n                this.addEventListener(this.refs.fileDrop, 'dragleave', function (event) {\n                    this.className = 'fileSelector';\n                    event.preventDefault();\n                });\n                this.addEventListener(this.refs.fileDrop, 'drop', function (event) {\n                    this.className = 'fileSelector';\n                    event.preventDefault();\n                    element.upload(event.dataTransfer.files);\n                    return false;\n                });\n            }\n            if (this.refs.fileBrowse) {\n                this.addEventListener(this.refs.fileBrowse, 'click', event => {\n                    event.preventDefault();\n                    this.browseFiles(this.browseOptions).then(files => {\n                        this.upload(files);\n                    });\n                });\n            }\n            this.refs.fileLink.forEach((fileLink, index) => {\n                this.addEventListener(fileLink, 'click', event => {\n                    event.preventDefault();\n                    this.getFile(this.dataValue[index]);\n                });\n            });\n            this.refs.removeLink.forEach((removeLink, index) => {\n                this.addEventListener(removeLink, 'click', event => {\n                    const fileInfo = this.dataValue[index];\n                    this.deleteFile(fileInfo);\n                    event.preventDefault();\n                    this.splice(index);\n                    this.redraw();\n                });\n            });\n            this.refs.fileStatusRemove.forEach((fileStatusRemove, index) => {\n                this.addEventListener(fileStatusRemove, 'click', event => {\n                    event.preventDefault();\n                    this.statuses.splice(index, 1);\n                    this.redraw();\n                });\n            });\n            if (this.refs.galleryButton && webViewCamera) {\n                this.addEventListener(this.refs.galleryButton, 'click', event => {\n                    event.preventDefault();\n                    webViewCamera.getPicture(success => {\n                        window.resolveLocalFileSystemURL(success, fileEntry => {\n                            fileEntry.file(file => {\n                                this.upload([file]);\n                            });\n                        });\n                    }, err => {\n                        console.error(err);\n                    }, { sourceType: webViewCamera.PictureSourceType.PHOTOLIBRARY });\n                });\n            }\n            if (this.refs.cameraButton && webViewCamera) {\n                this.addEventListener(this.refs.cameraButton, 'click', event => {\n                    event.preventDefault();\n                    webViewCamera.getPicture(success => {\n                        window.resolveLocalFileSystemURL(success, fileEntry => {\n                            fileEntry.file(file => {\n                                this.upload([file]);\n                            });\n                        });\n                    }, err => {\n                        console.error(err);\n                    }, {\n                        sourceType: webViewCamera.PictureSourceType.CAMERA,\n                        encodingType: webViewCamera.EncodingType.PNG,\n                        mediaType: webViewCamera.MediaType.PICTURE,\n                        saveToPhotoAlbum: true,\n                        correctOrientation: false\n                    });\n                });\n            }\n            if (this.refs.takePictureButton) {\n                this.addEventListener(this.refs.takePictureButton, 'click', event => {\n                    event.preventDefault();\n                    this.takePicture();\n                });\n            }\n            if (this.refs.toggleCameraMode) {\n                this.addEventListener(this.refs.toggleCameraMode, 'click', event => {\n                    event.preventDefault();\n                    this.cameraMode = !this.cameraMode;\n                    this.redraw();\n                });\n            }\n            this.refs.fileType.forEach((fileType, index) => {\n                this.dataValue[index].fileType = this.component.fileTypes[0].label;\n                this.addEventListener(fileType, 'change', event => {\n                    event.preventDefault();\n                    const fileType = this.component.fileTypes.find(typeObj => typeObj.value === event.target.value);\n                    this.dataValue[index].fileType = fileType.label;\n                });\n            });\n            const fileService = this.fileService;\n            if (fileService) {\n                const loadingImages = [];\n                this.refs.fileImage.forEach((image, index) => {\n                    loadingImages.push(this.loadImage(this.dataValue[index]).then(url => image.src = url));\n                });\n                if (loadingImages.length) {\n                    NativePromise.all(loadingImages).then(() => {\n                        this.filesReadyResolve();\n                    }).catch(() => this.filesReadyReject());\n                }\n            }\n            return superAttach;\n        }\n        fileSize(a, b, c, d, e) {\n            return `${ (b = Math, c = b.log, d = 1024, e = c(a) / c(d) | 0, a / b.pow(d, e)).toFixed(2) } ${ e ? `${ 'kMGTPEZY'[--e] }B` : 'Bytes' }`;\n        }\n        globStringToRegex(str) {\n            let regexp = '', excludes = [];\n            if (str.length > 2 && str[0] === '/' && str[str.length - 1] === '/') {\n                regexp = str.substring(1, str.length - 1);\n            } else {\n                const split = str.split(',');\n                if (split.length > 1) {\n                    for (let i = 0; i < split.length; i++) {\n                        const r = this.globStringToRegex(split[i]);\n                        if (r.regexp) {\n                            regexp += `(${ r.regexp })`;\n                            if (i < split.length - 1) {\n                                regexp += '|';\n                            }\n                        } else {\n                            excludes = excludes.concat(r.excludes);\n                        }\n                    }\n                } else {\n                    if (str.startsWith('!')) {\n                        excludes.push(`^((?!${ this.globStringToRegex(str.substring(1)).regexp }).)*$`);\n                    } else {\n                        if (str.startsWith('.')) {\n                            str = `*${ str }`;\n                        }\n                        regexp = `^${ str.replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\-]', 'g'), '\\\\$&') }$`;\n                        regexp = regexp.replace(/\\\\\\*/g, '.*').replace(/\\\\\\?/g, '.');\n                    }\n                }\n            }\n            return {\n                regexp,\n                excludes\n            };\n        }\n        translateScalars(str) {\n            if (typeof str === 'string') {\n                if (str.search(/kb/i) === str.length - 2) {\n                    return parseFloat(str.substring(0, str.length - 2) * 1024);\n                }\n                if (str.search(/mb/i) === str.length - 2) {\n                    return parseFloat(str.substring(0, str.length - 2) * 1024 * 1024);\n                }\n                if (str.search(/gb/i) === str.length - 2) {\n                    return parseFloat(str.substring(0, str.length - 2) * 1024 * 1024 * 1024);\n                }\n                if (str.search(/b/i) === str.length - 1) {\n                    return parseFloat(str.substring(0, str.length - 1));\n                }\n                if (str.search(/s/i) === str.length - 1) {\n                    return parseFloat(str.substring(0, str.length - 1));\n                }\n                if (str.search(/m/i) === str.length - 1) {\n                    return parseFloat(str.substring(0, str.length - 1) * 60);\n                }\n                if (str.search(/h/i) === str.length - 1) {\n                    return parseFloat(str.substring(0, str.length - 1) * 3600);\n                }\n            }\n            return str;\n        }\n        validatePattern(file, val) {\n            if (!val) {\n                return true;\n            }\n            const pattern = this.globStringToRegex(val);\n            let valid = true;\n            if (pattern.regexp && pattern.regexp.length) {\n                const regexp = new RegExp(pattern.regexp, 'i');\n                valid = !_.isNil(file.type) && regexp.test(file.type) || !_.isNil(file.name) && regexp.test(file.name);\n            }\n            valid = pattern.excludes.reduce((result, excludePattern) => {\n                const exclude = new RegExp(excludePattern, 'i');\n                return result && (_.isNil(file.type) || !exclude.test(file.type)) && (_.isNil(file.name) || !exclude.test(file.name));\n            }, valid);\n            return valid;\n        }\n        validateMinSize(file, val) {\n            return file.size + 0.1 >= this.translateScalars(val);\n        }\n        validateMaxSize(file, val) {\n            return file.size - 0.1 <= this.translateScalars(val);\n        }\n        upload(files) {\n            if (!this.component.multiple) {\n                files = Array.prototype.slice.call(files, 0, 1);\n            }\n            if (this.component.storage && files && files.length) {\n                Array.prototype.forEach.call(files, file => {\n                    const fileName = utils.uniqueName(file.name, this.component.fileNameTemplate, this.evalContext());\n                    const fileUpload = {\n                        originalName: file.name,\n                        name: fileName,\n                        size: file.size,\n                        status: 'info',\n                        message: this.t('Starting upload')\n                    };\n                    if (this.component.filePattern && !this.validatePattern(file, this.component.filePattern)) {\n                        fileUpload.status = 'error';\n                        fileUpload.message = this.t('File is the wrong type; it must be {{ pattern }}', { pattern: this.component.filePattern });\n                    }\n                    if (this.component.fileMinSize && !this.validateMinSize(file, this.component.fileMinSize)) {\n                        fileUpload.status = 'error';\n                        fileUpload.message = this.t('File is too small; it must be at least {{ size }}', { size: this.component.fileMinSize });\n                    }\n                    if (this.component.fileMaxSize && !this.validateMaxSize(file, this.component.fileMaxSize)) {\n                        fileUpload.status = 'error';\n                        fileUpload.message = this.t('File is too big; it must be at most {{ size }}', { size: this.component.fileMaxSize });\n                    }\n                    const dir = this.interpolate(this.component.dir || '');\n                    const {fileService} = this;\n                    if (!fileService) {\n                        fileUpload.status = 'error';\n                        fileUpload.message = this.t('File Service not provided.');\n                    }\n                    this.statuses.push(fileUpload);\n                    this.redraw();\n                    if (fileUpload.status !== 'error') {\n                        if (this.component.privateDownload) {\n                            file.private = true;\n                        }\n                        const {storage, options = {}} = this.component;\n                        const url = this.interpolate(this.component.url);\n                        const fileKey = this.component.fileKey || 'file';\n                        fileService.uploadFile(storage, file, fileName, dir, evt => {\n                            fileUpload.status = 'progress';\n                            fileUpload.progress = parseInt(100 * evt.loaded / evt.total);\n                            delete fileUpload.message;\n                            this.redraw();\n                        }, url, options, fileKey).then(fileInfo => {\n                            const index = this.statuses.indexOf(fileUpload);\n                            if (index !== -1) {\n                                this.statuses.splice(index, 1);\n                            }\n                            fileInfo.originalName = file.name;\n                            if (!this.hasValue()) {\n                                this.dataValue = [];\n                            }\n                            this.dataValue.push(fileInfo);\n                            this.redraw();\n                            this.triggerChange();\n                        }).catch(response => {\n                            fileUpload.status = 'error';\n                            fileUpload.message = response;\n                            delete fileUpload.progress;\n                            this.redraw();\n                        });\n                    }\n                });\n            }\n        }\n        getFile(fileInfo) {\n            const {\n                options = {}\n            } = this.component;\n            const {fileService} = this;\n            if (!fileService) {\n                return alert('File Service not provided');\n            }\n            if (this.component.privateDownload) {\n                fileInfo.private = true;\n            }\n            fileService.downloadFile(fileInfo, options).then(file => {\n                if (file) {\n                    if ([\n                            'base64',\n                            'indexeddb'\n                        ].includes(file.storage)) {\n                        download(file.url, file.originalName || file.name, file.type);\n                    } else {\n                        window.open(file.url, '_blank');\n                    }\n                }\n            }).catch(response => {\n                alert(response);\n            });\n        }\n        focus() {\n            if (this.refs.fileBrowse) {\n                this.refs.fileBrowse.focus();\n            }\n        }\n    };\n});"]}