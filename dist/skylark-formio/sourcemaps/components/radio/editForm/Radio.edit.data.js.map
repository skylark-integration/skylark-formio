{"version":3,"sources":["components/radio/editForm/Radio.edit.data.js"],"names":["define","BuilderUtils","_","key","ignore","type","input","label","tooltip","weight","reorder","defaultValue","value","components","allowCalculateOverride","calculateValue","_camelCase","var","validate","required","dataSrc","valueProperty","customDefaultValue","template","data","custom","context","getAvailableShortcuts","get","clearOnHide","values"],"mappings":";;;;;;;AAAAA,QACI,yBACA,kBACD,SAAUC,EAAcC,GACvB,aACA,QAEQC,IAAK,WACLC,QAAQ,IAGRC,KAAM,WACNC,OAAO,EACPC,MAAO,SACPJ,IAAK,SACLK,QAAS,+KACTC,OAAQ,GACRC,SAAS,EACTC,eACQJ,MAAO,GACPK,MAAO,KAEfC,aAEQN,MAAO,QACPJ,IAAK,QACLG,OAAO,EACPD,KAAM,cAGNE,MAAO,QACPJ,IAAK,QACLG,OAAO,EACPD,KAAM,YACNS,wBAAwB,EACxBC,gBAAkBC,aAAeC,IAAK,eACtCC,UAAYC,UAAU,KAGtBd,KAAM,SACNC,OAAO,EACPG,OAAQ,IACRF,MAAO,WACPJ,IAAK,WACLK,QAAS,oCACTY,QAAS,SACTC,cAAe,QACfC,mBAAoB,IAAM,GAC1BC,SAAU,mBACVC,MACIC,OAAOC,GACIzB,EAAa0B,sBAAsBzB,EAAE0B,IAAIF,EAAS,gCAAkCxB,EAAE0B,IAAIF,EAAS,2CAO1HrB,KAAM,SACNC,OAAO,EACPC,MAAO,eACPJ,IAAK,WACL0B,aAAa,EACbrB,QAAS,0GACTC,OAAQ,GACRc,SAAU,gCACVH,QAAS,SACTI,MACIM,SAEQvB,MAAO,WACPK,MAAO,SAGPL,MAAO,SACPK,MAAO,WAGPL,MAAO,SACPK,MAAO,WAGPL,MAAO,UACPK,MAAO,YAGPL,MAAO,SACPK,MAAO","file":"../../../../components/radio/editForm/Radio.edit.data.js","sourcesContent":["define([\n    '../../../utils/builder',\n    'skylark-lodash'\n], function (BuilderUtils, _) {\n    'use strict';\n    return [\n        {\n            key: 'multiple',\n            ignore: true\n        },\n        {\n            type: 'datagrid',\n            input: true,\n            label: 'Values',\n            key: 'values',\n            tooltip: 'The radio button values that can be picked for this field. Values are text submitted with the form data. Labels are text that appears next to the radio buttons on the form.',\n            weight: 10,\n            reorder: true,\n            defaultValue: [{\n                    label: '',\n                    value: ''\n                }],\n            components: [\n                {\n                    label: 'Label',\n                    key: 'label',\n                    input: true,\n                    type: 'textfield'\n                },\n                {\n                    label: 'Value',\n                    key: 'value',\n                    input: true,\n                    type: 'textfield',\n                    allowCalculateOverride: true,\n                    calculateValue: { _camelCase: [{ var: 'row.label' }] },\n                    validate: { required: true }\n                },\n                {\n                    type: 'select',\n                    input: true,\n                    weight: 180,\n                    label: 'Shortcut',\n                    key: 'shortcut',\n                    tooltip: 'The shortcut key for this option.',\n                    dataSrc: 'custom',\n                    valueProperty: 'value',\n                    customDefaultValue: () => '',\n                    template: '{{ item.label }}',\n                    data: {\n                        custom(context) {\n                            return BuilderUtils.getAvailableShortcuts(_.get(context, 'instance.options.editForm', {}), _.get(context, 'instance.options.editComponent', {}));\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            type: 'select',\n            input: true,\n            label: 'Storage Type',\n            key: 'dataType',\n            clearOnHide: true,\n            tooltip: 'The type to store the data. If you select something other than autotype, it will force it to that type.',\n            weight: 12,\n            template: '<span>{{ item.label }}</span>',\n            dataSrc: 'values',\n            data: {\n                values: [\n                    {\n                        label: 'Autotype',\n                        value: 'auto'\n                    },\n                    {\n                        label: 'String',\n                        value: 'string'\n                    },\n                    {\n                        label: 'Number',\n                        value: 'number'\n                    },\n                    {\n                        label: 'Boolean',\n                        value: 'boolean'\n                    },\n                    {\n                        label: 'Object',\n                        value: 'object'\n                    }\n                ]\n            }\n        }\n    ];\n});"]}