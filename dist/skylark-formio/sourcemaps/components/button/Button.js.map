{"version":3,"sources":["components/button/Button.js"],"names":["define","_","Field","Input","a","ButtonComponent","[object Object]","extend","schema","type","label","key","size","leftIcon","rightIcon","block","action","persistent","disableOnInvalid","theme","dataGridLabel","builderInfo","title","group","icon","documentation","weight","defaultSchema","inputInfo","info","super","elementInfo","attr","includes","this","component","class","customClass","content","t","labelInfo","hidden","loading","setLoading","refs","button","container","createInput","emptyValue","dataValue","clicked","defaultValue","className","viewOnly","options","hideButtons","_visible","render","renderTemplate","input","addShortcut","onChange","onError","on","disabled","addClass","removeClass","buttonMessageContainer","setContent","buttonMessage","errorMessage","value","isValid","hasError","flags","noValidate","root","checkValidity","data","shouldDisabled","setDisabled","addEventListener","onClick","bind","oauth","authURI","iss","name","replace","results","RegExp","exec","location","search","decodeURIComponent","getUrlParameter","indexOf","openOauth","element","loadRefs","superAttach","attach","attachButton","removeShortcut","event","triggerReCaptcha","attachMode","showValidations","emit","preventDefault","stopPropagation","state","instance","interpolate","events","form","getRoot","flattened","flattenComponents","components","each","getComponent","evaluate","custom","url","headers","console","warn","setAlert","error","formio","settings","params","response_type","client_id","clientId","redirect_uri","window","origin","protocol","host","scope","display","Object","keys","map","encodeURIComponent","join","popup","open","provider","interval","setInterval","popupHost","currentHost","closed","close","substr","split","reduce","param","alert","error_description","submission","redirectURI","saveSubmission","then","result","onSubmit","catch","err","onSubmissionError","message","undefined","clearInterval","focus","recaptchaComponent","find","eventType","buttonKey","verify"],"mappings":"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","file":"../../../components/button/Button.js","sourcesContent":["define([\n    'skylark-lodash',\n    '../_classes/field/Field',\n    '../_classes/input/Input',\n    '../../utils/utils'\n], function (_, Field, Input, a) {\n    'use strict';\n    return class ButtonComponent extends Field {\n        static schema(...extend) {\n            return Input.schema({\n                type: 'button',\n                label: 'Submit',\n                key: 'submit',\n                size: 'md',\n                leftIcon: '',\n                rightIcon: '',\n                block: false,\n                action: 'submit',\n                persistent: false,\n                disableOnInvalid: false,\n                theme: 'primary',\n                dataGridLabel: true\n            }, ...extend);\n        }\n        static get builderInfo() {\n            return {\n                title: 'Button',\n                group: 'basic',\n                icon: 'stop',\n                documentation: 'http://help.form.io/userguide/#button',\n                weight: 110,\n                schema: ButtonComponent.schema()\n            };\n        }\n        get defaultSchema() {\n            return ButtonComponent.schema();\n        }\n        get inputInfo() {\n            const info = super.elementInfo();\n            info.type = 'button';\n            info.attr.type = [\n                'submit',\n                'saveState'\n            ].includes(this.component.action) ? 'submit' : 'button';\n            this.component.theme = this.component.theme || 'default';\n            info.attr.class = `btn btn-${ this.component.theme }`;\n            if (this.component.size) {\n                info.attr.class += ` btn-${ this.component.size }`;\n            }\n            if (this.component.block) {\n                info.attr.class += ' btn-block';\n            }\n            if (this.component.customClass) {\n                info.attr.class += ` ${ this.component.customClass }`;\n            }\n            info.content = this.t(this.component.label);\n            return info;\n        }\n        get labelInfo() {\n            return { hidden: true };\n        }\n        set loading(loading) {\n            this.setLoading(this.refs.button, loading);\n        }\n        createLabel() {\n        }\n        createInput(container) {\n            this.refs.button = super.createInput(container);\n            return this.refs.button;\n        }\n        get emptyValue() {\n            return false;\n        }\n        getValue() {\n            return this.dataValue;\n        }\n        get clicked() {\n            return this.dataValue;\n        }\n        get defaultValue() {\n            return false;\n        }\n        get className() {\n            let className = super.className;\n            className += ' form-group';\n            return className;\n        }\n        render() {\n            if (this.viewOnly || this.options.hideButtons) {\n                this._visible = false;\n            }\n            return super.render(this.renderTemplate('button', {\n                component: this.component,\n                input: this.inputInfo\n            }));\n        }\n        attachButton() {\n            this.addShortcut(this.refs.button);\n            let onChange = null;\n            let onError = null;\n            if (this.component.action === 'submit') {\n                this.on('submitButton', () => {\n                    this.disabled = true;\n                }, true);\n                this.on('submitDone', () => {\n                    this.loading = false;\n                    this.disabled = false;\n                    this.addClass(this.refs.button, 'btn-success submit-success');\n                    this.removeClass(this.refs.button, 'btn-danger submit-fail');\n                    this.addClass(this.refs.buttonMessageContainer, 'has-success');\n                    this.removeClass(this.refs.buttonMessageContainer, 'has-error');\n                    this.setContent(this.refs.buttonMessage, this.t('complete'));\n                }, true);\n                this.on('submitError', () => {\n                    this.loading = false;\n                    this.disabled = false;\n                    this.removeClass(this.refs.button, 'btn-success submit-success');\n                    this.addClass(this.refs.button, 'btn-danger submit-fail');\n                    this.removeClass(this.refs.buttonMessageContainer, 'has-success');\n                    this.addClass(this.refs.buttonMessageContainer, 'has-error');\n                    this.setContent(this.refs.buttonMessage, this.t(this.errorMessage('error')));\n                }, true);\n                onChange = (value, isValid) => {\n                    this.removeClass(this.refs.button, 'btn-success submit-success');\n                    this.removeClass(this.refs.button, 'btn-danger submit-fail');\n                    if (isValid && this.hasError) {\n                        this.hasError = false;\n                        this.setContent(this.refs.buttonMessage, '');\n                        this.removeClass(this.refs.buttonMessageContainer, 'has-success');\n                        this.removeClass(this.refs.buttonMessageContainer, 'has-error');\n                    }\n                };\n                onError = () => {\n                    this.hasError = true;\n                    this.removeClass(this.refs.button, 'btn-success submit-success');\n                    this.addClass(this.refs.button, 'btn-danger submit-fail');\n                    this.removeClass(this.refs.buttonMessageContainer, 'has-success');\n                    this.addClass(this.refs.buttonMessageContainer, 'has-error');\n                    this.setContent(this.refs.buttonMessage, this.t(this.errorMessage('error')));\n                };\n            }\n            if (this.component.action === 'url') {\n                this.on('requestButton', () => {\n                    this.disabled = true;\n                }, true);\n                this.on('requestDone', () => {\n                    this.loading = false;\n                    this.disabled = false;\n                }, true);\n            }\n            this.on('change', (value, flags) => {\n                const isValid = flags && flags.noValidate ? this.root ? this.root.checkValidity(this.root.data) : true : value.isValid;\n                this.loading = false;\n                this.disabled = this.shouldDisabled || this.component.disableOnInvalid && !isValid;\n                this.setDisabled(this.refs.button, this.disabled);\n                if (onChange) {\n                    onChange(value, isValid);\n                }\n            }, true);\n            this.on('error', () => {\n                this.loading = false;\n                this.disabled = false;\n                if (onError) {\n                    onError();\n                }\n            }, true);\n            this.addEventListener(this.refs.button, 'click', this.onClick.bind(this));\n            this.disabled = this.shouldDisabled;\n            function getUrlParameter(name) {\n                name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n                const regex = new RegExp(`[\\\\?&]${ name }=([^&#]*)`);\n                const results = regex.exec(location.search);\n                if (!results) {\n                    return results;\n                }\n                return decodeURIComponent(results[1].replace(/\\+/g, ' '));\n            }\n            if (this.component.action === 'oauth' && this.component.oauth && this.component.oauth.authURI) {\n                const iss = getUrlParameter('iss');\n                if (iss && this.component.oauth.authURI.indexOf(iss) === 0) {\n                    this.openOauth();\n                }\n            }\n        }\n        attach(element) {\n            this.loadRefs(element, {\n                button: 'single',\n                buttonMessageContainer: 'single',\n                buttonMessage: 'single'\n            });\n            const superAttach = super.attach(element);\n            this.attachButton();\n            return superAttach;\n        }\n        detach(element) {\n            if (element && this.refs.button) {\n                this.removeShortcut(this.refs.button);\n            }\n        }\n        onClick(event) {\n            this.triggerReCaptcha();\n            if (this.disabled || this.options.attachMode === 'builder') {\n                return;\n            }\n            this.dataValue = true;\n            if (this.component.action !== 'submit' && this.component.showValidations) {\n                this.emit('checkValidity', this.data);\n            }\n            switch (this.component.action) {\n            case 'saveState':\n            case 'submit':\n                event.preventDefault();\n                event.stopPropagation();\n                this.loading = true;\n                this.emit('submitButton', {\n                    state: this.component.state || 'submitted',\n                    component: this.component,\n                    instance: this\n                });\n                break;\n            case 'event':\n                this.emit(this.interpolate(this.component.event), this.data);\n                this.events.emit(this.interpolate(this.component.event), this.data);\n                this.emit('customEvent', {\n                    type: this.interpolate(this.component.event),\n                    component: this.component,\n                    data: this.data,\n                    event: event\n                });\n                break;\n            case 'custom': {\n                    const form = this.getRoot();\n                    const flattened = a.flattenComponents(form.component.components, true);\n                    const components = {};\n                    _.each(flattened, (component, key) => {\n                        const element = form.getComponent(key);\n                        if (element) {\n                            components[key] = element;\n                        }\n                    });\n                    this.evaluate(this.component.custom, {\n                        form,\n                        flattened,\n                        components\n                    });\n                    break;\n                }\n            case 'url':\n                this.loading = true;\n                this.emit('requestButton', {\n                    component: this.component,\n                    instance: this\n                });\n                this.emit('requestUrl', {\n                    url: this.interpolate(this.component.url),\n                    headers: this.component.headers\n                });\n                break;\n            case 'reset':\n                this.emit('resetForm');\n                break;\n            case 'delete':\n                this.emit('deleteSubmission');\n                break;\n            case 'oauth':\n                if (this.root === this) {\n                    console.warn('You must add the OAuth button to a form for it to function properly');\n                    return;\n                }\n                if (!this.component.oauth) {\n                    this.root.setAlert('danger', 'You must assign this button to an OAuth action before it will work.');\n                    break;\n                }\n                if (this.component.oauth.error) {\n                    this.root.setAlert('danger', `The Following Error Has Occured${ this.component.oauth.error }`);\n                    break;\n                }\n                this.openOauth(this.component.oauth);\n                break;\n            }\n        }\n        openOauth() {\n            if (!this.root.formio) {\n                console.warn('You must attach a Form API url to your form in order to use OAuth buttons.');\n                return;\n            }\n            const settings = this.component.oauth;\n            let params = {\n                response_type: 'code',\n                client_id: settings.clientId,\n                redirect_uri: window.location.origin || `${ window.location.protocol }//${ window.location.host }`,\n                state: settings.state,\n                scope: settings.scope\n            };\n            if (settings.display) {\n                params.display = settings.display;\n            }\n            params = Object.keys(params).map(key => {\n                return `${ key }=${ encodeURIComponent(params[key]) }`;\n            }).join('&');\n            const url = `${ settings.authURI }?${ params }`;\n            const popup = window.open(url, settings.provider, 'width=1020,height=618');\n            const interval = setInterval(() => {\n                try {\n                    const popupHost = popup.location.host;\n                    const currentHost = window.location.host;\n                    if (popup && !popup.closed && popupHost === currentHost && popup.location.search) {\n                        popup.close();\n                        const params = popup.location.search.substr(1).split('&').reduce((params, param) => {\n                            const split = param.split('=');\n                            params[split[0]] = split[1];\n                            return params;\n                        }, {});\n                        if (params.error) {\n                            alert(params.error_description || params.error);\n                            this.root.setAlert('danger', params.error_description || params.error);\n                            return;\n                        }\n                        if (settings.state !== params.state) {\n                            this.root.setAlert('danger', 'OAuth state does not match. Please try logging in again.');\n                            return;\n                        }\n                        const submission = {\n                            data: {},\n                            oauth: {}\n                        };\n                        submission.oauth[settings.provider] = params;\n                        submission.oauth[settings.provider].redirectURI = window.location.origin || `${ window.location.protocol }//${ window.location.host }`;\n                        this.root.formio.saveSubmission(submission).then(result => {\n                            this.root.onSubmit(result, true);\n                        }).catch(err => {\n                            this.root.onSubmissionError(err);\n                        });\n                    }\n                } catch (error) {\n                    if (error.name !== 'SecurityError') {\n                        this.root.setAlert('danger', error.message || error);\n                    }\n                }\n                if (!popup || popup.closed || popup.closed === undefined) {\n                    clearInterval(interval);\n                }\n            }, 100);\n        }\n        focus() {\n            if (this.refs.button) {\n                this.refs.button.focus();\n            }\n        }\n        triggerReCaptcha() {\n            if (!this.root) {\n                return;\n            }\n            const recaptchaComponent = this.root.components.find(component => {\n                return component.component.type === 'recaptcha' && component.component.eventType === 'buttonClick' && component.component.buttonKey === this.component.key;\n            });\n            if (recaptchaComponent) {\n                recaptchaComponent.verify(`${ this.component.key }Click`);\n            }\n        }\n    };\n});"]}