{"version":3,"sources":["components/button/editForm/Button.edit.display.js"],"names":["define","BuilderUtils","_","key","ignore","type","label","input","dataSrc","weight","tooltip","data","values","value","placeholder","conditional","json","===","var","inputType","!==","addAnother","components","rows","editor","valueProperty","customDefaultValue","template","custom","context","getAvailableShortcuts","get"],"mappings":"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","file":"../../../../components/button/editForm/Button.edit.display.js","sourcesContent":["define([\n    '../../../utils/builder',\n    'skylark-lodash'\n], function (BuilderUtils, _) {\n    'use strict';\n    return [\n        {\n            key: 'labelPosition',\n            ignore: true\n        },\n        {\n            key: 'placeholder',\n            ignore: true\n        },\n        {\n            key: 'hideLabel',\n            ignore: true\n        },\n        {\n            type: 'select',\n            key: 'action',\n            label: 'Action',\n            input: true,\n            dataSrc: 'values',\n            weight: 110,\n            tooltip: 'This is the action to be performed by this button.',\n            data: {\n                values: [\n                    {\n                        label: 'Submit',\n                        value: 'submit'\n                    },\n                    {\n                        label: 'Save in state',\n                        value: 'saveState'\n                    },\n                    {\n                        label: 'Event',\n                        value: 'event'\n                    },\n                    {\n                        label: 'Custom',\n                        value: 'custom'\n                    },\n                    {\n                        label: 'Reset',\n                        value: 'reset'\n                    },\n                    {\n                        label: 'OAuth',\n                        value: 'oauth'\n                    },\n                    {\n                        label: 'POST to URL',\n                        value: 'url'\n                    }\n                ]\n            }\n        },\n        {\n            type: 'textfield',\n            label: 'Save in state',\n            key: 'state',\n            weight: 112,\n            tooltip: 'The state you wish to save the submission under when this button is pressed. Example \"draft\" would save the submission in Draft Mode.',\n            placeholder: 'submitted',\n            input: true,\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.action' },\n                        'saveState'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'checkbox',\n            input: true,\n            inputType: 'checkbox',\n            key: 'showValidations',\n            label: 'Show Validations',\n            weight: 115,\n            tooltip: 'When the button is pressed, show any validation errors on the form.',\n            conditional: {\n                json: {\n                    '!==': [\n                        { var: 'data.action' },\n                        'submit'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'textfield',\n            label: 'Button Event',\n            key: 'event',\n            input: true,\n            weight: 120,\n            tooltip: 'The event to fire when the button is clicked.',\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.action' },\n                        'event'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'textfield',\n            inputType: 'url',\n            key: 'url',\n            input: true,\n            weight: 120,\n            label: 'Button URL',\n            tooltip: 'The URL where the submission will be sent.',\n            placeholder: 'https://example.form.io',\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.action' },\n                        'url'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'datagrid',\n            key: 'headers',\n            input: true,\n            weight: 130,\n            label: 'Headers',\n            addAnother: 'Add Header',\n            tooltip: 'Headers Properties and Values for your request',\n            components: [\n                {\n                    key: 'header',\n                    label: 'Header',\n                    input: true,\n                    type: 'textfield'\n                },\n                {\n                    key: 'value',\n                    label: 'Value',\n                    input: true,\n                    type: 'textfield'\n                }\n            ],\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.action' },\n                        'url'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'textarea',\n            key: 'custom',\n            label: 'Button Custom Logic',\n            tooltip: 'The custom logic to evaluate when the button is clicked.',\n            rows: 5,\n            editor: 'ace',\n            input: true,\n            weight: 120,\n            placeholder: \"data['mykey'] = data['anotherKey'];\",\n            conditional: {\n                json: {\n                    '===': [\n                        { var: 'data.action' },\n                        'custom'\n                    ]\n                }\n            }\n        },\n        {\n            type: 'select',\n            key: 'theme',\n            label: 'Theme',\n            input: true,\n            tooltip: 'The color theme of this button.',\n            dataSrc: 'values',\n            weight: 140,\n            data: {\n                values: [\n                    {\n                        label: 'Primary',\n                        value: 'primary'\n                    },\n                    {\n                        label: 'Secondary',\n                        value: 'secondary'\n                    },\n                    {\n                        label: 'Info',\n                        value: 'info'\n                    },\n                    {\n                        label: 'Success',\n                        value: 'success'\n                    },\n                    {\n                        label: 'Danger',\n                        value: 'danger'\n                    },\n                    {\n                        label: 'Warning',\n                        value: 'warning'\n                    }\n                ]\n            }\n        },\n        {\n            type: 'select',\n            key: 'size',\n            label: 'Size',\n            input: true,\n            tooltip: 'The size of this button.',\n            dataSrc: 'values',\n            weight: 150,\n            data: {\n                values: [\n                    {\n                        label: 'Extra Small',\n                        value: 'xs'\n                    },\n                    {\n                        label: 'Small',\n                        value: 'sm'\n                    },\n                    {\n                        label: 'Medium',\n                        value: 'md'\n                    },\n                    {\n                        label: 'Large',\n                        value: 'lg'\n                    }\n                ]\n            }\n        },\n        {\n            type: 'textfield',\n            key: 'leftIcon',\n            label: 'Left Icon',\n            input: true,\n            placeholder: 'Enter icon classes',\n            tooltip: \"This is the full icon class string to show the icon. Example: 'fa fa-plus'\",\n            weight: 160\n        },\n        {\n            type: 'textfield',\n            key: 'rightIcon',\n            label: 'Right Icon',\n            input: true,\n            placeholder: 'Enter icon classes',\n            tooltip: \"This is the full icon class string to show the icon. Example: 'fa fa-plus'\",\n            weight: 170\n        },\n        {\n            type: 'select',\n            input: true,\n            weight: 180,\n            label: 'Shortcut',\n            key: 'shortcut',\n            tooltip: 'Shortcut for this component.',\n            dataSrc: 'custom',\n            valueProperty: 'value',\n            customDefaultValue: () => '',\n            template: '{{ item.label }}',\n            data: {\n                custom(context) {\n                    return BuilderUtils.getAvailableShortcuts(_.get(context, 'instance.options.editForm', {}), _.get(context, 'instance.options.editComponent', {}));\n                }\n            }\n        },\n        {\n            type: 'checkbox',\n            key: 'block',\n            label: 'Block Button',\n            input: true,\n            weight: 155,\n            tooltip: 'This control should span the full width of the bounding container.'\n        },\n        {\n            type: 'checkbox',\n            key: 'disableOnInvalid',\n            label: 'Disable on Form Invalid',\n            tooltip: 'This will disable this field if the form is invalid.',\n            input: true,\n            weight: 620\n        }\n    ];\n});"]}