{"version":3,"sources":["EventEmitter.js"],"names":["define","EventEmitter2","utils","[object Object]","conf","loadLimit","eventsSafeInterval","pause","ee2conf","super","isPaused","togglePause","withSwitch","dispatch","observeOverload","console","warn","this","id","setTimeout","limit","delay","emit","args"],"mappings":";;;;;;;AAAAA,QACI,wCACA,iBACD,SAAUC,EAAeC,GACxB,aACA,qBAAkCD,EAC9BE,YAAYC,MACR,MAAMC,UACFA,EAAY,GAAEC,mBACdA,EAAqB,IAAGC,MACxBA,EAAQ,OACLC,GACHJ,EACJK,MAAMD,GACN,MAAOE,EAAUC,GAAeT,EAAMU,YAAW,GAAO,GAMlDC,EAAWX,EAAMY,gBALC,KACpBC,QAAQC,KAAK,yBAA0BC,KAAKC,GAAIX,GAChDI,IACAQ,WAAWR,EAAaJ,KAGxBa,MAAOf,EACPgB,MAAOf,IAEXW,KAAKK,KAAO,KAAIC,KACRb,MAGJD,MAAMa,QAAQC,GACdV","file":"../EventEmitter.js","sourcesContent":["define([\n    './vendors/eventemitter2/EventEmitter2',\n    './utils/utils'\n], function (EventEmitter2, utils) {\n    'use strict';\n    return class EventEmitter extends EventEmitter2 {\n        constructor(conf = {}) {\n            const {\n                loadLimit = 50,\n                eventsSafeInterval = 300,\n                pause = 500,\n                ...ee2conf\n            } = conf;\n            super(ee2conf);\n            const [isPaused, togglePause] = utils.withSwitch(false, true);\n            const overloadHandler = () => {\n                console.warn('Infinite loop detected', this.id, pause);\n                togglePause();\n                setTimeout(togglePause, pause);\n            };\n            const dispatch = utils.observeOverload(overloadHandler, {\n                limit: loadLimit,\n                delay: eventsSafeInterval\n            });\n            this.emit = (...args) => {\n                if (isPaused()) {\n                    return;\n                }\n                super.emit(...args);\n                dispatch();\n            };\n        }\n    };\n});"]}