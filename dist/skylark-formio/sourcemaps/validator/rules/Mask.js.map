{"version":3,"sources":["validator/rules/Mask.js"],"names":["define","a","Rule","require","module","exports","[object Object]","value","inputMask","this","component","isMultipleMasksField","maskName","undefined","formioInputMask","getMaskByName","getInputMask","settings","mask","matchInputMask","Mask","prototype","defaultMessage"],"mappings":";;;;;;;AAAAA,QAAQ,qBAAsB,SAAUC,GACpC,aACA,MAAMC,EAAOC,QAAQ,UACrBC,OAAOC,sBAA6BH,EAChCI,MAAMC,GACF,IAAIC,EACJ,GAAIC,KAAKC,UAAUC,qBAAsB,CACrC,MAAMC,EAAWL,EAAQA,EAAMK,cAAWC,EACpCC,EAAkBL,KAAKC,UAAUK,cAAcH,GACjDE,IACAN,EAAYP,EAAEe,aAAaF,IAE/BP,EAAQA,EAAQA,EAAMA,MAAQA,OAE9BC,EAAYP,EAAEe,aAAaP,KAAKQ,SAASC,MAE7C,OAAIX,IAASC,GACFP,EAAEkB,eAAeZ,EAAOC,KAK3CY,KAAKC,UAAUC,eAAiB","file":"../../../validator/rules/Mask.js","sourcesContent":["define(['../../utils/utils'], function (a) {\n    'use strict';\n    const Rule = require('./Rule');\n    module.exports = class Mask extends Rule {\n        check(value) {\n            let inputMask;\n            if (this.component.isMultipleMasksField) {\n                const maskName = value ? value.maskName : undefined;\n                const formioInputMask = this.component.getMaskByName(maskName);\n                if (formioInputMask) {\n                    inputMask = a.getInputMask(formioInputMask);\n                }\n                value = value ? value.value : value;\n            } else {\n                inputMask = a.getInputMask(this.settings.mask);\n            }\n            if (value && inputMask) {\n                return a.matchInputMask(value, inputMask);\n            }\n            return true;\n        }\n    };\n    Mask.prototype.defaultMessage = '{{field}} does not match the mask.';\n});"]}