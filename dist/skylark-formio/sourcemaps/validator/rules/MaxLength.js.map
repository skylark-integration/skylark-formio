{"version":3,"sources":["validator/rules/MaxLength.js"],"names":["define","Rule","MaxLength","[object Object]","value","maxLength","parseInt","this","settings","length","hasOwnProperty","prototype","defaultMessage"],"mappings":";;;;;;;AAAAA,QAAQ,UAAW,SAAUC,GACzB,mBAEMC,UAAkBD,EACpBE,MAAMC,GACF,MAAMC,EAAYC,SAASC,KAAKC,SAASC,OAAQ,IACjD,QAAKL,GAAUC,GAAcD,EAAMM,eAAe,YAG3CN,EAAMK,QAAUJ,GAK/B,OAFAH,EAAUS,UAAUC,eAAiB,qEAE9BV","file":"../../../validator/rules/MaxLength.js","sourcesContent":["define(['./Rule'], function (Rule) {\n    'use strict';\n\n    class MaxLength extends Rule {\n        check(value) {\n            const maxLength = parseInt(this.settings.length, 10);\n            if (!value || !maxLength || !value.hasOwnProperty('length')) {\n                return true;\n            }\n            return value.length <= maxLength;\n        }\n    };\n    MaxLength.prototype.defaultMessage = '{{field}} must have no more than {{- settings.length}} characters.';\n\n    return MaxLength;\n\n});"]}