{"version":3,"sources":["validator/rules/MaxDate.js"],"names":["define","a","moment","_","Rule","require","module","exports","[object Object]","value","this","settings","dateLimit","date","maxDate","getDateSetting","isNull","setHours","isBefore","isSame","MaxDate","prototype","defaultMessage"],"mappings":";;;;;;;AAAAA,QACI,oBACA,iBACA,kBACD,SAAUC,EAAGC,EAAQC,GACpB,aACA,MAAMC,EAAOC,QAAQ,UACrBC,OAAOC,sBAAgCH,EACnCI,MAAMC,GACF,IAAKA,EACD,OAAO,EAEX,GAAIA,IAAUC,KAAKC,SAASC,UACxB,OAAO,EAEX,MAAMC,EAAOX,EAAOO,GACdK,EAAUb,EAAEc,eAAeL,KAAKC,SAASC,WAC/C,QAAIT,EAAEa,OAAOF,KAGTA,EAAQG,SAAS,EAAG,EAAG,EAAG,GAEvBJ,EAAKK,SAASJ,IAAYD,EAAKM,OAAOL,MAGrDM,QAAQC,UAAUC,eAAiB","file":"../../../validator/rules/MaxDate.js","sourcesContent":["define([\n    '../../utils/utils',\n    'skylark-moment',\n    'skylark-lodash'\n], function (a, moment, _) {\n    'use strict';\n    const Rule = require('./Rule');\n    module.exports = class MaxDate extends Rule {\n        check(value) {\n            if (!value) {\n                return true;\n            }\n            if (value === this.settings.dateLimit) {\n                return true;\n            }\n            const date = moment(value);\n            const maxDate = a.getDateSetting(this.settings.dateLimit);\n            if (_.isNull(maxDate)) {\n                return true;\n            } else {\n                maxDate.setHours(0, 0, 0, 0);\n            }\n            return date.isBefore(maxDate) || date.isSame(maxDate);\n        }\n    };\n    MaxDate.prototype.defaultMessage = '{{field}} should not contain date after {{settings.dateLimit}}';\n});"]}