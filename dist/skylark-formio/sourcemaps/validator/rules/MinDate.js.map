{"version":3,"sources":["validator/rules/MinDate.js"],"names":["define","Rule","utils","moment","_","MinDate","[object Object]","value","date","minDate","getDateSetting","this","settings","dateLimit","isNull","setHours","isAfter","isSame","prototype","defaultMessage"],"mappings":";;;;;;;AAAAA,QACI,SACA,oBACA,iBACA,kBACD,SAAUC,EAAKC,EAAOC,EAAQC,SACvBC,UAAgBJ,EAClBK,MAAMC,GACF,IAAKA,EACD,OAAO,EAEX,MAAMC,EAAOL,EAAOI,GACdE,EAAUP,EAAMQ,eAAeC,KAAKC,SAASC,WACnD,QAAIT,EAAEU,OAAOL,KAGTA,EAAQM,SAAS,EAAG,EAAG,EAAG,GAEvBP,EAAKQ,QAAQP,IAAYD,EAAKS,OAAOR,KAKpD,OAFAJ,EAAQa,UAAUC,eAAiB,kEAE5Bd","file":"../../../validator/rules/MinDate.js","sourcesContent":["define([\n    \"./Rule\",\n    '../../utils/utils',\n    'skylark-moment',\n    'skylark-lodash'\n], function (Rule,utils, moment, _) {\n    class MinDate extends Rule {\n        check(value) {\n            if (!value) {\n                return true;\n            }\n            const date = moment(value);\n            const minDate = utils.getDateSetting(this.settings.dateLimit);\n            if (_.isNull(minDate)) {\n                return true;\n            } else {\n                minDate.setHours(0, 0, 0, 0);\n            }\n            return date.isAfter(minDate) || date.isSame(minDate);\n        }\n    };\n    MinDate.prototype.defaultMessage = '{{field}} should not contain date before {{settings.dateLimit}}';\n\n    return MinDate;\n});\n"]}