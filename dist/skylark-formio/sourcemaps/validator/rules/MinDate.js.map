{"version":3,"sources":["validator/rules/MinDate.js"],"names":["define","a","moment","_","Rule","require","module","exports","[object Object]","value","date","minDate","getDateSetting","this","settings","dateLimit","isNull","setHours","isAfter","isSame","MinData","prototype","defaultMessage"],"mappings":";;;;;;;AAAAA,QACI,oBACA,iBACA,kBACD,SAAUC,EAAGC,EAAQC,GACpB,aACA,MAAMC,EAAOC,QAAQ,UACrBC,OAAOC,sBAAgCH,EACnCI,MAAMC,GACF,IAAKA,EACD,OAAO,EAEX,MAAMC,EAAOR,EAAOO,GACdE,EAAUV,EAAEW,eAAeC,KAAKC,SAASC,WAC/C,QAAIZ,EAAEa,OAAOL,KAGTA,EAAQM,SAAS,EAAG,EAAG,EAAG,GAEvBP,EAAKQ,QAAQP,IAAYD,EAAKS,OAAOR,MAGpDS,QAAQC,UAAUC,eAAiB","file":"../../../validator/rules/MinDate.js","sourcesContent":["define([\n    '../../utils/utils',\n    'skylark-moment',\n    'skylark-lodash'\n], function (a, moment, _) {\n    'use strict';\n    const Rule = require('./Rule');\n    module.exports = class MinDate extends Rule {\n        check(value) {\n            if (!value) {\n                return true;\n            }\n            const date = moment(value);\n            const minDate = a.getDateSetting(this.settings.dateLimit);\n            if (_.isNull(minDate)) {\n                return true;\n            } else {\n                minDate.setHours(0, 0, 0, 0);\n            }\n            return date.isAfter(minDate) || date.isSame(minDate);\n        }\n    };\n    MinData.prototype.defaultMessage = '{{field}} should not contain date before {{settings.dateLimit}}';\n});"]}