{"version":3,"sources":["validator/rules/MinLength.js"],"names":["define","Rule","MinLength","[object Object]","value","minLength","parseInt","this","settings","length","hasOwnProperty","component","isEmpty","prototype","defaultMessage"],"mappings":";;;;;;;AAAAA,QAAQ,UAAW,SAAUC,GACzB,mBAEMC,UAAkBD,EACpBE,MAAMC,GACF,MAAMC,EAAYC,SAASC,KAAKC,SAASC,OAAQ,IACjD,QAAKJ,GAAcD,GAAUA,EAAMM,eAAe,YAAaH,KAAKI,UAAUC,QAAQR,KAG/EA,EAAMK,QAAUJ,GAK/B,OAFAH,EAAUW,UAAUC,eAAiB,qEAE9BZ","file":"../../../validator/rules/MinLength.js","sourcesContent":["define(['./Rule'], function (Rule) {\n    'use strict';\n\n    class MinLength extends Rule {\n        check(value) {\n            const minLength = parseInt(this.settings.length, 10);\n            if (!minLength || !value || !value.hasOwnProperty('length') || this.component.isEmpty(value)) {\n                return true;\n            }\n            return value.length >= minLength;\n        }\n    };\n    MinLength.prototype.defaultMessage = '{{field}} must have no more than {{- settings.length}} characters.';\n\n    return MinLength;\n});"]}