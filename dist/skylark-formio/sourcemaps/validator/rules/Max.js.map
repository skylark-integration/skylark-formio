{"version":3,"sources":["validator/rules/Max.js"],"names":["define","_","Rule","Max","[object Object]","value","max","parseFloat","this","settings","limit","Number","isNaN","isNumber","prototype","defaultMessage"],"mappings":";;;;;;;AAAAA,QACI,iBACA,UACD,SAAUC,EAAGC,GACZ,mBACMC,UAAYD,EACdE,MAAMC,GACF,MAAMC,EAAMC,WAAWC,KAAKC,SAASC,OACrC,SAAIC,OAAOC,MAAMN,IAASL,EAAEY,SAASR,KAG9BE,WAAWF,IAAUC,GAMpC,OAHAH,EAAIW,UAAUC,eAAiB,uDAGxBZ","file":"../../../validator/rules/Max.js","sourcesContent":["define([\n    'skylark-lodash',\n    './Rule'\n], function (_, Rule) {\n    'use strict';\n    class Max extends Rule {\n        check(value) {\n            const max = parseFloat(this.settings.limit);\n            if (Number.isNaN(max) || !_.isNumber(value)) {\n                return true;\n            }\n            return parseFloat(value) <= max;\n        }\n    };\n    Max.prototype.defaultMessage = '{{field}} cannot be greater than {{settings.limit}}.';\n\n\n    return Max;\n});"]}