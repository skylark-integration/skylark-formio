{"version":3,"sources":["utils/utils.js"],"names":["define","_","fetchPonyfill","jsonLogic","moment","jtz","a","NativePromise","dompurify","formUtils","Evaluator","interpolate","fetch","Promise","evaluate","func","args","ret","tokenize","returnVal","component","key","form","instance","get","componentKey","replace","match","$1","$2","indexOf","data","row","evaluator","values","err","console","warn","apply","getPropertyValue","style","prop","value","parseFloat","checkSimpleConditional","condition","getValue","when","isNil","eq","String","show","isObject","has","Array","isArray","map","includes","checkCustomConditional","custom","variable","onError","checkJsonConditional","json","guid","c","r","Math","random","toString","currentTimezone","determine","name","offsetDate","date","timezone","Date","getTime","getTimezoneOffset","abbr","dateMoment","tz","utcOffset","format","shouldLoadZones","loadZones","noop","zonesPromise","then","resp","zones","load","zonesLoaded","document","createEvent","body","dispatchEvent","event","initEvent","convertFormatToMoment","iterateKey","suffix","Number","unfold","e","lodashOperators","forEach","add_operation","toISOString","relativeMinDate","subtract","relativeMaxDate","add","firstNonNil","flow","partialRight","find","v","isUndefined","getRandomComponentId","substring","getElementRect","element","window","getComputedStyle","x","y","width","height","boolValue","isBoolean","isString","toLowerCase","isMongoId","text","checkCalculated","submission","rowData","calculateValue","set","undefined","util","this","checkCondition","customConditional","conditional","checkTrigger","trigger","type","simple","javascript","setActionProperty","action","result","property","currentValue","newValue","state","evalData","textValue","uniqueName","template","evalContext","parts","split","fileName","slice","length","join","extension","last","substr","Object","assign","getDateSetting","isNaN","toDate","isValid","dateSetting","toUTCString","isValidDate","isDate","getDate","momentDate","formatDate","offset","formatOffset","formatFn","getLocaleDateFormatInfo","locale","formatInfo","localDateString","toLocaleDateString","dayFirst","convertFormatToFlatpickr","convertFormatToMask","getInputMask","mask","maskArray","numeric","i","push","matchInputMask","inputMask","char","charPart","isRegExp","test","getNumberSeparators","lang","delimeters","toLocaleString","delimiter","decimalSeparator","getNumberDecimalLimit","defaultLimit","decimalLimit","step","getCurrencyAffixes","currency","regex","useGrouping","maximumFractionDigits","minimumFractionDigits","RegExp","prefix","fieldData","hasOwnProperty","multiple","delay","fn","timer","setTimeout","cancel","clearTimeout","earlyCall","uniqueKey","base","newKey","bootstrapVersion","options","bootstrap","$","collapse","parseInt","Constructor","VERSION","withSwitch","b","next","prev","observeOverload","callback","limit","callCount","timeoutID","reset","getContextComponents","context","utils","eachComponent","editForm","components","path","label","sanitize","string","sanitizeOptions","ADD_ATTR","USE_PROFILES","html","sanitizeConfig","addAttr","attr","addTags","ADD_TAGS","allowedTags","ALLOWED_TAGS","allowedAttrs","ALLOWED_ATTR","allowedUriRegex","ALLOWED_URI_REGEXP","fastCloneDeep","obj","JSON","parse","stringify","isInputComponent","componentJson","input","isLayoutComponent","matchComponent","getComponent","searchComponents","findComponents","findComponent","removeComponent","generateFormChange","applyFormChanges","flattenComponents","hasCondition","parseFloatExt","formatAsCurrency","escapeRegExCharacters","getStrings"],"mappings":"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","file":"../../utils/utils.js","sourcesContent":["define([\n    'skylark-lodash',\n    '../vendors/fetch-ponyfill/fetch',\n    '../vendors/json-logic-js/logic',\n    '../vendors/moment/timezone',\n    '../vendors/jstimezonedetect/jstz',\n    './jsonlogic/operators',\n    '../vendors/getify/npo',\n    '../vendors/dompurify/purify',\n    './formUtils',\n    './Evaluator'\n], function (_, fetchPonyfill, jsonLogic, moment, jtz, a, NativePromise, dompurify, formUtils, Evaluator) {\n    'use strict';\n    const interpolate = Evaluator.interpolate;\n    const {fetch} = fetchPonyfill({ Promise: NativePromise });\n   // export * from './formUtils';\n    a.lodashOperators.forEach(name => jsonLogic.add_operation(`_${ name }`, _[name]));\n    jsonLogic.add_operation('getDate', date => {\n        return moment(date).toISOString();\n    });\n    jsonLogic.add_operation('relativeMinDate', relativeMinDate => {\n        return moment().subtract(relativeMinDate, 'days').toISOString();\n    });\n    jsonLogic.add_operation('relativeMaxDate', relativeMaxDate => {\n        return moment().add(relativeMaxDate, 'days').toISOString();\n    });\n    function evaluate(func, args, ret, tokenize) {\n        let returnVal = null;\n        const component = args.component ? args.component : { key: 'unknown' };\n        if (!args.form && args.instance) {\n            args.form = _.get(args.instance, 'root._form', {});\n        }\n        const componentKey = component.key;\n        if (typeof func === 'string') {\n            if (ret) {\n                func += `;return ${ ret }`;\n            }\n            if (tokenize) {\n                func = func.replace(/({{\\s+(.*)\\s+}})/, (match, $1, $2) => {\n                    if ($2.indexOf('data.') === 0) {\n                        return _.get(args.data, $2.replace('data.', ''));\n                    } else if ($2.indexOf('row.') === 0) {\n                        return _.get(args.row, $2.replace('row.', ''));\n                    }\n                    return _.get(args.data, $2);\n                });\n            }\n            try {\n                func = Evaluator.evaluator(func, args);\n                args = _.values(args);\n            } catch (err) {\n                console.warn(`An error occured within the custom function for ${ componentKey }`, err);\n                returnVal = null;\n                func = false;\n            }\n        }\n        if (typeof func === 'function') {\n            try {\n                returnVal = Evaluator.evaluate(func, args);\n            } catch (err) {\n                returnVal = null;\n                console.warn(`An error occured within custom function for ${ componentKey }`, err);\n            }\n        } else if (typeof func === 'object') {\n            try {\n                returnVal = jsonLogic.apply(func, args);\n            } catch (err) {\n                returnVal = null;\n                console.warn(`An error occured within custom function for ${ componentKey }`, err);\n            }\n        } else if (func) {\n            console.warn(`Unknown function type for ${ componentKey }`);\n        }\n        return returnVal;\n    }\n    function getRandomComponentId() {\n        return `e${ Math.random().toString(36).substring(7) }`;\n    }\n    function getPropertyValue(style, prop) {\n        let value = style.getPropertyValue(prop);\n        value = value ? value.replace(/[^0-9.]/g, '') : '0';\n        return parseFloat(value);\n    }\n    function getElementRect(element) {\n        const style = window.getComputedStyle(element, null);\n        return {\n            x: getPropertyValue(style, 'left'),\n            y: getPropertyValue(style, 'top'),\n            width: getPropertyValue(style, 'width'),\n            height: getPropertyValue(style, 'height')\n        };\n    }\n    function boolValue(value) {\n        if (_.isBoolean(value)) {\n            return value;\n        } else if (_.isString(value)) {\n            return value.toLowerCase() === 'true';\n        } else {\n            return !!value;\n        }\n    }\n    function isMongoId(text) {\n        return text.toString().match(/^[0-9a-fA-F]{24}$/);\n    }\n    function checkCalculated(component, submission, rowData) {\n        if (component.calculateValue) {\n            _.set(rowData, component.key, evaluate(component.calculateValue, {\n                value: undefined,\n                data: submission ? submission.data : rowData,\n                row: rowData,\n                util: this,\n                component\n            }, 'value'));\n        }\n    }\n    function checkSimpleConditional(component, condition, row, data) {\n        let value = null;\n        if (row) {\n            value = formUtils.getValue({ data: row }, condition.when);\n        }\n        if (data && _.isNil(value)) {\n            value = formUtils.getValue({ data }, condition.when);\n        }\n        if (_.isNil(value)) {\n            value = '';\n        }\n        const eq = String(condition.eq);\n        const show = String(condition.show);\n        if (_.isObject(value) && _.has(value, condition.eq)) {\n            return String(value[condition.eq]) === show;\n        }\n        if (Array.isArray(value) && value.map(String).includes(eq)) {\n            return show === 'true';\n        }\n        return String(value) === eq === (show === 'true');\n    }\n    function checkCustomConditional(component, custom, row, data, form, variable, onError, instance) {\n        if (typeof custom === 'string') {\n            custom = `var ${ variable } = true; ${ custom }; return ${ variable };`;\n        }\n        const value = instance && instance.evaluate ? instance.evaluate(custom) : evaluate(custom, {\n            row,\n            data,\n            form\n        });\n        if (value === null) {\n            return onError;\n        }\n        return value;\n    }\n    function checkJsonConditional(component, json, row, data, form, onError) {\n        try {\n            return jsonLogic.apply(json, {\n                data,\n                row,\n                form,\n                _\n            });\n        } catch (err) {\n            console.warn(`An error occurred in jsonLogic advanced condition for ${ component.key }`, err);\n            return onError;\n        }\n    }\n    function checkCondition(component, row, data, form, instance) {\n        if (component.customConditional) {\n            return checkCustomConditional(component, component.customConditional, row, data, form, 'show', true, instance);\n        } else if (component.conditional && component.conditional.when) {\n            return checkSimpleConditional(component, component.conditional, row, data);\n        } else if (component.conditional && component.conditional.json) {\n            return checkJsonConditional(component, component.conditional.json, row, data, form, true);\n        }\n        return true;\n    }\n    function checkTrigger(component, trigger, row, data, form, instance) {\n        if (!trigger[trigger.type]) {\n            return false;\n        }\n        switch (trigger.type) {\n        case 'simple':\n            return checkSimpleConditional(component, trigger.simple, row, data);\n        case 'javascript':\n            return checkCustomConditional(component, trigger.javascript, row, data, form, 'result', false, instance);\n        case 'json':\n            return checkJsonConditional(component, trigger.json, row, data, form, false);\n        }\n        return false;\n    }\n    function setActionProperty(component, action, result, row, data, instance) {\n        const property = action.property.value;\n        switch (action.property.type) {\n        case 'boolean': {\n                const currentValue = _.get(component, property, false).toString();\n                const newValue = action.state.toString();\n                if (currentValue !== newValue) {\n                    _.set(component, property, newValue === 'true');\n                }\n                break;\n            }\n        case 'string': {\n                const evalData = {\n                    data,\n                    row,\n                    component,\n                    result\n                };\n                const textValue = action.property.component ? action[action.property.component] : action.text;\n                const currentValue = _.get(component, property, '');\n                const newValue = instance && instance.interpolate ? instance.interpolate(textValue, evalData) : Evaluator.interpolate(textValue, evalData);\n                if (newValue !== currentValue) {\n                    _.set(component, property, newValue);\n                }\n                break;\n            }\n        }\n        return component;\n    }\n    function uniqueName(name, template, evalContext) {\n        template = template || '{{fileName}}-{{guid}}';\n        if (!template.includes('{{guid}}')) {\n            template = `${ template }-{{guid}}`;\n        }\n        const parts = name.split('.');\n        let fileName = parts.slice(0, parts.length - 1).join('.');\n        const extension = parts.length > 1 ? `.${ _.last(parts) }` : '';\n        fileName = fileName.substr(0, 100);\n        evalContext = Object.assign(evalContext || {}, {\n            fileName,\n            guid: guid()\n        });\n        const uniqueName = `${ Evaluator.interpolate(template, evalContext) }${ extension }`.replace(/[^0-9a-zA-Z.\\-_ ]/g, '-');\n        return uniqueName;\n    }\n    function guid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n            const r = Math.random() * 16 | 0;\n            const v = c === 'x' ? r : r & 3 | 8;\n            return v.toString(16);\n        });\n    }\n    function getDateSetting(date) {\n        if (_.isNil(date) || _.isNaN(date) || date === '') {\n            return null;\n        }\n        if (date instanceof Date) {\n            return date;\n        } else if (typeof date.toDate === 'function') {\n            return date.isValid() ? date.toDate() : null;\n        }\n        let dateSetting = typeof date !== 'string' || date.indexOf('moment(') === -1 ? moment(date) : null;\n        if (dateSetting && dateSetting.isValid()) {\n            return dateSetting.toDate();\n        }\n        dateSetting = null;\n        try {\n            const value = Evaluator.evaluator(`return ${ date };`, 'moment')(moment);\n            if (typeof value === 'string') {\n                dateSetting = moment(value);\n            } else if (typeof value.toDate === 'function') {\n                dateSetting = moment(value.toDate().toUTCString());\n            } else if (value instanceof Date) {\n                dateSetting = moment(value);\n            }\n        } catch (e) {\n            return null;\n        }\n        if (!dateSetting) {\n            return null;\n        }\n        if (!dateSetting.isValid()) {\n            return null;\n        }\n        return dateSetting.toDate();\n    }\n    function isValidDate(date) {\n        return _.isDate(date) && !_.isNaN(date.getDate());\n    }\n    function currentTimezone() {\n        if (moment.currentTimezone) {\n            return moment.currentTimezone;\n        }\n        moment.currentTimezone = jtz.determine().name();\n        return moment.currentTimezone;\n    }\n    function offsetDate(date, timezone) {\n        if (timezone === 'UTC') {\n            return {\n                date: new Date(date.getTime() + date.getTimezoneOffset() * 60000),\n                abbr: 'UTC'\n            };\n        }\n        const dateMoment = moment(date).tz(timezone);\n        return {\n            date: new Date(date.getTime() + (dateMoment.utcOffset() + date.getTimezoneOffset()) * 60000),\n            abbr: dateMoment.format('z')\n        };\n    }\n    function zonesLoaded() {\n        return moment.zonesLoaded;\n    }\n    function shouldLoadZones(timezone) {\n        if (timezone === currentTimezone() || timezone === 'UTC') {\n            return false;\n        }\n        return true;\n    }\n    function loadZones(timezone) {\n        if (timezone && !shouldLoadZones(timezone)) {\n            return new NativePromise(_.noop);\n        }\n        if (moment.zonesPromise) {\n            return moment.zonesPromise;\n        }\n        return moment.zonesPromise = fetch('https://cdn.form.io/moment-timezone/data/packed/latest.json').then(resp => resp.json().then(zones => {\n            moment.tz.load(zones);\n            moment.zonesLoaded = true;\n            if (document && document.createEvent && document.body && document.body.dispatchEvent) {\n                var event = document.createEvent('Event');\n                event.initEvent('zonesLoaded', true, true);\n                document.body.dispatchEvent(event);\n            }\n        }));\n    }\n    function momentDate(value, format, timezone) {\n        const momentDate = moment(value);\n        if (timezone === 'UTC') {\n            timezone = 'Etc/UTC';\n        }\n        if ((timezone !== currentTimezone() || format && format.match(/\\s(z$|z\\s)/)) && moment.zonesLoaded) {\n            return momentDate.tz(timezone);\n        }\n        return momentDate;\n    }\n    function formatDate(value, format, timezone) {\n        const momentDate = moment(value);\n        if (timezone === currentTimezone()) {\n            if (format.match(/\\s(z$|z\\s)/)) {\n                loadZones();\n                if (moment.zonesLoaded) {\n                    return momentDate.tz(timezone).format(convertFormatToMoment(format));\n                } else {\n                    return momentDate.format(convertFormatToMoment(format.replace(/\\s(z$|z\\s)/, '')));\n                }\n            }\n            return momentDate.format(convertFormatToMoment(format));\n        }\n        if (timezone === 'UTC') {\n            const offset = offsetDate(momentDate.toDate(), 'UTC');\n            return `${ moment(offset.date).format(convertFormatToMoment(format)) } UTC`;\n        }\n        loadZones();\n        if (moment.zonesLoaded) {\n            return momentDate.tz(timezone).format(`${ convertFormatToMoment(format) } z`);\n        } else {\n            return momentDate.format(convertFormatToMoment(format));\n        }\n    }\n    function formatOffset(formatFn, date, format, timezone) {\n        if (timezone === currentTimezone()) {\n            return formatFn(date, format);\n        }\n        if (timezone === 'UTC') {\n            return `${ formatFn(offsetDate(date, 'UTC').date, format) } UTC`;\n        }\n        loadZones();\n        if (moment.zonesLoaded) {\n            const offset = offsetDate(date, timezone);\n            return `${ formatFn(offset.date, format) } ${ offset.abbr }`;\n        } else {\n            return formatFn(date, format);\n        }\n    }\n    function getLocaleDateFormatInfo(locale) {\n        const formatInfo = {};\n        const day = 21;\n        const exampleDate = new Date(2017, 11, day);\n        const localDateString = exampleDate.toLocaleDateString(locale);\n        formatInfo.dayFirst = localDateString.slice(0, 2) === day.toString();\n        return formatInfo;\n    }\n    function convertFormatToFlatpickr(format) {\n        return format.replace(/Z/g, '').replace(/y/g, 'Y').replace('YYYY', 'Y').replace('YY', 'y').replace('MMMM', 'F').replace(/M/g, 'n').replace('nnn', 'M').replace('nn', 'm').replace(/d/g, 'j').replace(/jj/g, 'd').replace('EEEE', 'l').replace('EEE', 'D').replace('HH', 'H').replace('hh', 'G').replace('mm', 'i').replace('ss', 'S').replace(/a/g, 'K');\n    }\n    function convertFormatToMoment(format) {\n        return format.replace(/y/g, 'Y').replace(/d/g, 'D').replace(/E/g, 'd').replace(/a/g, 'A').replace(/U/g, 'X');\n    }\n    function convertFormatToMask(format) {\n        return format.replace(/M{4}/g, 'MM').replace(/M{3}/g, '***').replace(/e/g, 'Q').replace(/[ydhmsHMG]/g, '9').replace(/a/g, 'AA');\n    }\n    function getInputMask(mask) {\n        if (mask instanceof Array) {\n            return mask;\n        }\n        const maskArray = [];\n        maskArray.numeric = true;\n        for (let i = 0; i < mask.length; i++) {\n            switch (mask[i]) {\n            case '9':\n                maskArray.push(/\\d/);\n                break;\n            case 'A':\n                maskArray.numeric = false;\n                maskArray.push(/[a-zA-Z]/);\n                break;\n            case 'a':\n                maskArray.numeric = false;\n                maskArray.push(/[a-z]/);\n                break;\n            case '*':\n                maskArray.numeric = false;\n                maskArray.push(/[a-zA-Z0-9]/);\n                break;\n            default:\n                maskArray.numeric = false;\n                maskArray.push(mask[i]);\n                break;\n            }\n        }\n        return maskArray;\n    }\n    function matchInputMask(value, inputMask) {\n        if (!inputMask) {\n            return true;\n        }\n        if (value.length > inputMask.length) {\n            return false;\n        }\n        for (let i = 0; i < inputMask.length; i++) {\n            const char = value[i];\n            const charPart = inputMask[i];\n            if (!(_.isRegExp(charPart) && charPart.test(char) || charPart === char)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    function getNumberSeparators(lang = 'en') {\n        const formattedNumberString = 12345.6789.toLocaleString(lang);\n        const delimeters = formattedNumberString.match(/..(.)...(.)../);\n        if (!delimeters) {\n            return {\n                delimiter: ',',\n                decimalSeparator: '.'\n            };\n        }\n        return {\n            delimiter: delimeters.length > 1 ? delimeters[1] : ',',\n            decimalSeparator: delimeters.length > 2 ? delimeters[2] : '.'\n        };\n    }\n    function getNumberDecimalLimit(component, defaultLimit) {\n        if (_.has(component, 'decimalLimit')) {\n            return _.get(component, 'decimalLimit');\n        }\n        let decimalLimit = defaultLimit || 20;\n        const step = _.get(component, 'validate.step', 'any');\n        if (step !== 'any') {\n            const parts = step.toString().split('.');\n            if (parts.length > 1) {\n                decimalLimit = parts[1].length;\n            }\n        }\n        return decimalLimit;\n    }\n    function getCurrencyAffixes({currency = 'USD', decimalLimit, decimalSeparator, lang}) {\n        let regex = '(.*)?100';\n        if (decimalLimit) {\n            regex += `${ decimalSeparator === '.' ? '\\\\.' : decimalSeparator }0{${ decimalLimit }}`;\n        }\n        regex += '(.*)?';\n        const parts = 100 .toLocaleString(lang, {\n            style: 'currency',\n            currency,\n            useGrouping: true,\n            maximumFractionDigits: decimalLimit,\n            minimumFractionDigits: decimalLimit\n        }).replace('.', decimalSeparator).match(new RegExp(regex));\n        return {\n            prefix: parts[1] || '',\n            suffix: parts[2] || ''\n        };\n    }\n    function fieldData(data, component) {\n        if (!data) {\n            return '';\n        }\n        if (!component || !component.key) {\n            return data;\n        }\n        if (component.key.includes('.')) {\n            let value = data;\n            const parts = component.key.split('.');\n            let key = '';\n            for (let i = 0; i < parts.length; i++) {\n                key = parts[i];\n                if (value.hasOwnProperty('_id')) {\n                    value = value.data;\n                }\n                if (!value.hasOwnProperty(key)) {\n                    return;\n                }\n                if (key === parts[parts.length - 1] && component.multiple && !Array.isArray(value[key])) {\n                    value[key] = [value[key]];\n                }\n                value = value[key];\n            }\n            return value;\n        } else {\n            if (component.multiple && !Array.isArray(data[component.key])) {\n                data[component.key] = [data[component.key]];\n            }\n            return data[component.key];\n        }\n    }\n    function delay(fn, delay = 0, ...args) {\n        const timer = setTimeout(fn, delay, ...args);\n        function cancel() {\n            clearTimeout(timer);\n        }\n        function earlyCall() {\n            cancel();\n            return fn(...args);\n        }\n        earlyCall.timer = timer;\n        earlyCall.cancel = cancel;\n        return earlyCall;\n    }\n    function iterateKey(key) {\n        if (!key.match(/(\\d+)$/)) {\n            return `${ key }1`;\n        }\n        return key.replace(/(\\d+)$/, function (suffix) {\n            return Number(suffix) + 1;\n        });\n    }\n    function uniqueKey(map, base) {\n        let newKey = base;\n        while (map.hasOwnProperty(newKey)) {\n            newKey = iterateKey(newKey);\n        }\n        return newKey;\n    }\n    function bootstrapVersion(options) {\n        if (options.bootstrap) {\n            return options.bootstrap;\n        }\n        if (typeof $ === 'function' && typeof $().collapse === 'function') {\n            return parseInt($.fn.collapse.Constructor.VERSION.split('.')[0], 10);\n        }\n        return 0;\n    }\n    function unfold(e) {\n        if (typeof e === 'function') {\n            return e();\n        }\n        return e;\n    }\n    const firstNonNil = _.flow([\n        _.partialRight(_.map, unfold),\n        _.partialRight(_.find, v => !_.isUndefined(v))\n    ]);\n    function withSwitch(a, b) {\n        let state = a;\n        let next = b;\n        function get() {\n            return state;\n        }\n        function toggle() {\n            const prev = state;\n            state = next;\n            next = prev;\n        }\n        return [\n            get,\n            toggle\n        ];\n    }\n    function observeOverload(callback, options = {}) {\n        const {limit = 50, delay = 500} = options;\n        let callCount = 0;\n        let timeoutID = 0;\n        const reset = () => callCount = 0;\n        return () => {\n            if (timeoutID !== 0) {\n                clearTimeout(timeoutID);\n                timeoutID = 0;\n            }\n            timeoutID = setTimeout(reset, delay);\n            callCount += 1;\n            if (callCount >= limit) {\n                clearTimeout(timeoutID);\n                reset();\n                return callback();\n            }\n        };\n    }\n    function getContextComponents(context) {\n        const values = [];\n        context.utils.eachComponent(context.instance.options.editForm.components, (component, path) => {\n            if (component.key !== context.data.key) {\n                values.push({\n                    label: `${ component.label || component.key } (${ path })`,\n                    value: component.key\n                });\n            }\n        });\n        return values;\n    }\n    function sanitize(string, options) {\n        const sanitizeOptions = {\n            ADD_ATTR: [\n                'ref',\n                'target'\n            ],\n            USE_PROFILES: { html: true }\n        };\n        if (options.sanitizeConfig && Array.isArray(options.sanitizeConfig.addAttr) && options.sanitizeConfig.addAttr.length > 0) {\n            options.sanitizeConfig.addAttr.forEach(attr => {\n                sanitizeOptions.ADD_ATTR.push(attr);\n            });\n        }\n        if (options.sanitizeConfig && Array.isArray(options.sanitizeConfig.addTags) && options.sanitizeConfig.addTags.length > 0) {\n            sanitizeOptions.ADD_TAGS = options.sanitizeConfig.addTags;\n        }\n        if (options.sanitizeConfig && Array.isArray(options.sanitizeConfig.allowedTags) && options.sanitizeConfig.allowedTags.length > 0) {\n            sanitizeOptions.ALLOWED_TAGS = options.sanitizeConfig.allowedTags;\n        }\n        if (options.sanitizeConfig && Array.isArray(options.sanitizeConfig.allowedAttrs) && options.sanitizeConfig.allowedAttrs.length > 0) {\n            sanitizeOptions.ALLOWED_ATTR = options.sanitizeConfig.allowedAttrs;\n        }\n        if (options.sanitizeConfig && options.sanitizeConfig.allowedUriRegex) {\n            sanitizeOptions.ALLOWED_URI_REGEXP = options.sanitizeConfig.allowedUriRegex;\n        }\n        return dompurify.sanitize(string, sanitizeOptions);\n    }\n    function fastCloneDeep(obj) {\n        return obj ? JSON.parse(JSON.stringify(obj)) : obj;\n    }\n    function isInputComponent(componentJson) {\n        if (componentJson.input === false || componentJson.input === true) {\n            return componentJson.input;\n        }\n        switch (componentJson.type) {\n        case 'htmlelement':\n        case 'content':\n        case 'columns':\n        case 'fieldset':\n        case 'panel':\n        case 'table':\n        case 'tabs':\n        case 'well':\n        case 'button':\n            return false;\n        default:\n            return true;\n        }\n    }\n    return {\n        jsonLogic,\n        moment,\n        evaluate: evaluate,\n        getRandomComponentId: getRandomComponentId,\n        getPropertyValue: getPropertyValue,\n        getElementRect: getElementRect,\n        boolValue: boolValue,\n        isMongoId: isMongoId,\n        checkCalculated: checkCalculated,\n        checkSimpleConditional: checkSimpleConditional,\n        checkCustomConditional: checkCustomConditional,\n        checkJsonConditional: checkJsonConditional,\n        checkCondition: checkCondition,\n        checkTrigger: checkTrigger,\n        setActionProperty: setActionProperty,\n        uniqueName: uniqueName,\n        guid: guid,\n        getDateSetting: getDateSetting,\n        isValidDate: isValidDate,\n        currentTimezone: currentTimezone,\n        offsetDate: offsetDate,\n        zonesLoaded: zonesLoaded,\n        shouldLoadZones: shouldLoadZones,\n        loadZones: loadZones,\n        momentDate: momentDate,\n        formatDate: formatDate,\n        formatOffset: formatOffset,\n        getLocaleDateFormatInfo: getLocaleDateFormatInfo,\n        convertFormatToFlatpickr: convertFormatToFlatpickr,\n        convertFormatToMoment: convertFormatToMoment,\n        convertFormatToMask: convertFormatToMask,\n        getInputMask: getInputMask,\n        matchInputMask: matchInputMask,\n        getNumberSeparators: getNumberSeparators,\n        getNumberDecimalLimit: getNumberDecimalLimit,\n        getCurrencyAffixes: getCurrencyAffixes,\n        fieldData: fieldData,\n        delay: delay,\n        iterateKey: iterateKey,\n        uniqueKey: uniqueKey,\n        bootstrapVersion: bootstrapVersion,\n        unfold: unfold,\n        firstNonNil: firstNonNil,\n        withSwitch: withSwitch,\n        observeOverload: observeOverload,\n        getContextComponents: getContextComponents,\n        sanitize: sanitize,\n        fastCloneDeep: fastCloneDeep,\n        Evaluator,\n        interpolate,\n        isInputComponent: isInputComponent,\n\n\n        isLayoutComponent: formUtils.isLayoutComponent,\n        eachComponent: formUtils.eachComponent,\n        matchComponent: formUtils.matchComponent,\n        getComponent: formUtils.getComponent,\n        searchComponents: formUtils.searchComponents,\n        findComponents: formUtils.findComponents,\n        findComponent: formUtils.findComponent,\n        removeComponent: formUtils.removeComponent,\n        generateFormChange: formUtils.generateFormChange,\n        applyFormChanges: formUtils.applyFormChanges,\n        flattenComponents: formUtils.flattenComponents,\n        hasCondition: formUtils.hasCondition,\n        parseFloatExt: formUtils.parseFloatExt,\n        formatAsCurrency: formUtils.formatAsCurrency,\n        escapeRegExCharacters: formUtils.escapeRegExCharacters,\n        getValue: formUtils.getValue,\n        getStrings: formUtils.getStrings\n    };\n});"]}