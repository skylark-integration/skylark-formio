{"version":3,"sources":["providers/storage/base64.js"],"names":["define","NativePromise","base64","title","name","[object Object]","file","fileName","reader","FileReader","resolve","reject","onload","event","url","target","result","storage","size","type","onerror","this","readAsDataURL","downloadFile"],"mappings":";;;;;;;AAAAA,QAAQ,4BAA6B,SAAUC,GAC3C,aACA,MAAMC,EAAS,MACXC,MAAO,SACPC,KAAM,SACNC,WAAWC,EAAMC,GACb,MAAMC,EAAS,IAAIC,WACnB,OAAO,IAAIR,EAAc,CAACS,EAASC,KAC/BH,EAAOI,OAASC,CAAAA,IACZ,MAAMC,EAAMD,EAAME,OAAOC,OACzBN,GACIO,QAAS,SACTb,KAAMG,EACNO,IAAKA,EACLI,KAAMZ,EAAKY,KACXC,KAAMb,EAAKa,SAGnBX,EAAOY,QAAU,KACNT,EAAOU,OAElBb,EAAOc,cAAchB,MAG7BiB,aAAajB,GACFL,EAAcS,QAAQJ,KAIrC,OADAJ,EAAOC,MAAQ,SACRD","file":"../../../providers/storage/base64.js","sourcesContent":["define(['../../vendors/getify/npo'], function (NativePromise) {\n    'use strict';\n    const base64 = () => ({\n        title: 'Base64',\n        name: 'base64',\n        uploadFile(file, fileName) {\n            const reader = new FileReader();\n            return new NativePromise((resolve, reject) => {\n                reader.onload = event => {\n                    const url = event.target.result;\n                    resolve({\n                        storage: 'base64',\n                        name: fileName,\n                        url: url,\n                        size: file.size,\n                        type: file.type\n                    });\n                };\n                reader.onerror = () => {\n                    return reject(this);\n                };\n                reader.readAsDataURL(file);\n            });\n        },\n        downloadFile(file) {\n            return NativePromise.resolve(file);\n        }\n    });\n    base64.title = 'Base64';\n    return base64;\n});"]}