{"version":3,"sources":["providers/storage/azure.js"],"names":["define","XHR","azure","formio","uploadFile","file","fileName","dir","progressCallback","upload","xhr","response","open","url","setRequestHeader","type","then","storage","name","path","size","downloadFile","makeRequest","formUrl","trim","title"],"mappings":";;;;;;;AAAAA,QAAQ,SAAU,SAAUC,GACxB,aACA,MAAMC,EAAQC,KACVC,WAAU,CAACC,EAAMC,EAAUC,EAAKC,IACrBP,EAAIQ,OAAON,EAAQ,QAAS,CAACO,EAAKC,KACrCD,EAAIE,KAAK,MAAOD,EAASE,KACzBH,EAAII,iBAAiB,eAAgBT,EAAKU,MAC1CL,EAAII,iBAAiB,iBAAkB,aAChCT,GACRA,EAAMC,EAAUC,EAAKC,GAAkBQ,KAAK,MAEvCC,QAAS,QACTC,KAAMjB,EAAIkB,MACNZ,EACAD,IAEJc,KAAMf,EAAKe,KACXL,KAAMV,EAAKU,QAIvBM,aAAahB,GACFF,EAAOmB,YAAY,UAAYnB,EAAOoB,8BAAgCtB,EAAIuB,KAAKnB,EAAKa,QAAU,SAI7G,OADAhB,EAAMuB,MAAQ,sBACPvB","file":"../../../providers/storage/azure.js","sourcesContent":["define(['./xhr'], function (XHR) {\n    'use strict';\n    const azure = formio => ({\n        uploadFile(file, fileName, dir, progressCallback) {\n            return XHR.upload(formio, 'azure', (xhr, response) => {\n                xhr.open('PUT', response.url);\n                xhr.setRequestHeader('Content-Type', file.type);\n                xhr.setRequestHeader('x-ms-blob-type', 'BlockBlob');\n                return file;\n            }, file, fileName, dir, progressCallback).then(() => {\n                return {\n                    storage: 'azure',\n                    name: XHR.path([\n                        dir,\n                        fileName\n                    ]),\n                    size: file.size,\n                    type: file.type\n                };\n            });\n        },\n        downloadFile(file) {\n            return formio.makeRequest('file', `${ formio.formUrl }/storage/azure?name=${ XHR.trim(file.name) }`, 'GET');\n        }\n    });\n    azure.title = 'Azure File Services';\n    return azure;\n});"]}