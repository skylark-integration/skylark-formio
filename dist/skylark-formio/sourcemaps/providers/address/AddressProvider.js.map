{"version":3,"sources":["providers/address/AddressProvider.js"],"names":["define","_","Formio","AddressProvider","name","displayName","[object Object]","options","this","merge","defaultOptions","queryProperty","responseProperty","displayValueProperty","params","toPairs","map","key","value","encodeURIComponent","join","Error","makeStaticRequest","getRequestUrl","noToken","query","requestOptions","getRequestOptions","makeRequest","then","result","get","address","String"],"mappings":";;;;;;;AAAAA,QACI,iBACA,gBACD,SAAUC,EAAGC,GACZ,aA6CA,OAASC,sBA3CLC,kBACI,MAAO,UAEXC,yBACI,MAAO,UAEXC,YAAYC,MACRC,KAAKD,QAAUN,EAAEQ,SAAUD,KAAKE,eAAgBH,GAEpDG,qBACI,SAEJC,oBACI,MAAO,QAEXC,uBACI,OAAO,KAEXC,2BACI,OAAO,KAEXP,UAAUQ,GACN,OAAOb,EAAEc,QAAQD,GAAQE,IAAI,EAAEC,EAAKC,QAAeC,mBAAmBF,MAAUE,mBAAmBD,MAAWE,KAAK,KAEvHd,kBAAkBC,MACd,OAAON,EAAEQ,SAAUD,KAAKD,QAASA,GAErCD,cAAcC,MACV,MAAM,IAAIc,MAAM,8DAEpBf,YAAYC,MACR,OAAOL,EAAOoB,kBAAkBd,KAAKe,cAAchB,GAAU,MAAO,MAAQiB,SAAS,IAEzFlB,OAAOmB,EAAOlB,MACV,MAAMmB,EAAiBlB,KAAKmB,kBAAkBpB,GAG9C,OAFemB,EAAeZ,OAASY,EAAeZ,YAC/CN,KAAKG,eAAiBc,EACtBjB,KAAKoB,YAAYF,GAAgBG,KAAKC,GAAUtB,KAAKI,iBAAmBX,EAAE8B,IAAID,EAAQtB,KAAKI,qBAAwBkB,GAE9HxB,gBAAgB0B,GACZ,OAAOxB,KAAKK,qBAAuBZ,EAAE8B,IAAIC,EAASxB,KAAKK,qBAAsB,IAAMoB,OAAOD","file":"../../../providers/address/AddressProvider.js","sourcesContent":["define([\n    'skylark-lodash',\n    '../../Formio'\n], function (_, Formio) {\n    'use strict';\n    class AddressProvider {\n        static get name() {\n            return 'address';\n        }\n        static get displayName() {\n            return 'Address';\n        }\n        constructor(options = {}) {\n            this.options = _.merge({}, this.defaultOptions, options);\n        }\n        get defaultOptions() {\n            return {};\n        }\n        get queryProperty() {\n            return 'query';\n        }\n        get responseProperty() {\n            return null;\n        }\n        get displayValueProperty() {\n            return null;\n        }\n        serialize(params) {\n            return _.toPairs(params).map(([key, value]) => `${ encodeURIComponent(key) }=${ encodeURIComponent(value) }`).join('&');\n        }\n        getRequestOptions(options = {}) {\n            return _.merge({}, this.options, options);\n        }\n        getRequestUrl(options = {}) {\n            throw new Error('Method AddressProvider#getRequestUrl(options) is abstract.');\n        }\n        makeRequest(options = {}) {\n            return Formio.makeStaticRequest(this.getRequestUrl(options), 'GET', null, { noToken: true });\n        }\n        search(query, options = {}) {\n            const requestOptions = this.getRequestOptions(options);\n            const params = requestOptions.params = requestOptions.params || {};\n            params[this.queryProperty] = query;\n            return this.makeRequest(requestOptions).then(result => this.responseProperty ? _.get(result, this.responseProperty, []) : result);\n        }\n        getDisplayValue(address) {\n            return this.displayValueProperty ? _.get(address, this.displayValueProperty, '') : String(address);\n        }\n    }\n    return { AddressProvider: AddressProvider };\n});"]}