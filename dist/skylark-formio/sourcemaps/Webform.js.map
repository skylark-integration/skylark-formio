{"version":3,"sources":["Webform.js"],"names":["define","_","moment","EventEmitter","i18next","Formio","NativePromise","Components","NestedDataComponent","utils","formUtils","i18n","forms","registerComponent","setComponent","Webform","[object Object]","element","options","arguments","HTMLElement","super","icons","defaults","submitOnEnter","iconset","saveDraft","alwaysDirty","saveDraftThrottle","events","wildcard","maxListeners","getOptions","this","id","baseUrl","setBaseUrl","i18nReady","resources","each","lang","code","merge","assign","translation","language","lng","type","_src","_loading","_form","draftEnabled","savingDraft","triggerSaveDraft","throttle","bind","customErrors","nosubmit","submitted","submitting","formio","loader","alert","onSubmission","submissionSet","formReady","resolve","reject","formReadyResolve","formReadyReject","submissionReady","submissionReadyResolve","submissionReadyReject","shortcuts","localize","then","on","user","restoreDraft","_id","component","clearOnHide","root","changeLanguage","err","redraw","emit","active","addResourceBundle","initialized","init","split","nodeName","indexOf","event","target","keyboardCatchableElement","ctrl","ctrlKey","metaKey","keyCode","char","String","fromCharCode","shortcut","click","preventDefault","test","capitalize","tagName","push","remove","src","loadingSubmission","submissionId","loadSubmission","submission","setSubmission","catch","value","setUrl","loadForm","params","live","form","setForm","console","warn","setSrc","url","ready","loading","ce","class","spinner","appendChild","prependTo","wrapper","removeChildFrom","settings","components","module","formModule","evaluate","use","Object","rebuild","triggerRecaptcha","setTimeout","onChange","getValue","flags","fromSubmission","triggerChange","setValue","getUser","draft","state","saveSubmission","sub","currentSubmission","userId","loadSubmissions","owner","submissions","length","skipDraftRestore","fastCloneDeep","schema","omit","eachComponent","_this","_that","mergeWith","thisValue","thatValue","Array","isArray","data","_submission","metadata","editing","submissionTimezone","timezone","changed","sanitize","mergeData","viewOnly","destroyComponents","input","addComponents","submit","e","log","checkValidity","args","submitUrl","headers","resetValue","deleteSubmission","updateValue","executeFormController","controller","visible","hidden","rootPristine","off","destroy","build","render","renderTemplate","classes","getClassName","children","renderComponents","builderMode","clear","setContent","attach","loadRefs","webform","childPromise","attachComponents","refs","addEventListener","executeShortcuts","currentForm","noUpdateEvent","result","validate","required","getComponents","comp","setPristine","message","noAlerts","errorRef","forEach","el","removeEventListener","removeChild","role","appendTo","key","currentTarget","dataset","componentKey","focusOnComponent","prepend","getComponent","focus","error","triggerEvent","errors","concat","setAlert","path","identity","compact","setCustomValidity","document","createDocumentFragment","p","t","ul","createListItem","ref","tabIndex","aria-label","li","messages","label","isObject","saved","noValidate","noCheck","details","silent","isValid","showErrors","modified","isChangeEventEmitted","filter","clone","pristine","checkData","noEmit","valid","isEmpty","noconfirm","hook","confirm","readOnly","get","currentTimezone","offset","parseInt","utcOffset","referrer","browserName","navigator","appName","userAgent","pathName","window","location","pathname","onLine","isDraft","everyComponent","persistent","unset","action","method","includes","makeStaticRequest","submitFormio","actionUrl","submitForm","onSubmit","onSubmissionError","before","executeSubmit","beforeSubmit","URL","API_URL","map","header","interpolate","statusText","status","recaptchaComponent","find","eventType","verify","name","_nosubmit","setApiUrl","setAppUrl"],"mappings":"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","file":"../Webform.js","sourcesContent":["define([\n    'skylark-lodash',\n    'skylark-moment',\n    './EventEmitter',\n    'skylark-i18next',\n    './Formio',\n    './vendors/getify/npo',\n    './components/Components',\n    './components/_classes/nesteddata/NestedDataComponent',\n    './utils/utils',\n    './utils/formUtils',\n    \"./i18n\"\n], function (_, moment, EventEmitter, i18next, Formio, NativePromise, Components, NestedDataComponent, utils, formUtils,i18n) {\n    'use strict';\n    Formio.forms = {};\n    Formio.registerComponent = Components.setComponent;\n    function getIconSet(icons) {\n        if (icons === 'fontawesome') {\n            return 'fa';\n        }\n        return icons || '';\n    }\n    function getOptions(options) {\n        options = _.defaults(options, {\n            submitOnEnter: false,\n            iconset: getIconSet(options && options.icons ? options.icons : Formio.icons),\n            i18next,\n            saveDraft: false,\n            alwaysDirty: false,\n            saveDraftThrottle: 5000\n        });\n        if (!options.events) {\n            options.events = new EventEmitter({\n                wildcard: false,\n                maxListeners: 0\n            });\n        }\n        return options;\n    }\n    class Webform extends NestedDataComponent {\n        constructor() {\n            let element, options;\n            if (arguments[0] instanceof HTMLElement || arguments[1]) {\n                element = arguments[0];\n                options = arguments[1];\n            } else {\n                options = arguments[0];\n            }\n            super(null, getOptions(options));\n            this.element = element;\n            Formio.forms[this.id] = this;\n            if (this.options.baseUrl) {\n                Formio.setBaseUrl(this.options.baseUrl);\n            }\n            //let i18n = require('./i18n').default;\n            if (options && options.i18n && !options.i18nReady) {\n                if (options.i18n.resources) {\n                    i18n = options.i18n;\n                } else {\n                    _.each(options.i18n, (lang, code) => {\n                        if (code === 'options') {\n                            _.merge(i18n, lang);\n                        } else if (!i18n.resources[code]) {\n                            i18n.resources[code] = { translation: lang };\n                        } else {\n                            _.assign(i18n.resources[code].translation, lang);\n                        }\n                    });\n                }\n                options.i18n = i18n;\n                options.i18nReady = true;\n            }\n            if (options && options.i18n) {\n                this.options.i18n = options.i18n;\n            } else {\n                this.options.i18n = i18n;\n            }\n            if (this.options.language) {\n                this.options.i18n.lng = this.options.language;\n            }\n            this.type = 'form';\n            this._src = '';\n            this._loading = false;\n            this._form = {};\n            this.draftEnabled = false;\n            this.savingDraft = true;\n            if (this.options.saveDraftThrottle) {\n                this.triggerSaveDraft = _.throttle(this.saveDraft.bind(this), this.options.saveDraftThrottle);\n            } else {\n                this.triggerSaveDraft = this.saveDraft.bind(this);\n            }\n            this.customErrors = [];\n            this.nosubmit = false;\n            this.submitted = false;\n            this.submitting = false;\n            this.formio = null;\n            this.loader = null;\n            this.alert = null;\n            this.onSubmission = null;\n            this.submissionSet = false;\n            this.formReady = new NativePromise((resolve, reject) => {\n                this.formReadyResolve = resolve;\n                this.formReadyReject = reject;\n            });\n            this.submissionReady = new NativePromise((resolve, reject) => {\n                this.submissionReadyResolve = resolve;\n                this.submissionReadyReject = reject;\n            });\n            this.shortcuts = [];\n            this.localize().then(() => {\n                this.language = this.options.language;\n            });\n            if (this.options.saveDraft && Formio.events) {\n                Formio.events.on('formio.user', user => {\n                    this.formReady.then(() => {\n                        if (!this.submissionSet) {\n                            this.restoreDraft(user._id);\n                        }\n                    });\n                });\n            }\n            this.component.clearOnHide = false;\n            this.root = this;\n        }\n        set language(lang) {\n            return new NativePromise((resolve, reject) => {\n                this.options.language = lang;\n                if (i18next.language === lang) {\n                    return resolve();\n                }\n                try {\n                    i18next.changeLanguage(lang, err => {\n                        if (err) {\n                            return reject(err);\n                        }\n                        this.redraw();\n                        this.emit('languageChanged');\n                        resolve();\n                    });\n                } catch (err) {\n                    return reject(err);\n                }\n            });\n        }\n        addLanguage(code, lang, active = false) {\n            i18next.addResourceBundle(code, 'translation', lang, true, true);\n            if (active) {\n                this.language = code;\n            }\n        }\n        localize() {\n            if (i18next.initialized) {\n                return NativePromise.resolve(i18next);\n            }\n            i18next.initialized = true;\n            return new NativePromise((resolve, reject) => {\n                try {\n                    i18next.init(this.options.i18n, err => {\n                        this.options.language = i18next.language.split(';')[0];\n                        if (err) {\n                            return reject(err);\n                        }\n                        resolve(i18next);\n                    });\n                } catch (err) {\n                    return reject(err);\n                }\n            });\n        }\n        keyboardCatchableElement(element) {\n            if (element.nodeName === 'TEXTAREA') {\n                return false;\n            }\n            if (element.nodeName === 'INPUT') {\n                return [\n                    'text',\n                    'email',\n                    'password'\n                ].indexOf(element.type) === -1;\n            }\n            return true;\n        }\n        executeShortcuts(event) {\n            const {target} = event;\n            if (!this.keyboardCatchableElement(target)) {\n                return;\n            }\n            const ctrl = event.ctrlKey || event.metaKey;\n            const keyCode = event.keyCode;\n            let char = '';\n            if (65 <= keyCode && keyCode <= 90) {\n                char = String.fromCharCode(keyCode);\n            } else if (keyCode === 13) {\n                char = 'Enter';\n            } else if (keyCode === 27) {\n                char = 'Esc';\n            }\n            _.each(this.shortcuts, shortcut => {\n                if (shortcut.ctrl && !ctrl) {\n                    return;\n                }\n                if (shortcut.shortcut === char) {\n                    shortcut.element.click();\n                    event.preventDefault();\n                }\n            });\n        }\n        addShortcut(element, shortcut) {\n            if (!shortcut || !/^([A-Z]|Enter|Esc)$/i.test(shortcut)) {\n                return;\n            }\n            shortcut = _.capitalize(shortcut);\n            if (shortcut === 'Enter' || shortcut === 'Esc') {\n                if (element.tagName !== 'BUTTON') {\n                    return;\n                }\n                this.shortcuts.push({\n                    shortcut,\n                    element\n                });\n            } else {\n                this.shortcuts.push({\n                    ctrl: true,\n                    shortcut,\n                    element\n                });\n            }\n        }\n        removeShortcut(element, shortcut) {\n            if (!shortcut || !/^([A-Z]|Enter|Esc)$/i.test(shortcut)) {\n                return;\n            }\n            _.remove(this.shortcuts, {\n                shortcut,\n                element\n            });\n        }\n        get src() {\n            return this._src;\n        }\n        loadSubmission() {\n            this.loadingSubmission = true;\n            if (this.formio.submissionId) {\n                this.onSubmission = this.formio.loadSubmission().then(submission => this.setSubmission(submission), err => this.submissionReadyReject(err)).catch(err => this.submissionReadyReject(err));\n            } else {\n                this.submissionReadyResolve();\n            }\n            return this.submissionReady;\n        }\n        setSrc(value, options) {\n            if (this.setUrl(value, options)) {\n                this.nosubmit = false;\n                return this.formio.loadForm({ params: { live: 1 } }).then(form => {\n                    const setForm = this.setForm(form);\n                    this.loadSubmission();\n                    return setForm;\n                }).catch(err => {\n                    console.warn(err);\n                    this.formReadyReject(err);\n                });\n            }\n            return NativePromise.resolve();\n        }\n        set src(value) {\n            this.setSrc(value);\n        }\n        get url() {\n            return this._src;\n        }\n        setUrl(value, options) {\n            if (!value || typeof value !== 'string' || value === this._src) {\n                return false;\n            }\n            this._src = value;\n            this.nosubmit = true;\n            this.formio = this.options.formio = new Formio(value, options);\n            if (this.type === 'form') {\n                this.options.src = value;\n            }\n            return true;\n        }\n        set url(value) {\n            this.setUrl(value);\n        }\n        get ready() {\n            return this.formReady.then(() => {\n                return super.ready.then(() => {\n                    return this.loadingSubmission ? this.submissionReady : true;\n                });\n            });\n        }\n        get loading() {\n            return this._loading;\n        }\n        set loading(loading) {\n            if (this._loading !== loading) {\n                this._loading = loading;\n                if (!this.loader && loading) {\n                    this.loader = this.ce('div', { class: 'loader-wrapper' });\n                    const spinner = this.ce('div', { class: 'loader text-center' });\n                    this.loader.appendChild(spinner);\n                }\n                if (this.loader) {\n                    try {\n                        if (loading) {\n                            this.prependTo(this.loader, this.wrapper);\n                        } else {\n                            this.removeChildFrom(this.loader, this.wrapper);\n                        }\n                    } catch (err) {\n                    }\n                }\n            }\n        }\n        setForm(form) {\n            this._form = form;\n            if (form && form.settings && form.settings.components) {\n                this.options.components = form.settings.components;\n            }\n            if (form && form.module) {\n                let formModule = null;\n                if (typeof form.module === 'string') {\n                    try {\n                        formModule = this.evaluate(`return ${ form.module }`);\n                    } catch (err) {\n                        console.warn(err);\n                    }\n                } else {\n                    formModule = form.module;\n                }\n                if (formModule) {\n                    Formio.use(formModule);\n                    if (formModule.options && formModule.options.form) {\n                        this.options = Object.assign(this.options, formModule.options.form);\n                    }\n                }\n            }\n            this.initialized = false;\n            const rebuild = this.rebuild() || NativePromise.resolve();\n            return rebuild.then(() => {\n                this.emit('formLoad', form);\n                this.triggerRecaptcha();\n                setTimeout(() => {\n                    this.onChange();\n                    this.formReadyResolve();\n                }, 0);\n                return this.formReady;\n            });\n        }\n        get form() {\n            if (!this._form) {\n                this._form = { components: [] };\n            }\n            return this._form;\n        }\n        set form(form) {\n            this.setForm(form);\n        }\n        get submission() {\n            return this.getValue();\n        }\n        set submission(submission) {\n            this.setSubmission(submission);\n        }\n        setSubmission(submission, flags = {}) {\n            flags = {\n                ...flags,\n                fromSubmission: true\n            };\n            return this.onSubmission = this.formReady.then(() => {\n                this.submissionSet = true;\n                this.triggerChange(flags);\n                this.setValue(submission, flags);\n                return this.submissionReadyResolve(submission);\n            }, err => this.submissionReadyReject(err)).catch(err => this.submissionReadyReject(err));\n        }\n        saveDraft() {\n            if (!this.draftEnabled) {\n                return;\n            }\n            if (!this.formio) {\n                console.warn('Cannot save draft because there is no formio instance.');\n                return;\n            }\n            if (!Formio.getUser()) {\n                console.warn('Cannot save draft unless a user is authenticated.');\n                return;\n            }\n            const draft = this.submission;\n            draft.state = 'draft';\n            if (!this.savingDraft) {\n                this.savingDraft = true;\n                this.formio.saveSubmission(draft).then(sub => {\n                    const currentSubmission = _.merge(sub, draft);\n                    this.emit('saveDraft', sub);\n                    if (!draft._id) {\n                        this.setSubmission(currentSubmission).then(() => {\n                            this.savingDraft = false;\n                        });\n                    } else {\n                        this.savingDraft = false;\n                    }\n                });\n            }\n        }\n        restoreDraft(userId) {\n            if (!this.formio) {\n                console.warn('Cannot restore draft because there is no formio instance.');\n                return;\n            }\n            this.savingDraft = true;\n            this.formio.loadSubmissions({\n                params: {\n                    state: 'draft',\n                    owner: userId\n                }\n            }).then(submissions => {\n                if (submissions.length > 0 && !this.options.skipDraftRestore) {\n                    const draft = utils.fastCloneDeep(submissions[0]);\n                    return this.setSubmission(draft).then(() => {\n                        this.draftEnabled = true;\n                        this.savingDraft = false;\n                        this.emit('restoreDraft', draft);\n                    });\n                }\n                this.draftEnabled = true;\n                this.savingDraft = false;\n                this.emit('restoreDraft', null);\n            });\n        }\n        get schema() {\n            const schema = utils.fastCloneDeep(_.omit(this._form, ['components']));\n            schema.components = [];\n            this.eachComponent(component => schema.components.push(component.schema));\n            return schema;\n        }\n        mergeData(_this, _that) {\n            _.mergeWith(_this, _that, (thisValue, thatValue) => {\n                if (Array.isArray(thisValue) && Array.isArray(thatValue) && thisValue.length !== thatValue.length) {\n                    return thatValue;\n                }\n            });\n        }\n        setValue(submission, flags = {}) {\n            if (!submission || !submission.data) {\n                submission = { data: {} };\n            }\n            this._submission.metadata = submission.metadata || {};\n            this.editing = !!submission._id;\n            if (!this.options.submissionTimezone && submission.metadata && submission.metadata.timezone) {\n                this.options.submissionTimezone = submission.metadata.timezone;\n            }\n            const changed = super.setValue(submission.data, flags);\n            if (!flags.sanitize) {\n                this.mergeData(this.data, submission.data);\n            }\n            submission.data = this.data;\n            this._submission = submission;\n            return changed;\n        }\n        getValue() {\n            if (!this._submission.data) {\n                this._submission.data = {};\n            }\n            if (this.viewOnly) {\n                return this._submission;\n            }\n            const submission = this._submission;\n            submission.data = this.data;\n            return this._submission;\n        }\n        init() {\n            this._submission = this._submission || { data: {} };\n            if (this.components && this.components.length) {\n                this.destroyComponents();\n                this.components = [];\n            }\n            if (this.component) {\n                this.component.components = this.form ? this.form.components : [];\n            } else {\n                this.component = this.form;\n            }\n            this.component.type = 'form';\n            this.component.input = false;\n            this.addComponents();\n            this.on('submitButton', options => {\n                this.submit(false, options).catch(e => e !== false && console.log(e));\n            }, true);\n            this.on('checkValidity', data => this.checkValidity(data, true, data), true);\n            this.on('requestUrl', args => this.submitUrl(args.url, args.headers), true);\n            this.on('resetForm', () => this.resetValue(), true);\n            this.on('deleteSubmission', () => this.deleteSubmission(), true);\n            this.on('refreshData', () => this.updateValue(), true);\n            this.executeFormController();\n            return this.formReady;\n        }\n        executeFormController() {\n            if (!this.form || !this.form.controller || (!this.visible || this.component.hidden) && this.component.clearOnHide && !this.rootPristine) {\n                return false;\n            }\n            this.formReady.then(() => {\n                this.evaluate(this.form.controller, { components: this.components });\n            });\n        }\n        destroy() {\n            this.off('submitButton');\n            this.off('checkValidity');\n            this.off('requestUrl');\n            this.off('resetForm');\n            this.off('deleteSubmission');\n            this.off('refreshData');\n            return super.destroy();\n        }\n        build(element) {\n            if (element || this.element) {\n                return this.ready.then(() => {\n                    element = element || this.element;\n                    super.build(element);\n                });\n            }\n            return this.ready;\n        }\n        getClassName() {\n            return 'formio-form';\n        }\n        render() {\n            return super.render(this.renderTemplate('webform', {\n                classes: this.getClassName(),\n                children: this.renderComponents()\n            }), this.builderMode ? 'builder' : 'form', true);\n        }\n        redraw() {\n            if (!this.element) {\n                return NativePromise.resolve();\n            }\n            this.clear();\n            this.setContent(this.element, this.render());\n            return this.attach(this.element);\n        }\n        attach(element) {\n            this.element = element;\n            this.loadRefs(element, { webform: 'single' });\n            const childPromise = this.attachComponents(this.refs.webform);\n            this.addEventListener(this.element, 'keydown', this.executeShortcuts);\n            this.currentForm = this;\n            return childPromise.then(() => {\n                this.emit('render');\n                return this.setValue(this._submission, { noUpdateEvent: true });\n            });\n        }\n        hasRequiredFields() {\n            let result = false;\n            formUtils.eachComponent(this.form.components, component => {\n                if (component.validate.required) {\n                    result = true;\n                    return true;\n                }\n            }, true);\n            return result;\n        }\n        resetValue() {\n            _.each(this.getComponents(), comp => comp.resetValue());\n            this.setPristine(true);\n        }\n        setAlert(type, message) {\n            if (!type && this.submitted) {\n                if (this.alert) {\n                    if (this.refs.errorRef && this.refs.errorRef.length) {\n                        this.refs.errorRef.forEach(el => {\n                            this.removeEventListener(el, 'click');\n                            this.removeEventListener(el, 'keypress');\n                        });\n                    }\n                    this.removeChild(this.alert);\n                    this.alert = null;\n                }\n                return;\n            }\n            if (this.options.noAlerts) {\n                if (!message) {\n                    this.emit('error', false);\n                }\n                return;\n            }\n            if (this.alert) {\n                try {\n                    if (this.refs.errorRef && this.refs.errorRef.length) {\n                        this.refs.errorRef.forEach(el => {\n                            this.removeEventListener(el, 'click');\n                            this.removeEventListener(el, 'keypress');\n                        });\n                    }\n                    this.removeChild(this.alert);\n                    this.alert = null;\n                } catch (err) {\n                }\n            }\n            if (message) {\n                this.alert = this.ce('div', {\n                    id: `error-list-${ this.id }`,\n                    class: `alert alert-${ type }`,\n                    role: 'alert'\n                });\n                if (message instanceof HTMLElement) {\n                    this.appendTo(message, this.alert);\n                } else {\n                    this.setContent(this.alert, message);\n                }\n            }\n            if (!this.alert) {\n                return;\n            }\n            this.loadRefs(this.alert, { errorRef: 'multiple' });\n            if (this.refs.errorRef && this.refs.errorRef.length) {\n                this.refs.errorRef.forEach(el => {\n                    this.addEventListener(el, 'click', e => {\n                        const key = e.currentTarget.dataset.componentKey;\n                        this.focusOnComponent(key);\n                    });\n                    this.addEventListener(el, 'keypress', e => {\n                        if (e.keyCode === 13) {\n                            const key = e.currentTarget.dataset.componentKey;\n                            this.focusOnComponent(key);\n                        }\n                    });\n                });\n            }\n            this.prepend(this.alert);\n        }\n        focusOnComponent(key) {\n            if (key) {\n                const component = this.getComponent(key);\n                if (component) {\n                    component.focus();\n                }\n            }\n        }\n        showErrors(error, triggerEvent) {\n            this.loading = false;\n            let errors = this.errors;\n            if (error) {\n                if (Array.isArray(error)) {\n                    errors = errors.concat(error);\n                } else {\n                    errors.push(error);\n                }\n            } else {\n                errors = super.errors;\n            }\n            errors = errors.concat(this.customErrors);\n            if (!errors.length) {\n                this.setAlert(false);\n                return;\n            }\n            errors.forEach(err => {\n                const {\n                    components = []\n                } = err;\n                if (err.component) {\n                    components.push(err.component);\n                }\n                if (err.path) {\n                    components.push(err.path);\n                }\n                components.forEach(path => {\n                    const component = this.getComponent(path, _.identity);\n                    const components = _.compact(Array.isArray(component) ? component : [component]);\n                    components.forEach(component => component.setCustomValidity(err.message, true));\n                });\n            });\n            const message = document.createDocumentFragment();\n            const p = this.ce('p');\n            this.setContent(p, this.t('error'));\n            const ul = this.ce('ul');\n            errors.forEach(err => {\n                if (err) {\n                    const createListItem = message => {\n                        const params = {\n                            ref: 'errorRef',\n                            tabIndex: 0,\n                            'aria-label': `${ message }. Click to navigate to the field with following error.`\n                        };\n                        const li = this.ce('li', params);\n                        this.setContent(li, message);\n                        if (err.component && err.component.key) {\n                            li.dataset.componentKey = err.component.key;\n                        }\n                        this.appendTo(li, ul);\n                    };\n                    if (err.messages && err.messages.length) {\n                        err.messages.forEach(({message}) => createListItem(`${ this.t(err.component.label) }. ${ message }`));\n                    } else if (err) {\n                        const message = _.isObject(err) ? err.message || '' : err;\n                        createListItem(message);\n                    }\n                }\n            });\n            p.appendChild(ul);\n            message.appendChild(p);\n            this.setAlert('danger', message);\n            if (triggerEvent) {\n                this.emit('error', errors);\n            }\n            return errors;\n        }\n        onSubmit(submission, saved) {\n            this.loading = false;\n            this.submitting = false;\n            this.setPristine(true);\n            this.setValue(utils.fastCloneDeep(submission), {\n                noValidate: true,\n                noCheck: true\n            });\n            this.setAlert('success', `<p>${ this.t('complete') }</p>`);\n            this.emit('submit', submission);\n            if (saved) {\n                this.emit('submitDone', submission);\n            }\n            return submission;\n        }\n        onSubmissionError(error) {\n            if (error) {\n                if (typeof error === 'string') {\n                    error = { message: error };\n                }\n                if ('details' in error) {\n                    error = error.details;\n                }\n            }\n            this.submitting = false;\n            this.setPristine(false);\n            this.emit('submitError', error);\n            if (error && error.silent) {\n                this.emit('change', { isValid: true });\n                return false;\n            }\n            return this.showErrors(error, true);\n        }\n        onChange(flags, changed, modified) {\n            flags = flags || {};\n            let isChangeEventEmitted = false;\n            if (changed && changed.component) {\n                this.customErrors = this.customErrors.filter(err => err.component && err.component !== changed.component.key);\n            }\n            super.onChange(flags, true);\n            const value = _.clone(this.submission);\n            flags.changed = value.changed = changed;\n            if (modified && this.pristine) {\n                this.pristine = false;\n            }\n            value.isValid = this.checkData(value.data, flags);\n            this.loading = false;\n            if (this.submitted) {\n                this.showErrors();\n            }\n            if (modified && this.options.saveDraft) {\n                this.triggerSaveDraft();\n            }\n            if (!flags || !flags.noEmit) {\n                this.emit('change', value, flags);\n                isChangeEventEmitted = true;\n            }\n            if (isChangeEventEmitted && !this.initialized) {\n                this.emit('initialized');\n                this.initialized = true;\n            }\n        }\n        checkData(data, flags = {}) {\n            const valid = super.checkData(data, flags);\n            if ((_.isEmpty(flags) || flags.noValidate) && this.submitted) {\n                this.showErrors();\n            }\n            return valid;\n        }\n        deleteSubmission() {\n            return this.formio.deleteSubmission().then(() => {\n                this.emit('submissionDeleted', this.submission);\n                this.resetValue();\n            });\n        }\n        cancel(noconfirm) {\n            const shouldReset = this.hook('beforeCancel', true);\n            if (shouldReset && (noconfirm || confirm('Are you sure you want to cancel?'))) {\n                this.resetValue();\n                return true;\n            } else {\n                return false;\n            }\n        }\n        submitForm(options = {}) {\n            return new NativePromise((resolve, reject) => {\n                if (this.options.readOnly) {\n                    return resolve({\n                        submission: this.submission,\n                        saved: false\n                    });\n                }\n                const submission = utils.fastCloneDeep(this.submission || {});\n                submission.metadata = submission.metadata || {};\n                _.defaults(submission.metadata, {\n                    timezone: _.get(this, '_submission.metadata.timezone', utils.currentTimezone()),\n                    offset: parseInt(_.get(this, '_submission.metadata.offset', moment().utcOffset()), 10),\n                    referrer: document.referrer,\n                    browserName: navigator.appName,\n                    userAgent: navigator.userAgent,\n                    pathName: window.location.pathname,\n                    onLine: navigator.onLine\n                });\n                submission.state = options.state || 'submitted';\n                const isDraft = submission.state === 'draft';\n                this.hook('beforeSubmit', {\n                    ...submission,\n                    component: options.component\n                }, err => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    if (!isDraft && !submission.data) {\n                        return reject('Invalid Submission');\n                    }\n                    if (!isDraft && !this.checkValidity(submission.data, true, submission.data)) {\n                        return reject();\n                    }\n                    this.everyComponent(comp => {\n                        const {persistent} = comp.component;\n                        if (persistent === 'client-only') {\n                            _.unset(submission.data, comp.path);\n                        }\n                    });\n                    this.hook('customValidation', {\n                        ...submission,\n                        component: options.component\n                    }, err => {\n                        if (err) {\n                            if (typeof err === 'string') {\n                                err = { message: err };\n                            }\n                            err = Array.isArray(err) ? err : [err];\n                            this.customErrors = err;\n                            return reject();\n                        }\n                        this.loading = true;\n                        if (this._form && this._form.action) {\n                            const method = submission.data._id && this._form.action.includes(submission.data._id) ? 'PUT' : 'POST';\n                            return Formio.makeStaticRequest(this._form.action, method, submission, this.formio ? this.formio.options : {}).then(result => resolve({\n                                submission: result,\n                                saved: true\n                            })).catch(reject);\n                        }\n                        const submitFormio = this.formio;\n                        if (this.nosubmit || !submitFormio) {\n                            return resolve({\n                                submission,\n                                saved: false\n                            });\n                        }\n                        const submitMethod = submitFormio.actionUrl ? 'saveAction' : 'saveSubmission';\n                        submitFormio[submitMethod](submission).then(result => resolve({\n                            submission: result,\n                            saved: true\n                        })).catch(reject);\n                    });\n                });\n            });\n        }\n        executeSubmit(options) {\n            this.submitted = true;\n            this.submitting = true;\n            return this.submitForm(options).then(({submission, saved}) => this.onSubmit(submission, saved)).catch(err => NativePromise.reject(this.onSubmissionError(err)));\n        }\n        submit(before, options) {\n            if (!before) {\n                return this.beforeSubmit(options).then(() => this.executeSubmit(options));\n            } else {\n                return this.executeSubmit(options);\n            }\n        }\n        submitUrl(URL, headers) {\n            if (!URL) {\n                return console.warn('Missing URL argument');\n            }\n            const submission = this.submission || {};\n            const API_URL = URL;\n            const settings = {\n                method: 'POST',\n                headers: {}\n            };\n            if (headers && headers.length > 0) {\n                headers.map(e => {\n                    if (e.header !== '' && e.value !== '') {\n                        settings.headers[e.header] = this.interpolate(e.value, submission);\n                    }\n                });\n            }\n            if (API_URL && settings) {\n                try {\n                    Formio.makeStaticRequest(API_URL, settings.method, submission, { headers: settings.headers }).then(() => {\n                        this.emit('requestDone');\n                        this.setAlert('success', '<p> Success </p>');\n                    });\n                } catch (e) {\n                    this.showErrors(`${ e.statusText } ${ e.status }`);\n                    this.emit('error', `${ e.statusText } ${ e.status }`);\n                    console.error(`${ e.statusText } ${ e.status }`);\n                }\n            } else {\n                this.emit('error', 'You should add a URL to this button.');\n                this.setAlert('warning', 'You should add a URL to this button.');\n                return console.warn('You should add a URL to this button.');\n            }\n        }\n        triggerRecaptcha() {\n            if (!this || !this.components) {\n                return;\n            }\n            const recaptchaComponent = this.components.find(component => {\n                return component.component.type === 'recaptcha' && component.component.eventType === 'formLoad';\n            });\n            if (recaptchaComponent) {\n                recaptchaComponent.verify(`${ this.form.name ? this.form.name : 'form' }Load`);\n            }\n        }\n        set nosubmit(value) {\n            this._nosubmit = !!value;\n            this.emit('nosubmit', this._nosubmit);\n        }\n        get nosubmit() {\n            return this._nosubmit || false;\n        }\n    };\n    Webform.setBaseUrl = Formio.setBaseUrl;\n    Webform.setApiUrl = Formio.setApiUrl;\n    Webform.setAppUrl = Formio.setAppUrl;\n\n\n    return Webform;\n});"]}