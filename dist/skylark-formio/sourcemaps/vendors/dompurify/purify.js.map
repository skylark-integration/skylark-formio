{"version":3,"sources":["vendors/dompurify/purify.js"],"names":["define","hasOwnProperty","Object","setPrototypeOf","isFrozen","objectKeys","keys","freeze","seal","create","_ref","Reflect","apply","construct","fun","thisValue","args","x","Func","Function","prototype","bind","concat","arr","Array","isArray","i","arr2","length","from","_toConsumableArray","arrayForEach","unapply","forEach","arrayIndexOf","indexOf","arrayJoin","join","arrayPop","pop","arrayPush","push","arraySlice","slice","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","stringTrim","trim","regExpTest","RegExp","test","regExpCreate","unconstruct","typeErrorCreate","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","l","element","lcElement","clone","object","newObject","property","html","svg","svgFilters","mathMl","text","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","obj","constructor","_toConsumableArray$1","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","_","console","warn","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","removeTitle","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","documentMode","hooks","createHTMLDocument","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","_forceRemove","node","parentNode","removeChild","outerHTML","_removeAttribute","name","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","body","firstElementChild","insertBefore","createTextNode","childNodes","call","querySelector","innerHTML","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isNode","nodeName","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","elm","textContent","attributes","setAttribute","namespaceURI","tagName","allowedTags","querySelectorAll","insertAdjacentHTML","htmlToInsert","cloneNode","_isValidAttribute","lcTag","lcName","value","_sanitizeAttributes","attr","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","id","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks"],"mappings":"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","file":"../../../vendors/dompurify/purify.js","sourcesContent":["define([],function(){\r\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\n  var hasOwnProperty = Object.hasOwnProperty,\r\n      setPrototypeOf = Object.setPrototypeOf,\r\n      isFrozen = Object.isFrozen,\r\n      objectKeys = Object.keys;\r\n  var freeze = Object.freeze,\r\n      seal = Object.seal,\r\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\r\n\r\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\r\n      apply = _ref.apply,\r\n      construct = _ref.construct;\r\n\r\n  if (!apply) {\r\n    apply = function apply(fun, thisValue, args) {\r\n      return fun.apply(thisValue, args);\r\n    };\r\n  }\r\n\r\n  if (!freeze) {\r\n    freeze = function freeze(x) {\r\n      return x;\r\n    };\r\n  }\r\n\r\n  if (!seal) {\r\n    seal = function seal(x) {\r\n      return x;\r\n    };\r\n  }\r\n\r\n  if (!construct) {\r\n    construct = function construct(Func, args) {\r\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\r\n    };\r\n  }\r\n\r\n  var arrayForEach = unapply(Array.prototype.forEach);\r\n  var arrayIndexOf = unapply(Array.prototype.indexOf);\r\n  var arrayJoin = unapply(Array.prototype.join);\r\n  var arrayPop = unapply(Array.prototype.pop);\r\n  var arrayPush = unapply(Array.prototype.push);\r\n  var arraySlice = unapply(Array.prototype.slice);\r\n\r\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\r\n  var stringMatch = unapply(String.prototype.match);\r\n  var stringReplace = unapply(String.prototype.replace);\r\n  var stringIndexOf = unapply(String.prototype.indexOf);\r\n  var stringTrim = unapply(String.prototype.trim);\r\n\r\n  var regExpTest = unapply(RegExp.prototype.test);\r\n  var regExpCreate = unconstruct(RegExp);\r\n\r\n  var typeErrorCreate = unconstruct(TypeError);\r\n\r\n  function unapply(func) {\r\n    return function (thisArg) {\r\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        args[_key - 1] = arguments[_key];\r\n      }\r\n\r\n      return apply(func, thisArg, args);\r\n    };\r\n  }\r\n\r\n  function unconstruct(func) {\r\n    return function () {\r\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      return construct(func, args);\r\n    };\r\n  }\r\n\r\n  /* Add properties to a lookup table */\r\n  function addToSet(set, array) {\r\n    if (setPrototypeOf) {\r\n      // Make 'in' and truthy checks like Boolean(set.constructor)\r\n      // independent of any properties defined on Object.prototype.\r\n      // Prevent prototype setters from intercepting set as a this value.\r\n      setPrototypeOf(set, null);\r\n    }\r\n\r\n    var l = array.length;\r\n    while (l--) {\r\n      var element = array[l];\r\n      if (typeof element === 'string') {\r\n        var lcElement = stringToLowerCase(element);\r\n        if (lcElement !== element) {\r\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\r\n          if (!isFrozen(array)) {\r\n            array[l] = lcElement;\r\n          }\r\n\r\n          element = lcElement;\r\n        }\r\n      }\r\n\r\n      set[element] = true;\r\n    }\r\n\r\n    return set;\r\n  }\r\n\r\n  /* Shallow clone an object */\r\n  function clone(object) {\r\n    var newObject = create(null);\r\n\r\n    var property = void 0;\r\n    for (property in object) {\r\n      if (apply(hasOwnProperty, object, [property])) {\r\n        newObject[property] = object[property];\r\n      }\r\n    }\r\n\r\n    return newObject;\r\n  }\r\n\r\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\r\n\r\n  // SVG\r\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\r\n\r\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\r\n\r\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\r\n\r\n  var text = freeze(['#text']);\r\n\r\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\r\n\r\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\r\n\r\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\r\n\r\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\r\n\r\n  // eslint-disable-next-line unicorn/better-regex\r\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\r\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\r\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\r\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\r\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\r\n  );\r\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\r\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\r\n  );\r\n\r\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\n  var getGlobal = function getGlobal() {\r\n    return typeof window === 'undefined' ? null : window;\r\n  };\r\n\r\n  /**\r\n   * Creates a no-op policy for internal use only.\r\n   * Don't export this function outside this module!\r\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\r\n   * @param {Document} document The document object (to determine policy name suffix)\r\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\r\n   * are not supported).\r\n   */\r\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\r\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\r\n      return null;\r\n    }\r\n\r\n    // Allow the callers to control the unique policy name\r\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\r\n    // Policy creation with duplicate names throws in Trusted Types.\r\n    var suffix = null;\r\n    var ATTR_NAME = 'data-tt-policy-suffix';\r\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\r\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\r\n    }\r\n\r\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\r\n\r\n    try {\r\n      return trustedTypes.createPolicy(policyName, {\r\n        createHTML: function createHTML(html$$1) {\r\n          return html$$1;\r\n        }\r\n      });\r\n    } catch (_) {\r\n      // Policy creation failed (most likely another DOMPurify script has\r\n      // already run). Skip creating the policy, as this will only cause errors\r\n      // if TT are enforced.\r\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  function createDOMPurify() {\r\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\r\n\r\n    var DOMPurify = function DOMPurify(root) {\r\n      return createDOMPurify(root);\r\n    };\r\n\r\n    /**\r\n     * Version label, exposed for easier checks\r\n     * if DOMPurify is up to date or not\r\n     */\r\n    DOMPurify.version = '2.0.16';\r\n\r\n    /**\r\n     * Array of elements that DOMPurify removed during sanitation.\r\n     * Empty if nothing was removed.\r\n     */\r\n    DOMPurify.removed = [];\r\n\r\n    if (!window || !window.document || window.document.nodeType !== 9) {\r\n      // Not running in a browser, provide a factory function\r\n      // so that you can pass your own Window\r\n      DOMPurify.isSupported = false;\r\n\r\n      return DOMPurify;\r\n    }\r\n\r\n    var originalDocument = window.document;\r\n    var removeTitle = false;\r\n\r\n    var document = window.document;\r\n    var DocumentFragment = window.DocumentFragment,\r\n        HTMLTemplateElement = window.HTMLTemplateElement,\r\n        Node = window.Node,\r\n        NodeFilter = window.NodeFilter,\r\n        _window$NamedNodeMap = window.NamedNodeMap,\r\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\r\n        Text = window.Text,\r\n        Comment = window.Comment,\r\n        DOMParser = window.DOMParser,\r\n        trustedTypes = window.trustedTypes;\r\n\r\n    // As per issue #47, the web-components registry is inherited by a\r\n    // new document created via createHTMLDocument. As per the spec\r\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\r\n    // a new empty registry is used when creating a template contents owner\r\n    // document, so we use that as our parent document to ensure nothing\r\n    // is inherited.\r\n\r\n    if (typeof HTMLTemplateElement === 'function') {\r\n      var template = document.createElement('template');\r\n      if (template.content && template.content.ownerDocument) {\r\n        document = template.content.ownerDocument;\r\n      }\r\n    }\r\n\r\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\r\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\r\n\r\n    var _document = document,\r\n        implementation = _document.implementation,\r\n        createNodeIterator = _document.createNodeIterator,\r\n        getElementsByTagName = _document.getElementsByTagName,\r\n        createDocumentFragment = _document.createDocumentFragment;\r\n    var importNode = originalDocument.importNode;\r\n\r\n\r\n    var documentMode = {};\r\n    try {\r\n      documentMode = clone(document).documentMode ? document.documentMode : {};\r\n    } catch (_) {}\r\n\r\n    var hooks = {};\r\n\r\n    /**\r\n     * Expose whether this browser supports running the full DOMPurify.\r\n     */\r\n    DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\r\n\r\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\r\n        ERB_EXPR$$1 = ERB_EXPR,\r\n        DATA_ATTR$$1 = DATA_ATTR,\r\n        ARIA_ATTR$$1 = ARIA_ATTR,\r\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\r\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\r\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\r\n\r\n    /**\r\n     * We consider the elements and attributes below to be safe. Ideally\r\n     * don't add any new ones but feel free to remove unwanted ones.\r\n     */\r\n\r\n    /* allowed element names */\r\n\r\n    var ALLOWED_TAGS = null;\r\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\r\n\r\n    /* Allowed attribute names */\r\n    var ALLOWED_ATTR = null;\r\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\r\n\r\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\r\n    var FORBID_TAGS = null;\r\n\r\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\r\n    var FORBID_ATTR = null;\r\n\r\n    /* Decide if ARIA attributes are okay */\r\n    var ALLOW_ARIA_ATTR = true;\r\n\r\n    /* Decide if custom data attributes are okay */\r\n    var ALLOW_DATA_ATTR = true;\r\n\r\n    /* Decide if unknown protocols are okay */\r\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\r\n\r\n    /* Output should be safe for jQuery's $() factory? */\r\n    var SAFE_FOR_JQUERY = false;\r\n\r\n    /* Output should be safe for common template engines.\r\n     * This means, DOMPurify removes data attributes, mustaches and ERB\r\n     */\r\n    var SAFE_FOR_TEMPLATES = false;\r\n\r\n    /* Decide if document with <html>... should be returned */\r\n    var WHOLE_DOCUMENT = false;\r\n\r\n    /* Track whether config is already set on this instance of DOMPurify. */\r\n    var SET_CONFIG = false;\r\n\r\n    /* Decide if all elements (e.g. style, script) must be children of\r\n     * document.body. By default, browsers might move them to document.head */\r\n    var FORCE_BODY = false;\r\n\r\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\r\n     * string (or a TrustedHTML object if Trusted Types are supported).\r\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\r\n     */\r\n    var RETURN_DOM = false;\r\n\r\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\r\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\r\n    var RETURN_DOM_FRAGMENT = false;\r\n\r\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\r\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\r\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\r\n     * DOMPurify. */\r\n    var RETURN_DOM_IMPORT = false;\r\n\r\n    /* Try to return a Trusted Type object instead of a string, return a string in\r\n     * case Trusted Types are not supported  */\r\n    var RETURN_TRUSTED_TYPE = false;\r\n\r\n    /* Output should be free from DOM clobbering attacks? */\r\n    var SANITIZE_DOM = true;\r\n\r\n    /* Keep element content when removing element? */\r\n    var KEEP_CONTENT = true;\r\n\r\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\r\n     * of importing it into a new Document and returning a sanitized copy */\r\n    var IN_PLACE = false;\r\n\r\n    /* Allow usage of profiles like html, svg and mathMl */\r\n    var USE_PROFILES = {};\r\n\r\n    /* Tags to ignore content of when KEEP_CONTENT is true */\r\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\r\n\r\n    /* Tags that are safe for data: URIs */\r\n    var DATA_URI_TAGS = null;\r\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\r\n\r\n    /* Attributes safe for values like \"javascript:\" */\r\n    var URI_SAFE_ATTRIBUTES = null;\r\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\r\n\r\n    /* Keep a reference to config to pass to hooks */\r\n    var CONFIG = null;\r\n\r\n    /* Ideally, do not touch anything below this line */\r\n    /* ______________________________________________ */\r\n\r\n    var formElement = document.createElement('form');\r\n\r\n    /**\r\n     * _parseConfig\r\n     *\r\n     * @param  {Object} cfg optional config literal\r\n     */\r\n    // eslint-disable-next-line complexity\r\n    var _parseConfig = function _parseConfig(cfg) {\r\n      if (CONFIG && CONFIG === cfg) {\r\n        return;\r\n      }\r\n\r\n      /* Shield configuration object from tampering */\r\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\r\n        cfg = {};\r\n      }\r\n\r\n      /* Shield configuration object from prototype pollution */\r\n      cfg = clone(cfg);\r\n\r\n      /* Set configuration parameters */\r\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\r\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\r\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\r\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\r\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\r\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\r\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\r\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\r\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\r\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\r\n      SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\r\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\r\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\r\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\r\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\r\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\r\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\r\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\r\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\r\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\r\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\r\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\r\n      if (SAFE_FOR_TEMPLATES) {\r\n        ALLOW_DATA_ATTR = false;\r\n      }\r\n\r\n      if (RETURN_DOM_FRAGMENT) {\r\n        RETURN_DOM = true;\r\n      }\r\n\r\n      /* Parse profile info */\r\n      if (USE_PROFILES) {\r\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\r\n        ALLOWED_ATTR = [];\r\n        if (USE_PROFILES.html === true) {\r\n          addToSet(ALLOWED_TAGS, html);\r\n          addToSet(ALLOWED_ATTR, html$1);\r\n        }\r\n\r\n        if (USE_PROFILES.svg === true) {\r\n          addToSet(ALLOWED_TAGS, svg);\r\n          addToSet(ALLOWED_ATTR, svg$1);\r\n          addToSet(ALLOWED_ATTR, xml);\r\n        }\r\n\r\n        if (USE_PROFILES.svgFilters === true) {\r\n          addToSet(ALLOWED_TAGS, svgFilters);\r\n          addToSet(ALLOWED_ATTR, svg$1);\r\n          addToSet(ALLOWED_ATTR, xml);\r\n        }\r\n\r\n        if (USE_PROFILES.mathMl === true) {\r\n          addToSet(ALLOWED_TAGS, mathMl);\r\n          addToSet(ALLOWED_ATTR, mathMl$1);\r\n          addToSet(ALLOWED_ATTR, xml);\r\n        }\r\n      }\r\n\r\n      /* Merge configuration parameters */\r\n      if (cfg.ADD_TAGS) {\r\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\r\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\r\n        }\r\n\r\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\r\n      }\r\n\r\n      if (cfg.ADD_ATTR) {\r\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\r\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\r\n        }\r\n\r\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\r\n      }\r\n\r\n      if (cfg.ADD_URI_SAFE_ATTR) {\r\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\r\n      }\r\n\r\n      /* Add #text in case KEEP_CONTENT is set to true */\r\n      if (KEEP_CONTENT) {\r\n        ALLOWED_TAGS['#text'] = true;\r\n      }\r\n\r\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\r\n      if (WHOLE_DOCUMENT) {\r\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\r\n      }\r\n\r\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\r\n      if (ALLOWED_TAGS.table) {\r\n        addToSet(ALLOWED_TAGS, ['tbody']);\r\n        delete FORBID_TAGS.tbody;\r\n      }\r\n\r\n      // Prevent further manipulation of configuration.\r\n      // Not available in IE8, Safari 5, etc.\r\n      if (freeze) {\r\n        freeze(cfg);\r\n      }\r\n\r\n      CONFIG = cfg;\r\n    };\r\n\r\n    /**\r\n     * _forceRemove\r\n     *\r\n     * @param  {Node} node a DOM node\r\n     */\r\n    var _forceRemove = function _forceRemove(node) {\r\n      arrayPush(DOMPurify.removed, { element: node });\r\n      try {\r\n        node.parentNode.removeChild(node);\r\n      } catch (_) {\r\n        node.outerHTML = emptyHTML;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * _removeAttribute\r\n     *\r\n     * @param  {String} name an Attribute name\r\n     * @param  {Node} node a DOM node\r\n     */\r\n    var _removeAttribute = function _removeAttribute(name, node) {\r\n      try {\r\n        arrayPush(DOMPurify.removed, {\r\n          attribute: node.getAttributeNode(name),\r\n          from: node\r\n        });\r\n      } catch (_) {\r\n        arrayPush(DOMPurify.removed, {\r\n          attribute: null,\r\n          from: node\r\n        });\r\n      }\r\n\r\n      node.removeAttribute(name);\r\n    };\r\n\r\n    /**\r\n     * _initDocument\r\n     *\r\n     * @param  {String} dirty a string of dirty markup\r\n     * @return {Document} a DOM, filled with the dirty markup\r\n     */\r\n    var _initDocument = function _initDocument(dirty) {\r\n      /* Create a HTML document */\r\n      var doc = void 0;\r\n      var leadingWhitespace = void 0;\r\n\r\n      if (FORCE_BODY) {\r\n        dirty = '<remove></remove>' + dirty;\r\n      } else {\r\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\r\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\r\n        leadingWhitespace = matches && matches[0];\r\n      }\r\n\r\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\r\n      /* Use the DOMParser API by default, fallback later if needs be */\r\n      try {\r\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\r\n      } catch (_) {}\r\n\r\n      /* Remove title to fix a mXSS bug in older MS Edge */\r\n      if (removeTitle) {\r\n        addToSet(FORBID_TAGS, ['title']);\r\n      }\r\n\r\n      /* Use createHTMLDocument in case DOMParser is not available */\r\n      if (!doc || !doc.documentElement) {\r\n        doc = implementation.createHTMLDocument('');\r\n        var _doc = doc,\r\n            body = _doc.body;\r\n\r\n        body.parentNode.removeChild(body.parentNode.firstElementChild);\r\n        body.outerHTML = dirtyPayload;\r\n      }\r\n\r\n      if (dirty && leadingWhitespace) {\r\n        doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\r\n      }\r\n\r\n      /* Work on whole document or just its body */\r\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\r\n    };\r\n\r\n    /* Here we test for a broken feature in Edge that might cause mXSS */\r\n    if (DOMPurify.isSupported) {\r\n      (function () {\r\n        try {\r\n          var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');\r\n          if (regExpTest(/<\\/title/, doc.querySelector('title').innerHTML)) {\r\n            removeTitle = true;\r\n          }\r\n        } catch (_) {}\r\n      })();\r\n    }\r\n\r\n    /**\r\n     * _createIterator\r\n     *\r\n     * @param  {Document} root document/fragment to create iterator for\r\n     * @return {Iterator} iterator instance\r\n     */\r\n    var _createIterator = function _createIterator(root) {\r\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\r\n        return NodeFilter.FILTER_ACCEPT;\r\n      }, false);\r\n    };\r\n\r\n    /**\r\n     * _isClobbered\r\n     *\r\n     * @param  {Node} elm element to check for clobbering attacks\r\n     * @return {Boolean} true if clobbered, false if safe\r\n     */\r\n    var _isClobbered = function _isClobbered(elm) {\r\n      if (elm instanceof Text || elm instanceof Comment) {\r\n        return false;\r\n      }\r\n\r\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string') {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * _isNode\r\n     *\r\n     * @param  {Node} obj object to check whether it's a DOM node\r\n     * @return {Boolean} true is object is a DOM node\r\n     */\r\n    var _isNode = function _isNode(object) {\r\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\r\n    };\r\n\r\n    /**\r\n     * _executeHook\r\n     * Execute user configurable hooks\r\n     *\r\n     * @param  {String} entryPoint  Name of the hook's entry point\r\n     * @param  {Node} currentNode node to work on with the hook\r\n     * @param  {Object} data additional hook parameters\r\n     */\r\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\r\n      if (!hooks[entryPoint]) {\r\n        return;\r\n      }\r\n\r\n      arrayForEach(hooks[entryPoint], function (hook) {\r\n        hook.call(DOMPurify, currentNode, data, CONFIG);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * _sanitizeElements\r\n     *\r\n     * @protect nodeName\r\n     * @protect textContent\r\n     * @protect removeChild\r\n     *\r\n     * @param   {Node} currentNode to check for permission to exist\r\n     * @return  {Boolean} true if node was killed, false if left alive\r\n     */\r\n    // eslint-disable-next-line complexity\r\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\r\n      var content = void 0;\r\n\r\n      /* Execute a hook if present */\r\n      _executeHook('beforeSanitizeElements', currentNode, null);\r\n\r\n      /* Check if element is clobbered or can clobber */\r\n      if (_isClobbered(currentNode)) {\r\n        _forceRemove(currentNode);\r\n        return true;\r\n      }\r\n\r\n      /* Check if tagname contains Unicode */\r\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\r\n        _forceRemove(currentNode);\r\n        return true;\r\n      }\r\n\r\n      /* Now let's check the element's type and name */\r\n      var tagName = stringToLowerCase(currentNode.nodeName);\r\n\r\n      /* Execute a hook if present */\r\n      _executeHook('uponSanitizeElement', currentNode, {\r\n        tagName: tagName,\r\n        allowedTags: ALLOWED_TAGS\r\n      });\r\n\r\n      /* Take care of an mXSS pattern using p, br inside svg, math */\r\n      if ((tagName === 'svg' || tagName === 'math') && currentNode.querySelectorAll('p, br, form').length !== 0) {\r\n        _forceRemove(currentNode);\r\n        return true;\r\n      }\r\n\r\n      /* Remove element if anything forbids its presence */\r\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\r\n        /* Keep content except for bad-listed elements */\r\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\r\n          try {\r\n            var htmlToInsert = currentNode.innerHTML;\r\n            currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\r\n          } catch (_) {}\r\n        }\r\n\r\n        _forceRemove(currentNode);\r\n        return true;\r\n      }\r\n\r\n      /* Remove in case a noscript/noembed XSS is suspected */\r\n      if (tagName === 'noscript' && regExpTest(/<\\/noscript/i, currentNode.innerHTML)) {\r\n        _forceRemove(currentNode);\r\n        return true;\r\n      }\r\n\r\n      if (tagName === 'noembed' && regExpTest(/<\\/noembed/i, currentNode.innerHTML)) {\r\n        _forceRemove(currentNode);\r\n        return true;\r\n      }\r\n\r\n      /* Convert markup to cover jQuery behavior */\r\n      if (SAFE_FOR_JQUERY && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/</g, currentNode.textContent)) {\r\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\r\n        if (currentNode.innerHTML) {\r\n          currentNode.innerHTML = stringReplace(currentNode.innerHTML, /</g, '&lt;');\r\n        } else {\r\n          currentNode.innerHTML = stringReplace(currentNode.textContent, /</g, '&lt;');\r\n        }\r\n      }\r\n\r\n      /* Sanitize element content to be template-safe */\r\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\r\n        /* Get the element's text content */\r\n        content = currentNode.textContent;\r\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\r\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\r\n        if (currentNode.textContent !== content) {\r\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\r\n          currentNode.textContent = content;\r\n        }\r\n      }\r\n\r\n      /* Execute a hook if present */\r\n      _executeHook('afterSanitizeElements', currentNode, null);\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * _isValidAttribute\r\n     *\r\n     * @param  {string} lcTag Lowercase tag name of containing element.\r\n     * @param  {string} lcName Lowercase attribute name.\r\n     * @param  {string} value Attribute value.\r\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\r\n     */\r\n    // eslint-disable-next-line complexity\r\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\r\n      /* Make sure attribute cannot clobber */\r\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\r\n        return false;\r\n      }\r\n\r\n      /* Allow valid data-* attributes: At least one character after \"-\"\r\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\r\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\r\n          We don't need to check the value; it's always URI safe. */\r\n      if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\r\n        return false;\r\n\r\n        /* Check value is safe. First, is attr inert? If so, is safe */\r\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    /**\r\n     * _sanitizeAttributes\r\n     *\r\n     * @protect attributes\r\n     * @protect nodeName\r\n     * @protect removeAttribute\r\n     * @protect setAttribute\r\n     *\r\n     * @param  {Node} currentNode to sanitize\r\n     */\r\n    // eslint-disable-next-line complexity\r\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\r\n      var attr = void 0;\r\n      var value = void 0;\r\n      var lcName = void 0;\r\n      var idAttr = void 0;\r\n      var l = void 0;\r\n      /* Execute a hook if present */\r\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\r\n\r\n      var attributes = currentNode.attributes;\r\n\r\n      /* Check if we have attributes; if not we might have a text node */\r\n\r\n      if (!attributes) {\r\n        return;\r\n      }\r\n\r\n      var hookEvent = {\r\n        attrName: '',\r\n        attrValue: '',\r\n        keepAttr: true,\r\n        allowedAttributes: ALLOWED_ATTR\r\n      };\r\n      l = attributes.length;\r\n\r\n      /* Go backwards over all attributes; safely remove bad ones */\r\n      while (l--) {\r\n        attr = attributes[l];\r\n        var _attr = attr,\r\n            name = _attr.name,\r\n            namespaceURI = _attr.namespaceURI;\r\n\r\n        value = stringTrim(attr.value);\r\n        lcName = stringToLowerCase(name);\r\n\r\n        /* Execute a hook if present */\r\n        hookEvent.attrName = lcName;\r\n        hookEvent.attrValue = value;\r\n        hookEvent.keepAttr = true;\r\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\r\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\r\n        value = hookEvent.attrValue;\r\n        /* Did the hooks approve of the attribute? */\r\n        if (hookEvent.forceKeepAttr) {\r\n          continue;\r\n        }\r\n\r\n        /* Remove attribute */\r\n        // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\r\n        // remove a \"name\" attribute from an <img> tag that has an \"id\"\r\n        // attribute at the time.\r\n        if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\r\n          idAttr = attributes.id;\r\n          attributes = arraySlice(attributes, []);\r\n          _removeAttribute('id', currentNode);\r\n          _removeAttribute(name, currentNode);\r\n          if (arrayIndexOf(attributes, idAttr) > l) {\r\n            currentNode.setAttribute('id', idAttr.value);\r\n          }\r\n        } else if (\r\n        // This works around a bug in Safari, where input[type=file]\r\n        // cannot be dynamically set after type has been removed\r\n        currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && hookEvent.keepAttr && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\r\n          continue;\r\n        } else {\r\n          // This avoids a crash in Safari v9.0 with double-ids.\r\n          // The trick is to first set the id to be empty and then to\r\n          // remove the attribute\r\n          if (name === 'id') {\r\n            currentNode.setAttribute(name, '');\r\n          }\r\n\r\n          _removeAttribute(name, currentNode);\r\n        }\r\n\r\n        /* Did the hooks approve of the attribute? */\r\n        if (!hookEvent.keepAttr) {\r\n          continue;\r\n        }\r\n\r\n        /* Work around a security issue in jQuery 3.0 */\r\n        if (SAFE_FOR_JQUERY && regExpTest(/\\/>/i, value)) {\r\n          _removeAttribute(name, currentNode);\r\n          continue;\r\n        }\r\n\r\n        /* Take care of an mXSS pattern using namespace switches */\r\n        if (regExpTest(/svg|math/i, currentNode.namespaceURI) && regExpTest(regExpCreate('</(' + arrayJoin(objectKeys(FORBID_CONTENTS), '|') + ')', 'i'), value)) {\r\n          _removeAttribute(name, currentNode);\r\n          continue;\r\n        }\r\n\r\n        /* Sanitize attribute content to be template-safe */\r\n        if (SAFE_FOR_TEMPLATES) {\r\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\r\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\r\n        }\r\n\r\n        /* Is `value` valid for this attribute? */\r\n        var lcTag = currentNode.nodeName.toLowerCase();\r\n        if (!_isValidAttribute(lcTag, lcName, value)) {\r\n          continue;\r\n        }\r\n\r\n        /* Handle invalid data-* attribute set by try-catching it */\r\n        try {\r\n          if (namespaceURI) {\r\n            currentNode.setAttributeNS(namespaceURI, name, value);\r\n          } else {\r\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\r\n            currentNode.setAttribute(name, value);\r\n          }\r\n\r\n          arrayPop(DOMPurify.removed);\r\n        } catch (_) {}\r\n      }\r\n\r\n      /* Execute a hook if present */\r\n      _executeHook('afterSanitizeAttributes', currentNode, null);\r\n    };\r\n\r\n    /**\r\n     * _sanitizeShadowDOM\r\n     *\r\n     * @param  {DocumentFragment} fragment to iterate over recursively\r\n     */\r\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\r\n      var shadowNode = void 0;\r\n      var shadowIterator = _createIterator(fragment);\r\n\r\n      /* Execute a hook if present */\r\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\r\n\r\n      while (shadowNode = shadowIterator.nextNode()) {\r\n        /* Execute a hook if present */\r\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\r\n\r\n        /* Sanitize tags and elements */\r\n        if (_sanitizeElements(shadowNode)) {\r\n          continue;\r\n        }\r\n\r\n        /* Deep shadow DOM detected */\r\n        if (shadowNode.content instanceof DocumentFragment) {\r\n          _sanitizeShadowDOM(shadowNode.content);\r\n        }\r\n\r\n        /* Check attributes, sanitize if necessary */\r\n        _sanitizeAttributes(shadowNode);\r\n      }\r\n\r\n      /* Execute a hook if present */\r\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\r\n    };\r\n\r\n    /**\r\n     * Sanitize\r\n     * Public method providing core sanitation functionality\r\n     *\r\n     * @param {String|Node} dirty string or DOM node\r\n     * @param {Object} configuration object\r\n     */\r\n    // eslint-disable-next-line complexity\r\n    DOMPurify.sanitize = function (dirty, cfg) {\r\n      var body = void 0;\r\n      var importedNode = void 0;\r\n      var currentNode = void 0;\r\n      var oldNode = void 0;\r\n      var returnNode = void 0;\r\n      /* Make sure we have a string to sanitize.\r\n        DO NOT return early, as this will return the wrong type if\r\n        the user has requested a DOM object rather than a string */\r\n      if (!dirty) {\r\n        dirty = '<!-->';\r\n      }\r\n\r\n      /* Stringify, in case dirty is an object */\r\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\r\n        // eslint-disable-next-line no-negated-condition\r\n        if (typeof dirty.toString !== 'function') {\r\n          throw typeErrorCreate('toString is not a function');\r\n        } else {\r\n          dirty = dirty.toString();\r\n          if (typeof dirty !== 'string') {\r\n            throw typeErrorCreate('dirty is not a string, aborting');\r\n          }\r\n        }\r\n      }\r\n\r\n      /* Check we can run. Otherwise fall back or ignore */\r\n      if (!DOMPurify.isSupported) {\r\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\r\n          if (typeof dirty === 'string') {\r\n            return window.toStaticHTML(dirty);\r\n          }\r\n\r\n          if (_isNode(dirty)) {\r\n            return window.toStaticHTML(dirty.outerHTML);\r\n          }\r\n        }\r\n\r\n        return dirty;\r\n      }\r\n\r\n      /* Assign config vars */\r\n      if (!SET_CONFIG) {\r\n        _parseConfig(cfg);\r\n      }\r\n\r\n      /* Clean up removed elements */\r\n      DOMPurify.removed = [];\r\n\r\n      /* Check if dirty is correctly typed for IN_PLACE */\r\n      if (typeof dirty === 'string') {\r\n        IN_PLACE = false;\r\n      }\r\n\r\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\r\n        /* If dirty is a DOM element, append to an empty document to avoid\r\n           elements being stripped by the parser */\r\n        body = _initDocument('<!-->');\r\n        importedNode = body.ownerDocument.importNode(dirty, true);\r\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\r\n          /* Node is already a body, use as is */\r\n          body = importedNode;\r\n        } else if (importedNode.nodeName === 'HTML') {\r\n          body = importedNode;\r\n        } else {\r\n          // eslint-disable-next-line unicorn/prefer-node-append\r\n          body.appendChild(importedNode);\r\n        }\r\n      } else {\r\n        /* Exit directly if we have nothing to do */\r\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\r\n        // eslint-disable-next-line unicorn/prefer-includes\r\n        dirty.indexOf('<') === -1) {\r\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\r\n        }\r\n\r\n        /* Initialize the document to work on */\r\n        body = _initDocument(dirty);\r\n\r\n        /* Check we have a DOM node from the data */\r\n        if (!body) {\r\n          return RETURN_DOM ? null : emptyHTML;\r\n        }\r\n      }\r\n\r\n      /* Remove first element node (ours) if FORCE_BODY is set */\r\n      if (body && FORCE_BODY) {\r\n        _forceRemove(body.firstChild);\r\n      }\r\n\r\n      /* Get node iterator */\r\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\r\n\r\n      /* Now start iterating over the created document */\r\n      while (currentNode = nodeIterator.nextNode()) {\r\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\r\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\r\n          continue;\r\n        }\r\n\r\n        /* Sanitize tags and elements */\r\n        if (_sanitizeElements(currentNode)) {\r\n          continue;\r\n        }\r\n\r\n        /* Shadow DOM detected, sanitize it */\r\n        if (currentNode.content instanceof DocumentFragment) {\r\n          _sanitizeShadowDOM(currentNode.content);\r\n        }\r\n\r\n        /* Check attributes, sanitize if necessary */\r\n        _sanitizeAttributes(currentNode);\r\n\r\n        oldNode = currentNode;\r\n      }\r\n\r\n      oldNode = null;\r\n\r\n      /* If we sanitized `dirty` in-place, return it. */\r\n      if (IN_PLACE) {\r\n        return dirty;\r\n      }\r\n\r\n      /* Return sanitized string or DOM */\r\n      if (RETURN_DOM) {\r\n        if (RETURN_DOM_FRAGMENT) {\r\n          returnNode = createDocumentFragment.call(body.ownerDocument);\r\n\r\n          while (body.firstChild) {\r\n            // eslint-disable-next-line unicorn/prefer-node-append\r\n            returnNode.appendChild(body.firstChild);\r\n          }\r\n        } else {\r\n          returnNode = body;\r\n        }\r\n\r\n        if (RETURN_DOM_IMPORT) {\r\n          /*\r\n            AdoptNode() is not used because internal state is not reset\r\n            (e.g. the past names map of a HTMLFormElement), this is safe\r\n            in theory but we would rather not risk another attack vector.\r\n            The state that is cloned by importNode() is explicitly defined\r\n            by the specs.\r\n          */\r\n          returnNode = importNode.call(originalDocument, returnNode, true);\r\n        }\r\n\r\n        return returnNode;\r\n      }\r\n\r\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\r\n\r\n      /* Sanitize final string template-safe */\r\n      if (SAFE_FOR_TEMPLATES) {\r\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\r\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\r\n      }\r\n\r\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\r\n    };\r\n\r\n    /**\r\n     * Public method to set the configuration once\r\n     * setConfig\r\n     *\r\n     * @param {Object} cfg configuration object\r\n     */\r\n    DOMPurify.setConfig = function (cfg) {\r\n      _parseConfig(cfg);\r\n      SET_CONFIG = true;\r\n    };\r\n\r\n    /**\r\n     * Public method to remove the configuration\r\n     * clearConfig\r\n     *\r\n     */\r\n    DOMPurify.clearConfig = function () {\r\n      CONFIG = null;\r\n      SET_CONFIG = false;\r\n    };\r\n\r\n    /**\r\n     * Public method to check if an attribute value is valid.\r\n     * Uses last set config, if any. Otherwise, uses config defaults.\r\n     * isValidAttribute\r\n     *\r\n     * @param  {string} tag Tag name of containing element.\r\n     * @param  {string} attr Attribute name.\r\n     * @param  {string} value Attribute value.\r\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\r\n     */\r\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\r\n      /* Initialize shared config vars if necessary. */\r\n      if (!CONFIG) {\r\n        _parseConfig({});\r\n      }\r\n\r\n      var lcTag = stringToLowerCase(tag);\r\n      var lcName = stringToLowerCase(attr);\r\n      return _isValidAttribute(lcTag, lcName, value);\r\n    };\r\n\r\n    /**\r\n     * AddHook\r\n     * Public method to add DOMPurify hooks\r\n     *\r\n     * @param {String} entryPoint entry point for the hook to add\r\n     * @param {Function} hookFunction function to execute\r\n     */\r\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\r\n      if (typeof hookFunction !== 'function') {\r\n        return;\r\n      }\r\n\r\n      hooks[entryPoint] = hooks[entryPoint] || [];\r\n      arrayPush(hooks[entryPoint], hookFunction);\r\n    };\r\n\r\n    /**\r\n     * RemoveHook\r\n     * Public method to remove a DOMPurify hook at a given entryPoint\r\n     * (pops it from the stack of hooks if more are present)\r\n     *\r\n     * @param {String} entryPoint entry point for the hook to remove\r\n     */\r\n    DOMPurify.removeHook = function (entryPoint) {\r\n      if (hooks[entryPoint]) {\r\n        arrayPop(hooks[entryPoint]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * RemoveHooks\r\n     * Public method to remove all DOMPurify hooks at a given entryPoint\r\n     *\r\n     * @param  {String} entryPoint entry point for the hooks to remove\r\n     */\r\n    DOMPurify.removeHooks = function (entryPoint) {\r\n      if (hooks[entryPoint]) {\r\n        hooks[entryPoint] = [];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * RemoveAllHooks\r\n     * Public method to remove all DOMPurify hooks\r\n     *\r\n     */\r\n    DOMPurify.removeAllHooks = function () {\r\n      hooks = {};\r\n    };\r\n\r\n    return DOMPurify;\r\n  }\r\n\r\n  var purify = createDOMPurify();\r\n\r\n  return purify;\r\n\r\n});\r\n"]}