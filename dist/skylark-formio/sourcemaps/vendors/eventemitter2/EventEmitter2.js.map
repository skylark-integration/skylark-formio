{"version":3,"sources":["vendors/eventemitter2/EventEmitter2.js"],"names":["define","hasOwnProperty","Object","isArray","Array","obj","prototype","toString","call","nextTickSupported","process","nextTick","symbolsSupported","Symbol","reflectSupported","Reflect","_setImmediate","setImmediate","setTimeout","ownKeys","arr","getOwnPropertyNames","push","apply","getOwnPropertySymbols","keys","init","this","_events","_conf","configure","conf","delimiter","undefined","maxListeners","_maxListeners","wildcard","newListener","_newListener","removeListener","_removeListener","verboseMemoryLeak","ignoreErrors","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","emitWarning","e","Error","name","emitter","console","error","trace","toArray","a","b","c","n","arguments","length","toObject","values","len","valuesCount","value","i","TargetObserver","target","options","on","off","_emitter","_target","_listeners","_listenersCount","addEventListener","removeEventListener","addListener","TypeError","_on","_off","_observers","resolveOptions","schema","reducers","allowUnknown","computedOptions","assign","option","reducer","reject","reason","constructorReducer","makeTypeReducer","types","message","join","firstType","secondType","v","kind","subscribe","event","localEvent","observer","listeners","handler","args","eventObj","data","original","emit","concat","_onNewListener","_event","_onRemoveListener","hasListeners","unsubscribe","events","clearRefs","index","findTargetIndex","splice","functionReducer","objectFunctionReducer","makeCancelablePromise","Promise","executor","isCancelable","callbacks","subscriptionClosed","timer","promise","resolve","onCancel","cleanup","clearTimeout","timeout","overload","Number","isFinite","_resolve","_reject","err","cancel","cb","observers","searchListenerTree","handlers","type","tree","typeLength","ns","l","j","dl","indexOf","slice","branch","xTree","xxTree","isolatedBranch","endReached","branches","currentType","nextType","**","recursivelyGarbageCollect","root","key","flag","Listener","listener","EventEmitter","EventEmitter2","listenTo","listen","isSingleReducer","split","stopListeningTo","matched","setMaxListeners","getMaxListeners","once","fn","_once","prependOnceListener","prepend","_many","many","ttl","prependMany","self","_origin","_all","containsSymbol","al","emitAsync","promises","all","prependListener","onAny","_onAny","prependAny","unshift","temp","returnValue","promisify","async","objectify","_listener","constructor","context","then","_async","warned","leafs","iLeaf","leaf","position","offAny","fns","removeAllListeners","allListeners","eventNames","nsAsArray","collectTreeEvents","asArray","branchName","path","isArrayPath","listenerCount","listenersAny","waitFor","filter","handleError","defineProperties","defaultMaxListeners","get","set","isNaN","enumerable","errorListener","eventListener","writable","configurable"],"mappings":"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","file":"../../../vendors/eventemitter2/EventEmitter2.js","sourcesContent":["/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\ndefine([],function() {\r\n  var hasOwnProperty= Object.hasOwnProperty;\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';\r\n  var symbolsSupported= typeof Symbol==='function';\r\n  var reflectSupported= typeof Reflect === 'object';\r\n  var setImmediateSupported= typeof setImmediate === 'function';\r\n  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;\r\n  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){\r\n    var arr= Object.getOwnPropertyNames(obj);\r\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\r\n    return arr;\r\n  }) : Object.keys;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n\r\n      if(conf.maxListeners!==undefined){\r\n          this._maxListeners= conf.maxListeners;\r\n      }\r\n\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this._newListener = conf.newListener);\r\n      conf.removeListener && (this._removeListener = conf.removeListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. ' + count + ' listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: ' + eventName + '.';\r\n    }\r\n\r\n    if(typeof process !== 'undefined' && process.emitWarning){\r\n      var e = new Error(errorMsg);\r\n      e.name = 'MaxListenersExceededWarning';\r\n      e.emitter = this;\r\n      e.count = count;\r\n      process.emitWarning(e);\r\n    } else {\r\n      console.error(errorMsg);\r\n\r\n      if (console.trace){\r\n        console.trace();\r\n      }\r\n    }\r\n  }\r\n\r\n  var toArray = function (a, b, c) {\r\n    var n = arguments.length;\r\n    switch (n) {\r\n      case 0:\r\n        return [];\r\n      case 1:\r\n        return [a];\r\n      case 2:\r\n        return [a, b];\r\n      case 3:\r\n        return [a, b, c];\r\n      default:\r\n        var arr = new Array(n);\r\n        while (n--) {\r\n          arr[n] = arguments[n];\r\n        }\r\n        return arr;\r\n    }\r\n  };\r\n\r\n  function toObject(keys, values) {\r\n    var obj = {};\r\n    var key;\r\n    var len = keys.length;\r\n    var valuesCount = values ? value.length : 0;\r\n    for (var i = 0; i < len; i++) {\r\n      key = keys[i];\r\n      obj[key] = i < valuesCount ? values[i] : undefined;\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  function TargetObserver(emitter, target, options) {\r\n    this._emitter = emitter;\r\n    this._target = target;\r\n    this._listeners = {};\r\n    this._listenersCount = 0;\r\n\r\n    var on, off;\r\n\r\n    if (options.on || options.off) {\r\n      on = options.on;\r\n      off = options.off;\r\n    }\r\n\r\n    if (target.addEventListener) {\r\n      on = target.addEventListener;\r\n      off = target.removeEventListener;\r\n    } else if (target.addListener) {\r\n      on = target.addListener;\r\n      off = target.removeListener;\r\n    } else if (target.on) {\r\n      on = target.on;\r\n      off = target.off;\r\n    }\r\n\r\n    if (!on && !off) {\r\n      throw Error('target does not implement any known event API');\r\n    }\r\n\r\n    if (typeof on !== 'function') {\r\n      throw TypeError('on method must be a function');\r\n    }\r\n\r\n    if (typeof off !== 'function') {\r\n      throw TypeError('off method must be a function');\r\n    }\r\n\r\n    this._on = on;\r\n    this._off = off;\r\n\r\n    var _observers= emitter._observers;\r\n    if(_observers){\r\n      _observers.push(this);\r\n    }else{\r\n      emitter._observers= [this];\r\n    }\r\n  }\r\n\r\n  Object.assign(TargetObserver.prototype, {\r\n    subscribe: function(event, localEvent, reducer){\r\n      var observer= this;\r\n      var target= this._target;\r\n      var emitter= this._emitter;\r\n      var listeners= this._listeners;\r\n      var handler= function(){\r\n        var args= toArray.apply(null, arguments);\r\n        var eventObj= {\r\n          data: args,\r\n          name: localEvent,\r\n          original: event\r\n        };\r\n        if(reducer){\r\n          var result= reducer.call(target, eventObj);\r\n          if(result!==false){\r\n            emitter.emit.apply(emitter, [eventObj.name].concat(args))\r\n          }\r\n          return;\r\n        }\r\n        emitter.emit.apply(emitter, [localEvent].concat(args));\r\n      };\r\n\r\n\r\n      if(listeners[event]){\r\n        throw Error('Event \\'' + event + '\\' is already listening');\r\n      }\r\n\r\n      this._listenersCount++;\r\n\r\n      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){\r\n\r\n        this._onNewListener = function (_event) {\r\n          if (_event === localEvent && listeners[event] === null) {\r\n            listeners[event] = handler;\r\n            observer._on.call(target, event, handler);\r\n          }\r\n        };\r\n\r\n        emitter.on('newListener', this._onNewListener);\r\n\r\n        this._onRemoveListener= function(_event){\r\n          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){\r\n            listeners[event]= null;\r\n            observer._off.call(target, event, handler);\r\n          }\r\n        };\r\n\r\n        listeners[event]= null;\r\n\r\n        emitter.on('removeListener', this._onRemoveListener);\r\n      }else{\r\n        listeners[event]= handler;\r\n        observer._on.call(target, event, handler);\r\n      }\r\n    },\r\n\r\n    unsubscribe: function(event){\r\n      var observer= this;\r\n      var listeners= this._listeners;\r\n      var emitter= this._emitter;\r\n      var handler;\r\n      var events;\r\n      var off= this._off;\r\n      var target= this._target;\r\n      var i;\r\n\r\n      if(event && typeof event!=='string'){\r\n        throw TypeError('event must be a string');\r\n      }\r\n\r\n      function clearRefs(){\r\n        if(observer._onNewListener){\r\n          emitter.off('newListener', observer._onNewListener);\r\n          emitter.off('removeListener', observer._onRemoveListener);\r\n          observer._onNewListener= null;\r\n          observer._onRemoveListener= null;\r\n        }\r\n        var index= findTargetIndex.call(emitter, observer);\r\n        emitter._observers.splice(index, 1);\r\n      }\r\n\r\n      if(event){\r\n        handler= listeners[event];\r\n        if(!handler) return;\r\n        off.call(target, event, handler);\r\n        delete listeners[event];\r\n        if(!--this._listenersCount){\r\n          clearRefs();\r\n        }\r\n      }else{\r\n        events= ownKeys(listeners);\r\n        i= events.length;\r\n        while(i-->0){\r\n          event= events[i];\r\n          off.call(target, event, listeners[event]);\r\n        }\r\n        this._listeners= {};\r\n        this._listenersCount= 0;\r\n        clearRefs();\r\n      }\r\n    }\r\n  });\r\n\r\n  function resolveOptions(options, schema, reducers, allowUnknown) {\r\n    var computedOptions = Object.assign({}, schema);\r\n\r\n    if (!options) return computedOptions;\r\n\r\n    if (typeof options !== 'object') {\r\n      throw TypeError('options must be an object')\r\n    }\r\n\r\n    var keys = Object.keys(options);\r\n    var length = keys.length;\r\n    var option, value;\r\n    var reducer;\r\n\r\n    function reject(reason) {\r\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''))\r\n    }\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      option = keys[i];\r\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\r\n        throw Error('Unknown \"' + option + '\" option');\r\n      }\r\n      value = options[option];\r\n      if (value !== undefined) {\r\n        reducer = reducers[option];\r\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\r\n      }\r\n    }\r\n    return computedOptions;\r\n  }\r\n\r\n  function constructorReducer(value, reject) {\r\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\r\n      reject('value must be a constructor');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  function makeTypeReducer(types) {\r\n    var message= 'value must be type of ' + types.join('|');\r\n    var len= types.length;\r\n    var firstType= types[0];\r\n    var secondType= types[1];\r\n\r\n    if (len === 1) {\r\n      return function (v, reject) {\r\n        if (typeof v === firstType) {\r\n          return v;\r\n        }\r\n        reject(message);\r\n      }\r\n    }\r\n\r\n    if (len === 2) {\r\n      return function (v, reject) {\r\n        var kind= typeof v;\r\n        if (kind === firstType || kind === secondType) return v;\r\n        reject(message);\r\n      }\r\n    }\r\n\r\n    return function (v, reject) {\r\n      var kind = typeof v;\r\n      var i = len;\r\n      while (i-- > 0) {\r\n        if (kind === types[i]) return v;\r\n      }\r\n      reject(message);\r\n    }\r\n  }\r\n\r\n  var functionReducer= makeTypeReducer(['function']);\r\n\r\n  var objectFunctionReducer= makeTypeReducer(['object', 'function']);\r\n\r\n  function makeCancelablePromise(Promise, executor, options) {\r\n    var isCancelable;\r\n    var callbacks;\r\n    var timer= 0;\r\n    var subscriptionClosed;\r\n\r\n    var promise = new Promise(function (resolve, reject, onCancel) {\r\n      options= resolveOptions(options, {\r\n        timeout: 0,\r\n        overload: false\r\n      }, {\r\n        timeout: function(value, reject){\r\n          value*= 1;\r\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\r\n            reject('timeout must be a positive number');\r\n          }\r\n          return value;\r\n        }\r\n      });\r\n\r\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\r\n\r\n      function cleanup() {\r\n        if (callbacks) {\r\n          callbacks = null;\r\n        }\r\n        if (timer) {\r\n          clearTimeout(timer);\r\n          timer = 0;\r\n        }\r\n      }\r\n\r\n      var _resolve= function(value){\r\n        cleanup();\r\n        resolve(value);\r\n      };\r\n\r\n      var _reject= function(err){\r\n        cleanup();\r\n        reject(err);\r\n      };\r\n\r\n      if (isCancelable) {\r\n        executor(_resolve, _reject, onCancel);\r\n      } else {\r\n        callbacks = [function(reason){\r\n          _reject(reason || Error('canceled'));\r\n        }];\r\n        executor(_resolve, _reject, function (cb) {\r\n          if (subscriptionClosed) {\r\n            throw Error('Unable to subscribe on cancel event asynchronously')\r\n          }\r\n          if (typeof cb !== 'function') {\r\n            throw TypeError('onCancel callback must be a function');\r\n          }\r\n          callbacks.push(cb);\r\n        });\r\n        subscriptionClosed= true;\r\n      }\r\n\r\n      if (options.timeout > 0) {\r\n        timer= setTimeout(function(){\r\n          var reason= Error('timeout');\r\n          timer= 0;\r\n          promise.cancel(reason);\r\n          reject(reason);\r\n        }, options.timeout);\r\n      }\r\n    });\r\n\r\n    if (!isCancelable) {\r\n      promise.cancel = function (reason) {\r\n        if (!callbacks) {\r\n          return;\r\n        }\r\n        var length = callbacks.length;\r\n        for (var i = 1; i < length; i++) {\r\n          callbacks[i](reason);\r\n        }\r\n        // internal callback to reject the promise\r\n        callbacks[0](reason);\r\n        callbacks = null;\r\n      };\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  function findTargetIndex(observer) {\r\n    var observers = this._observers;\r\n    if(!observers){\r\n      return -1;\r\n    }\r\n    var len = observers.length;\r\n    for (var i = 0; i < len; i++) {\r\n      if (observers[i]._target === observer) return i;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\r\n    if (!tree) {\r\n      return null;\r\n    }\r\n\r\n    if (i === 0) {\r\n      var kind = typeof type;\r\n      if (kind === 'string') {\r\n        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;\r\n        if ((n = type.indexOf(delimiter)) !== -1) {\r\n          ns = new Array(5);\r\n          do {\r\n            ns[l++] = type.slice(j, n);\r\n            j = n + dl;\r\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\r\n\r\n          ns[l++] = type.slice(j);\r\n          type = ns;\r\n          typeLength = l;\r\n        } else {\r\n          type = [type];\r\n          typeLength = 1;\r\n        }\r\n      } else if (kind === 'object') {\r\n        typeLength = type.length;\r\n      } else {\r\n        type = [type];\r\n        typeLength = 1;\r\n      }\r\n    }\r\n\r\n    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],\r\n        nextType = type[i + 1], branches, _listeners;\r\n\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        handlers && handlers.push.apply(handlers, tree._listeners);\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if (currentType === '*') {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      branches= ownKeys(tree);\r\n      n= branches.length;\r\n      while(n-->0){\r\n        branch= branches[n];\r\n        if (branch !== '_listeners') {\r\n          _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\r\n          if(_listeners){\r\n            if(listeners){\r\n              listeners.push.apply(listeners, _listeners);\r\n            }else{\r\n              listeners = _listeners;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return listeners;\r\n    } else if (currentType === '**') {\r\n      endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\r\n      if (endReached && tree._listeners) {\r\n        // The next element has a _listeners, add it to the handlers.\r\n        listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\r\n      }\r\n\r\n      branches= ownKeys(tree);\r\n      n= branches.length;\r\n      while(n-->0){\r\n        branch= branches[n];\r\n        if (branch !== '_listeners') {\r\n          if (branch === '*' || branch === '**') {\r\n            if (tree[branch]._listeners && !endReached) {\r\n              _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\r\n              if(_listeners){\r\n                if(listeners){\r\n                  listeners.push.apply(listeners, _listeners);\r\n                }else{\r\n                  listeners = _listeners;\r\n                }\r\n              }\r\n            }\r\n            _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\r\n          } else if (branch === nextType) {\r\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\r\n          } else {\r\n            // No match on this one, shift into the tree but not in the type array.\r\n            _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\r\n          }\r\n          if(_listeners){\r\n            if(listeners){\r\n              listeners.push.apply(listeners, _listeners);\r\n            }else{\r\n              listeners = _listeners;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return listeners;\r\n    }else if (tree[currentType]) {\r\n      listeners= searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\r\n    }\r\n\r\n      xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if (xxTree) {\r\n      if (i < typeLength) {\r\n        if (xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        branches= ownKeys(xxTree);\r\n        n= branches.length;\r\n        while(n-->0){\r\n          branch= branches[n];\r\n          if (branch !== '_listeners') {\r\n            if (branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\r\n            } else if (branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);\r\n            }\r\n          }\r\n        }\r\n      } else if (xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\r\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;\r\n\r\n    if(typeof type==='string') {\r\n      if ((i = type.indexOf(delimiter)) !== -1) {\r\n        ns = new Array(5);\r\n        do {\r\n          ns[len++] = type.slice(j, i);\r\n          j = i + dl;\r\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\r\n\r\n        ns[len++] = type.slice(j);\r\n      }else{\r\n        ns= [type];\r\n        len= 1;\r\n      }\r\n    }else{\r\n      ns= type;\r\n      len= type.length;\r\n    }\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    if (len > 1) {\r\n      for (i = 0; i + 1 < len; i++) {\r\n        if (ns[i] === '**' && ns[i + 1] === '**') {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    var tree = this.listenerTree, name;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      name = ns[i];\r\n\r\n      tree = tree[name] || (tree[name] = {});\r\n\r\n      if (i === len - 1) {\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        } else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n              !tree._listeners.warned &&\r\n              this._maxListeners > 0 &&\r\n              tree._listeners.length > this._maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function collectTreeEvents(tree, events, root, asArray){\r\n     var branches= ownKeys(tree);\r\n     var i= branches.length;\r\n     var branch, branchName, path;\r\n     var hasListeners= tree['_listeners'];\r\n     var isArrayPath;\r\n\r\n     while(i-->0){\r\n         branchName= branches[i];\r\n\r\n         branch= tree[branchName];\r\n\r\n         if(branchName==='_listeners'){\r\n             path= root;\r\n         }else {\r\n             path = root ? root.concat(branchName) : [branchName];\r\n         }\r\n\r\n         isArrayPath= asArray || typeof branchName==='symbol';\r\n\r\n         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));\r\n\r\n         if(typeof branch==='object'){\r\n             collectTreeEvents.call(this, branch, events, path, isArrayPath);\r\n         }\r\n     }\r\n\r\n     return events;\r\n  }\r\n\r\n  function recursivelyGarbageCollect(root) {\r\n    var keys = ownKeys(root);\r\n    var i= keys.length;\r\n    var obj, key, flag;\r\n    while(i-->0){\r\n      key = keys[i];\r\n      obj = root[key];\r\n\r\n      if(obj){\r\n          flag= true;\r\n          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){\r\n             delete root[key];\r\n          }\r\n      }\r\n    }\r\n\r\n    return flag;\r\n  }\r\n\r\n  function Listener(emitter, event, listener){\r\n    this.emitter= emitter;\r\n    this.event= event;\r\n    this.listener= listener;\r\n  }\r\n\r\n  Listener.prototype.off= function(){\r\n    this.emitter.off(this.event, this.listener);\r\n    return this;\r\n  };\r\n\r\n  function setupListener(event, listener, options){\r\n      if (options === true) {\r\n        promisify = true;\r\n      } else if (options === false) {\r\n        async = true;\r\n      } else {\r\n        if (!options || typeof options !== 'object') {\r\n          throw TypeError('options should be an object or true');\r\n        }\r\n        var async = options.async;\r\n        var promisify = options.promisify;\r\n        var nextTick = options.nextTick;\r\n        var objectify = options.objectify;\r\n      }\r\n\r\n      if (async || nextTick || promisify) {\r\n        var _listener = listener;\r\n        var _origin = listener._origin || listener;\r\n\r\n        if (nextTick && !nextTickSupported) {\r\n          throw Error('process.nextTick is not supported');\r\n        }\r\n\r\n        if (promisify === undefined) {\r\n          promisify = listener.constructor.name === 'AsyncFunction';\r\n        }\r\n\r\n        listener = function () {\r\n          var args = arguments;\r\n          var context = this;\r\n          var event = this.event;\r\n\r\n          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {\r\n            _setImmediate(resolve);\r\n          }).then(function () {\r\n            context.event = event;\r\n            return _listener.apply(context, args)\r\n          })) : (nextTick ? process.nextTick : _setImmediate)(function () {\r\n            context.event = event;\r\n            _listener.apply(context, args)\r\n          });\r\n        };\r\n\r\n        listener._async = true;\r\n        listener._origin = _origin;\r\n      }\r\n\r\n    return [listener, objectify? new Listener(this, event, listener): this];\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this._newListener = false;\r\n    this._removeListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  EventEmitter.prototype.listenTo= function(target, events, options){\r\n    if(typeof target!=='object'){\r\n      throw TypeError('target musts be an object');\r\n    }\r\n\r\n    var emitter= this;\r\n\r\n    options = resolveOptions(options, {\r\n      on: undefined,\r\n      off: undefined,\r\n      reducers: undefined\r\n    }, {\r\n      on: functionReducer,\r\n      off: functionReducer,\r\n      reducers: objectFunctionReducer\r\n    });\r\n\r\n    function listen(events){\r\n      if(typeof events!=='object'){\r\n        throw TypeError('events must be an object');\r\n      }\r\n\r\n      var reducers= options.reducers;\r\n      var index= findTargetIndex.call(emitter, target);\r\n      var observer;\r\n\r\n      if(index===-1){\r\n        observer= new TargetObserver(emitter, target, options);\r\n      }else{\r\n        observer= emitter._observers[index];\r\n      }\r\n\r\n      var keys= ownKeys(events);\r\n      var len= keys.length;\r\n      var event;\r\n      var isSingleReducer= typeof reducers==='function';\r\n\r\n      for(var i=0; i<len; i++){\r\n        event= keys[i];\r\n        observer.subscribe(\r\n            event,\r\n            events[event] || event,\r\n            isSingleReducer ? reducers : reducers && reducers[event]\r\n        );\r\n      }\r\n    }\r\n\r\n    isArray(events)?\r\n        listen(toObject(events)) :\r\n        (typeof events==='string'? listen(toObject(events.split(/\\s+/))): listen(events));\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\r\n    var observers = this._observers;\r\n\r\n    if(!observers){\r\n      return false;\r\n    }\r\n\r\n    var i = observers.length;\r\n    var observer;\r\n    var matched= false;\r\n\r\n    if(target && typeof target!=='object'){\r\n      throw TypeError('target should be an object');\r\n    }\r\n\r\n    while (i-- > 0) {\r\n      observer = observers[i];\r\n      if (!target || observer._target === target) {\r\n        observer.unsubscribe(event);\r\n        matched= true;\r\n      }\r\n    }\r\n\r\n    return matched;\r\n  };\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.getMaxListeners = function() {\r\n    return this._maxListeners;\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n  EventEmitter.prototype.once = function(event, fn, options) {\r\n    return this._once(event, fn, false, options);\r\n  };\r\n\r\n  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {\r\n    return this._once(event, fn, true, options);\r\n  };\r\n\r\n  EventEmitter.prototype._once = function(event, fn, prepend, options) {\r\n    return this._many(event, 1, fn, prepend, options);\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn, options) {\r\n    return this._many(event, ttl, fn, false, options);\r\n  };\r\n\r\n  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {\r\n    return this._many(event, ttl, fn, true, options);\r\n  };\r\n\r\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    return this._on(event, listener, prepend, options);\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n    if (!this._events && !this._all) {\r\n      return false;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0], ns, wildcard= this.wildcard;\r\n    var args,l,i,j, containsSymbol;\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (wildcard) {\r\n      ns= type;\r\n      if(type!=='newListener' && type!=='removeListener'){\r\n        if (typeof type === 'object') {\r\n          l = type.length;\r\n          if (symbolsSupported) {\r\n            for (i = 0; i < l; i++) {\r\n              if (typeof type[i] === 'symbol') {\r\n                containsSymbol = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (!containsSymbol) {\r\n            type = type.join(this.delimiter);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, arguments);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wildcard) {\r\n      handler = [];\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n    if (!this._events && !this._all) {\r\n      return false;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;\r\n    var args,l,i,j;\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    if (wildcard) {\r\n      ns= type;\r\n      if(type!=='newListener' && type!=='removeListener'){\r\n        if (typeof type === 'object') {\r\n          l = type.length;\r\n          if (symbolsSupported) {\r\n            for (i = 0; i < l; i++) {\r\n              if (typeof type[i] === 'symbol') {\r\n                containsSymbol = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (!containsSymbol) {\r\n            type = type.join(this.delimiter);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, arguments));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wildcard) {\r\n      handler = [];\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener, options) {\r\n    return this._on(type, listener, false, options);\r\n  };\r\n\r\n  EventEmitter.prototype.prependListener = function(type, listener, options) {\r\n    return this._on(type, listener, true, options);\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    return this._onAny(fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependAny = function(fn) {\r\n    return this._onAny(fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype._onAny = function(fn, prepend){\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    if(prepend){\r\n      this._all.unshift(fn);\r\n    }else{\r\n      this._all.push(fn);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype._on = function(type, listener, prepend, options) {\r\n    if (typeof type === 'function') {\r\n      this._onAny(type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    var returnValue= this, temp;\r\n\r\n    if (options !== undefined) {\r\n      temp = setupListener.call(this, type, listener, options);\r\n      listener = temp[0];\r\n      returnValue = temp[1];\r\n    }\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    if (this._newListener) {\r\n      this.emit('newListener', type, listener);\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return returnValue;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    } else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just add\r\n      if(prepend){\r\n        this._events[type].unshift(listener);\r\n      }else{\r\n        this._events[type].push(listener);\r\n      }\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._maxListeners > 0 &&\r\n        this._events[type].length > this._maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  };\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n      if(!leafs) return this;\r\n    } else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          if (this._removeListener)\r\n            this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      if (this._removeListener) {\r\n        for(i = 0, l = fns.length; i < l; i++)\r\n          this.emit(\"removeListenerAny\", fns[i]);\r\n      }\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function (type) {\r\n    if (type === undefined) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;\r\n      if (!leafs) return this;\r\n      for (i = 0; i < leafs.length; i++) {\r\n        leaf = leafs[i];\r\n        leaf._listeners = null;\r\n      }\r\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\r\n    } else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function (type) {\r\n    var _events = this._events;\r\n    var keys, listeners, allListeners;\r\n    var i;\r\n    var listenerTree;\r\n\r\n    if (type === undefined) {\r\n      if (this.wildcard) {\r\n        throw Error('event name required for wildcard emitter');\r\n      }\r\n\r\n      if (!_events) {\r\n        return [];\r\n      }\r\n\r\n      keys = ownKeys(_events);\r\n      i = keys.length;\r\n      allListeners = [];\r\n      while (i-- > 0) {\r\n        listeners = _events[keys[i]];\r\n        if (typeof listeners === 'function') {\r\n          allListeners.push(listeners);\r\n        } else {\r\n          allListeners.push.apply(allListeners, listeners);\r\n        }\r\n      }\r\n      return allListeners;\r\n    } else {\r\n      if (this.wildcard) {\r\n        listenerTree= this.listenerTree;\r\n        if(!listenerTree) return [];\r\n        var handlers = [];\r\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\r\n        return handlers;\r\n      }\r\n\r\n      if (!_events) {\r\n        return [];\r\n      }\r\n\r\n      listeners = _events[type];\r\n\r\n      if (!listeners) {\r\n        return [];\r\n      }\r\n      return typeof listeners === 'function' ? [listeners] : listeners;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.eventNames = function(nsAsArray){\r\n    var _events= this._events;\r\n    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);\r\n  };\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.hasListeners = function (type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers.length > 0;\r\n    }\r\n\r\n    var _events = this._events;\r\n    var _all = this._all;\r\n\r\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  EventEmitter.prototype.waitFor = function (event, options) {\r\n    var self = this;\r\n    var type = typeof options;\r\n    if (type === 'number') {\r\n      options = {timeout: options};\r\n    } else if (type === 'function') {\r\n      options = {filter: options};\r\n    }\r\n\r\n    options= resolveOptions(options, {\r\n      timeout: 0,\r\n      filter: undefined,\r\n      handleError: false,\r\n      Promise: Promise,\r\n      overload: false\r\n    }, {\r\n      filter: functionReducer,\r\n      Promise: constructorReducer\r\n    });\r\n\r\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\r\n      function listener() {\r\n        var filter= options.filter;\r\n        if (filter && !filter.apply(self, arguments)) {\r\n          return;\r\n        }\r\n        self.off(event, listener);\r\n        if (options.handleError) {\r\n          var err = arguments[0];\r\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\r\n        } else {\r\n          resolve(toArray.apply(null, arguments));\r\n        }\r\n      }\r\n\r\n      onCancel(function(){\r\n        self.off(event, listener);\r\n      });\r\n\r\n      self._on(event, listener, false);\r\n    }, {\r\n      timeout: options.timeout,\r\n      overload: options.overload\r\n    })\r\n  };\r\n\r\n  function once(emitter, name, options) {\r\n    options= resolveOptions(options, {\r\n      Promise: Promise,\r\n      timeout: 0,\r\n      overload: false\r\n    }, {\r\n      Promise: constructorReducer\r\n    });\r\n\r\n    var _Promise= options.Promise;\r\n\r\n    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){\r\n      var handler;\r\n      if (typeof emitter.addEventListener === 'function') {\r\n        handler=  function () {\r\n          resolve(toArray.apply(null, arguments));\r\n        };\r\n\r\n        onCancel(function(){\r\n          emitter.removeEventListener(name, handler);\r\n        });\r\n\r\n        emitter.addEventListener(\r\n            name,\r\n            handler,\r\n            {once: true}\r\n        );\r\n        return;\r\n      }\r\n\r\n      var eventListener = function(){\r\n        errorListener && emitter.removeListener('error', errorListener);\r\n        resolve(toArray.apply(null, arguments));\r\n      };\r\n\r\n      var errorListener;\r\n\r\n      if (name !== 'error') {\r\n        errorListener = function (err){\r\n          emitter.removeListener(name, eventListener);\r\n          reject(err);\r\n        };\r\n\r\n        emitter.once('error', errorListener);\r\n      }\r\n\r\n      onCancel(function(){\r\n        errorListener && emitter.removeListener('error', errorListener);\r\n        emitter.removeListener(name, eventListener);\r\n      });\r\n\r\n      emitter.once(name, eventListener);\r\n    }, {\r\n      timeout: options.timeout,\r\n      overload: options.overload\r\n    });\r\n  }\r\n\r\n  var prototype= EventEmitter.prototype;\r\n\r\n  Object.defineProperties(EventEmitter, {\r\n    defaultMaxListeners: {\r\n      get: function () {\r\n        return prototype._maxListeners;\r\n      },\r\n      set: function (n) {\r\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\r\n          throw TypeError('n must be a non-negative number')\r\n        }\r\n        prototype._maxListeners = n;\r\n      },\r\n      enumerable: true\r\n    },\r\n    once: {\r\n      value: once,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n\r\n  Object.defineProperties(prototype, {\r\n      _maxListeners: {\r\n          value: defaultMaxListeners,\r\n          writable: true,\r\n          configurable: true\r\n      },\r\n      _observers: {value: null, writable: true, configurable: true}\r\n  });\r\n\r\n     // AMD. Register as an anonymous module.\r\n  return EventEmitter;\r\n});"]}