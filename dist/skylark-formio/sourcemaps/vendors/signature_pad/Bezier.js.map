{"version":3,"sources":["vendors/signature_pad/Bezier.js"],"names":["define","Bezier","startPoint","control1","control2","endPoint","this","prototype","length","px","py","i","t","cx","_point","x","cy","y","xdiff","ydiff","Math","sqrt","start","c1","c2","end"],"mappings":";;;;;;;AAAAA,UAAU,WAER,SAASC,EAAOC,EAAYC,EAAUC,EAAUC,GAC9CC,KAAKJ,WAAaA,EAClBI,KAAKH,SAAWA,EAChBG,KAAKF,SAAWA,EAChBE,KAAKD,SAAWA,EA+ClB,OA3CAJ,EAAOM,UAAUC,OAAS,WAExB,IACIC,EACAC,EAFAF,EAAS,EAIb,IAAK,IAAIG,EAAI,EAAGA,GALF,GAKcA,GAAK,EAAG,CAClC,MAAMC,EAAID,EANE,GAONE,EAAKP,KAAKQ,OACdF,EACAN,KAAKJ,WAAWa,EAChBT,KAAKH,SAASY,EACdT,KAAKF,SAASW,EACdT,KAAKD,SAASU,GAEVC,EAAKV,KAAKQ,OACdF,EACAN,KAAKJ,WAAWe,EAChBX,KAAKH,SAASc,EACdX,KAAKF,SAASa,EACdX,KAAKD,SAASY,GAEhB,GAAIN,EAAI,EAAG,CACT,MAAMO,EAAQL,EAAKJ,EACbU,EAAQH,EAAKN,EACnBF,GAAUY,KAAKC,KAAMH,EAAQA,EAAUC,EAAQA,GAEjDV,EAAKI,EACLH,EAAKM,EAGP,OAAOR,GAITP,EAAOM,UAAUO,OAAS,SAAUF,EAAGU,EAAOC,EAAIC,EAAIC,GACpD,OAAeH,GAAS,EAAMV,IAAM,EAAMA,IAAO,EAAMA,GAC/C,EAAOW,GAAS,EAAMX,IAAM,EAAMA,GAAMA,EACxC,EAAOY,GAAS,EAAMZ,GAAKA,EAAaA,EACjCa,EAAQb,EAAYA,EAAaA,GAI3CX","file":"../../../vendors/signature_pad/Bezier.js","sourcesContent":["define([],function(){\n\n  function Bezier(startPoint, control1, control2, endPoint) {\n    this.startPoint = startPoint;\n    this.control1 = control1;\n    this.control2 = control2;\n    this.endPoint = endPoint;\n  }\n\n  // Returns approximated length.\n  Bezier.prototype.length = function () {\n    const steps = 10;\n    let length = 0;\n    let px;\n    let py;\n\n    for (let i = 0; i <= steps; i += 1) {\n      const t = i / steps;\n      const cx = this._point(\n        t,\n        this.startPoint.x,\n        this.control1.x,\n        this.control2.x,\n        this.endPoint.x,\n      );\n      const cy = this._point(\n        t,\n        this.startPoint.y,\n        this.control1.y,\n        this.control2.y,\n        this.endPoint.y,\n      );\n      if (i > 0) {\n        const xdiff = cx - px;\n        const ydiff = cy - py;\n        length += Math.sqrt((xdiff * xdiff) + (ydiff * ydiff));\n      }\n      px = cx;\n      py = cy;\n    }\n\n    return length;\n  };\n\n  /* eslint-disable no-multi-spaces, space-in-parens */\n  Bezier.prototype._point = function (t, start, c1, c2, end) {\n    return (       start * (1.0 - t) * (1.0 - t)  * (1.0 - t))\n         + (3.0 *  c1    * (1.0 - t) * (1.0 - t)  * t)\n         + (3.0 *  c2    * (1.0 - t) * t          * t)\n         + (       end   * t         * t          * t);\n  };\n  /* eslint-enable no-multi-spaces, space-in-parens */\n\n  return Bezier;\n\n});\n"]}