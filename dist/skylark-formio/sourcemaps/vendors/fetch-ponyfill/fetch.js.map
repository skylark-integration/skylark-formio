{"version":3,"sources":["vendors/fetch-ponyfill/fetch.js"],"names":["define","self","window","options","Promise","XMLHttpRequest","global","Object","create","fetch","value","undefined","writable","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","prototype","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","call","Headers","append","name","normalizeName","normalizeValue","oldValue","this","map","get","has","hasOwnProperty","set","forEach","callback","thisArg","keys","items","push","iteratorFor","values","entries","iterator","methods","Request","clone","body","_bodyInit","Body","Response","status","statusText","headers","url","error","response","type","redirectStatuses","redirect","RangeError","location","input","init","resolve","reject","request","xhr","onload","rawHeaders","getAllResponseHeaders","split","line","parts","key","shift","trim","join","responseURL","responseText","onerror","TypeError","ontimeout","open","method","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","done","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","rejected","then","text","readAsText","chars","length","i","fromCharCode","readArrayBufferAsText","decode","json","JSON","parse","upcased","mode","toUpperCase","referrer","form","bytes","replace","decodeURIComponent","bodyInit","ok"],"mappings":"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","file":"../../../vendors/fetch-ponyfill/fetch.js","sourcesContent":["define([],function(){\r\n\r\n  var self = window;\r\n\r\n  function fetchPonyfill(options) {\r\n    var Promise = options && options.Promise || self.Promise;\r\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\r\n    var global = self;\r\n\r\n    return (function () {\r\n      var self = Object.create(global, {\r\n        fetch: {\r\n          value: undefined,\r\n          writable: true\r\n        }\r\n      });\r\n\r\n      (function(self) {\r\n        'use strict';\r\n\r\n        if (self.fetch) {\r\n          return\r\n        }\r\n\r\n        var support = {\r\n          searchParams: 'URLSearchParams' in self,\r\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\r\n          blob: 'FileReader' in self && 'Blob' in self && (function() {\r\n            try {\r\n              new Blob()\r\n              return true\r\n            } catch(e) {\r\n              return false\r\n            }\r\n          })(),\r\n          formData: 'FormData' in self,\r\n          arrayBuffer: 'ArrayBuffer' in self\r\n        }\r\n\r\n        if (support.arrayBuffer) {\r\n          var viewClasses = [\r\n            '[object Int8Array]',\r\n            '[object Uint8Array]',\r\n            '[object Uint8ClampedArray]',\r\n            '[object Int16Array]',\r\n            '[object Uint16Array]',\r\n            '[object Int32Array]',\r\n            '[object Uint32Array]',\r\n            '[object Float32Array]',\r\n            '[object Float64Array]'\r\n          ]\r\n\r\n          var isDataView = function(obj) {\r\n            return obj && DataView.prototype.isPrototypeOf(obj)\r\n          }\r\n\r\n          var isArrayBufferView = ArrayBuffer.isView || function(obj) {\r\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\r\n          }\r\n        }\r\n\r\n        function normalizeName(name) {\r\n          if (typeof name !== 'string') {\r\n            name = String(name)\r\n          }\r\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\r\n            throw new TypeError('Invalid character in header field name')\r\n          }\r\n          return name.toLowerCase()\r\n        }\r\n\r\n        function normalizeValue(value) {\r\n          if (typeof value !== 'string') {\r\n            value = String(value)\r\n          }\r\n          return value\r\n        }\r\n\r\n        // Build a destructive iterator for the value list\r\n        function iteratorFor(items) {\r\n          var iterator = {\r\n            next: function() {\r\n              var value = items.shift()\r\n              return {done: value === undefined, value: value}\r\n            }\r\n          }\r\n\r\n          if (support.iterable) {\r\n            iterator[Symbol.iterator] = function() {\r\n              return iterator\r\n            }\r\n          }\r\n\r\n          return iterator\r\n        }\r\n\r\n        function Headers(headers) {\r\n          this.map = {}\r\n\r\n          if (headers instanceof Headers) {\r\n            headers.forEach(function(value, name) {\r\n              this.append(name, value)\r\n            }, this)\r\n          } else if (Array.isArray(headers)) {\r\n            headers.forEach(function(header) {\r\n              this.append(header[0], header[1])\r\n            }, this)\r\n          } else if (headers) {\r\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\r\n              this.append(name, headers[name])\r\n            }, this)\r\n          }\r\n        }\r\n\r\n        Headers.prototype.append = function(name, value) {\r\n          name = normalizeName(name)\r\n          value = normalizeValue(value)\r\n          var oldValue = this.map[name]\r\n          this.map[name] = oldValue ? oldValue+','+value : value\r\n        }\r\n\r\n        Headers.prototype['delete'] = function(name) {\r\n          delete this.map[normalizeName(name)]\r\n        }\r\n\r\n        Headers.prototype.get = function(name) {\r\n          name = normalizeName(name)\r\n          return this.has(name) ? this.map[name] : null\r\n        }\r\n\r\n        Headers.prototype.has = function(name) {\r\n          return this.map.hasOwnProperty(normalizeName(name))\r\n        }\r\n\r\n        Headers.prototype.set = function(name, value) {\r\n          this.map[normalizeName(name)] = normalizeValue(value)\r\n        }\r\n\r\n        Headers.prototype.forEach = function(callback, thisArg) {\r\n          for (var name in this.map) {\r\n            if (this.map.hasOwnProperty(name)) {\r\n              callback.call(thisArg, this.map[name], name, this)\r\n            }\r\n          }\r\n        }\r\n\r\n        Headers.prototype.keys = function() {\r\n          var items = []\r\n          this.forEach(function(value, name) { items.push(name) })\r\n          return iteratorFor(items)\r\n        }\r\n\r\n        Headers.prototype.values = function() {\r\n          var items = []\r\n          this.forEach(function(value) { items.push(value) })\r\n          return iteratorFor(items)\r\n        }\r\n\r\n        Headers.prototype.entries = function() {\r\n          var items = []\r\n          this.forEach(function(value, name) { items.push([name, value]) })\r\n          return iteratorFor(items)\r\n        }\r\n\r\n        if (support.iterable) {\r\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries\r\n        }\r\n\r\n        function consumed(body) {\r\n          if (body.bodyUsed) {\r\n            return Promise.reject(new TypeError('Already read'))\r\n          }\r\n          body.bodyUsed = true\r\n        }\r\n\r\n        function fileReaderReady(reader) {\r\n          return new Promise(function(resolve, reject) {\r\n            reader.onload = function() {\r\n              resolve(reader.result)\r\n            }\r\n            reader.onerror = function() {\r\n              reject(reader.error)\r\n            }\r\n          })\r\n        }\r\n\r\n        function readBlobAsArrayBuffer(blob) {\r\n          var reader = new FileReader()\r\n          var promise = fileReaderReady(reader)\r\n          reader.readAsArrayBuffer(blob)\r\n          return promise\r\n        }\r\n\r\n        function readBlobAsText(blob) {\r\n          var reader = new FileReader()\r\n          var promise = fileReaderReady(reader)\r\n          reader.readAsText(blob)\r\n          return promise\r\n        }\r\n\r\n        function readArrayBufferAsText(buf) {\r\n          var view = new Uint8Array(buf)\r\n          var chars = new Array(view.length)\r\n\r\n          for (var i = 0; i < view.length; i++) {\r\n            chars[i] = String.fromCharCode(view[i])\r\n          }\r\n          return chars.join('')\r\n        }\r\n\r\n        function bufferClone(buf) {\r\n          if (buf.slice) {\r\n            return buf.slice(0)\r\n          } else {\r\n            var view = new Uint8Array(buf.byteLength)\r\n            view.set(new Uint8Array(buf))\r\n            return view.buffer\r\n          }\r\n        }\r\n\r\n        function Body() {\r\n          this.bodyUsed = false\r\n\r\n          this._initBody = function(body) {\r\n            this._bodyInit = body\r\n            if (!body) {\r\n              this._bodyText = ''\r\n            } else if (typeof body === 'string') {\r\n              this._bodyText = body\r\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n              this._bodyBlob = body\r\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n              this._bodyFormData = body\r\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n              this._bodyText = body.toString()\r\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\r\n              this._bodyArrayBuffer = bufferClone(body.buffer)\r\n              // IE 10-11 can't handle a DataView body.\r\n              this._bodyInit = new Blob([this._bodyArrayBuffer])\r\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\r\n              this._bodyArrayBuffer = bufferClone(body)\r\n            } else {\r\n              throw new Error('unsupported BodyInit type')\r\n            }\r\n\r\n            if (!this.headers.get('content-type')) {\r\n              if (typeof body === 'string') {\r\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\r\n              } else if (this._bodyBlob && this._bodyBlob.type) {\r\n                this.headers.set('content-type', this._bodyBlob.type)\r\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\r\n              }\r\n            }\r\n          }\r\n\r\n          if (support.blob) {\r\n            this.blob = function() {\r\n              var rejected = consumed(this)\r\n              if (rejected) {\r\n                return rejected\r\n              }\r\n\r\n              if (this._bodyBlob) {\r\n                return Promise.resolve(this._bodyBlob)\r\n              } else if (this._bodyArrayBuffer) {\r\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\r\n              } else if (this._bodyFormData) {\r\n                throw new Error('could not read FormData body as blob')\r\n              } else {\r\n                return Promise.resolve(new Blob([this._bodyText]))\r\n              }\r\n            }\r\n\r\n            this.arrayBuffer = function() {\r\n              if (this._bodyArrayBuffer) {\r\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\r\n              } else {\r\n                return this.blob().then(readBlobAsArrayBuffer)\r\n              }\r\n            }\r\n          }\r\n\r\n          this.text = function() {\r\n            var rejected = consumed(this)\r\n            if (rejected) {\r\n              return rejected\r\n            }\r\n\r\n            if (this._bodyBlob) {\r\n              return readBlobAsText(this._bodyBlob)\r\n            } else if (this._bodyArrayBuffer) {\r\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\r\n            } else if (this._bodyFormData) {\r\n              throw new Error('could not read FormData body as text')\r\n            } else {\r\n              return Promise.resolve(this._bodyText)\r\n            }\r\n          }\r\n\r\n          if (support.formData) {\r\n            this.formData = function() {\r\n              return this.text().then(decode)\r\n            }\r\n          }\r\n\r\n          this.json = function() {\r\n            return this.text().then(JSON.parse)\r\n          }\r\n\r\n          return this\r\n        }\r\n\r\n        // HTTP methods whose capitalization should be normalized\r\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\r\n\r\n        function normalizeMethod(method) {\r\n          var upcased = method.toUpperCase()\r\n          return (methods.indexOf(upcased) > -1) ? upcased : method\r\n        }\r\n\r\n        function Request(input, options) {\r\n          options = options || {}\r\n          var body = options.body\r\n\r\n          if (input instanceof Request) {\r\n            if (input.bodyUsed) {\r\n              throw new TypeError('Already read')\r\n            }\r\n            this.url = input.url\r\n            this.credentials = input.credentials\r\n            if (!options.headers) {\r\n              this.headers = new Headers(input.headers)\r\n            }\r\n            this.method = input.method\r\n            this.mode = input.mode\r\n            if (!body && input._bodyInit != null) {\r\n              body = input._bodyInit\r\n              input.bodyUsed = true\r\n            }\r\n          } else {\r\n            this.url = String(input)\r\n          }\r\n\r\n          this.credentials = options.credentials || this.credentials || 'omit'\r\n          if (options.headers || !this.headers) {\r\n            this.headers = new Headers(options.headers)\r\n          }\r\n          this.method = normalizeMethod(options.method || this.method || 'GET')\r\n          this.mode = options.mode || this.mode || null\r\n          this.referrer = null\r\n\r\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n            throw new TypeError('Body not allowed for GET or HEAD requests')\r\n          }\r\n          this._initBody(body)\r\n        }\r\n\r\n        Request.prototype.clone = function() {\r\n          return new Request(this, { body: this._bodyInit })\r\n        }\r\n\r\n        function decode(body) {\r\n          var form = new FormData()\r\n          body.trim().split('&').forEach(function(bytes) {\r\n            if (bytes) {\r\n              var split = bytes.split('=')\r\n              var name = split.shift().replace(/\\+/g, ' ')\r\n              var value = split.join('=').replace(/\\+/g, ' ')\r\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\r\n            }\r\n          })\r\n          return form\r\n        }\r\n\r\n        function parseHeaders(rawHeaders) {\r\n          var headers = new Headers()\r\n          rawHeaders.split(/\\r?\\n/).forEach(function(line) {\r\n            var parts = line.split(':')\r\n            var key = parts.shift().trim()\r\n            if (key) {\r\n              var value = parts.join(':').trim()\r\n              headers.append(key, value)\r\n            }\r\n          })\r\n          return headers\r\n        }\r\n\r\n        Body.call(Request.prototype)\r\n\r\n        function Response(bodyInit, options) {\r\n          if (!options) {\r\n            options = {}\r\n          }\r\n\r\n          this.type = 'default'\r\n          this.status = 'status' in options ? options.status : 200\r\n          this.ok = this.status >= 200 && this.status < 300\r\n          this.statusText = 'statusText' in options ? options.statusText : 'OK'\r\n          this.headers = new Headers(options.headers)\r\n          this.url = options.url || ''\r\n          this._initBody(bodyInit)\r\n        }\r\n\r\n        Body.call(Response.prototype)\r\n\r\n        Response.prototype.clone = function() {\r\n          return new Response(this._bodyInit, {\r\n            status: this.status,\r\n            statusText: this.statusText,\r\n            headers: new Headers(this.headers),\r\n            url: this.url\r\n          })\r\n        }\r\n\r\n        Response.error = function() {\r\n          var response = new Response(null, {status: 0, statusText: ''})\r\n          response.type = 'error'\r\n          return response\r\n        }\r\n\r\n        var redirectStatuses = [301, 302, 303, 307, 308]\r\n\r\n        Response.redirect = function(url, status) {\r\n          if (redirectStatuses.indexOf(status) === -1) {\r\n            throw new RangeError('Invalid status code')\r\n          }\r\n\r\n          return new Response(null, {status: status, headers: {location: url}})\r\n        }\r\n\r\n        self.Headers = Headers\r\n        self.Request = Request\r\n        self.Response = Response\r\n\r\n        self.fetch = function(input, init) {\r\n          return new Promise(function(resolve, reject) {\r\n            var request = new Request(input, init)\r\n            var xhr = new XMLHttpRequest()\r\n\r\n            xhr.onload = function() {\r\n              var options = {\r\n                status: xhr.status,\r\n                statusText: xhr.statusText,\r\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\r\n              }\r\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\r\n              var body = 'response' in xhr ? xhr.response : xhr.responseText\r\n              resolve(new Response(body, options))\r\n            }\r\n\r\n            xhr.onerror = function() {\r\n              reject(new TypeError('Network request failed'))\r\n            }\r\n\r\n            xhr.ontimeout = function() {\r\n              reject(new TypeError('Network request failed'))\r\n            }\r\n\r\n            xhr.open(request.method, request.url, true)\r\n\r\n            if (request.credentials === 'include') {\r\n              xhr.withCredentials = true\r\n            }\r\n\r\n            if ('responseType' in xhr && support.blob) {\r\n              xhr.responseType = 'blob'\r\n            }\r\n\r\n            request.headers.forEach(function(value, name) {\r\n              xhr.setRequestHeader(name, value)\r\n            })\r\n\r\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\r\n          })\r\n        }\r\n        self.fetch.polyfill = true\r\n      })(typeof self !== 'undefined' ? self : this);\r\n\r\n\r\n      return {\r\n        fetch: self.fetch,\r\n        Headers: self.Headers,\r\n        Request: self.Request,\r\n        Response: self.Response\r\n      };\r\n    }());\r\n  }\r\n\r\n  return fetchPonyfill;\r\n});\r\n"]}