{"version":3,"sources":["vendors/kraaden/autocomplete.js"],"names":["define","settings","selected","debounceTimer","doc","document","container","createElement","containerStyle","style","userAgent","navigator","mobileFirefox","indexOf","debounceWaitMs","preventSubmit","keyUpEventName","items","inputValue","minLen","showOnFocus","keypressCounter","undefined","minLength","input","Error","clearDebounceTimer","window","clearTimeout","containerDisplayed","parentNode","clear","parent","removeChild","update","firstChild","render","item","currentValue","itemElement","textContent","label","renderGroup","groupName","groupDiv","fragment","createDocumentFragment","prevGroup","forEach","group","className","appendChild","div","addEventListener","ev","onSelect","preventDefault","stopPropagation","length","emptyMsg","empty","body","height","width","offsetWidth","inputRect","maxHeight","calc","customize","docEl","documentElement","clientTop","clientLeft","scrollTop","pageYOffset","scrollLeft","pageXOffset","top","getBoundingClientRect","offsetHeight","left","innerHeight","bottom","updatePosition","elements","getElementsByClassName","element","previous","previousElementSibling","offsetTop","selectBottom","containerBottom","updateScroll","updateIfDisplayed","resizeEventHandler","scrollEventHandler","e","target","keyupEventHandler","keyCode","which","_i","ignore_1","startFetch","keydownEventHandler","containerIsDisplayed","i","selectPrev","selectNext","focusEventHandler","trigger","savedKeypressCounter","val","value","setTimeout","fetch","blurEventHandler","activeElement","position","evt","focus","destroy","removeEventListener"],"mappings":"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","file":"../../../vendors/kraaden/autocomplete.js","sourcesContent":["define([],function(){\r\n  /*\r\n   * https://github.com/kraaden/autocomplete\r\n   * Copyright (c) 2016 Denys Krasnoshchok\r\n   * MIT License\r\n   */\r\n  function autocomplete(settings) {\r\n      // just an alias to minimize JS file size\r\n      var doc = document;\r\n      var container = doc.createElement(\"div\");\r\n      var containerStyle = container.style;\r\n      var userAgent = navigator.userAgent;\r\n      var mobileFirefox = userAgent.indexOf(\"Firefox\") !== -1 && userAgent.indexOf(\"Mobile\") !== -1;\r\n      var debounceWaitMs = settings.debounceWaitMs || 0;\r\n      var preventSubmit = settings.preventSubmit || false;\r\n      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead\r\n      var keyUpEventName = mobileFirefox ? \"input\" : \"keyup\";\r\n      var items = [];\r\n      var inputValue = \"\";\r\n      var minLen = 2;\r\n      var showOnFocus = settings.showOnFocus;\r\n      var selected;\r\n      var keypressCounter = 0;\r\n      var debounceTimer;\r\n      if (settings.minLength !== undefined) {\r\n          minLen = settings.minLength;\r\n      }\r\n      if (!settings.input) {\r\n          throw new Error(\"input undefined\");\r\n      }\r\n      var input = settings.input;\r\n      container.className = \"autocomplete \" + (settings.className || \"\");\r\n      // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\r\n      containerStyle.position = \"absolute\";\r\n      /**\r\n       * Detach the container from DOM\r\n       */\r\n      function detach() {\r\n          var parent = container.parentNode;\r\n          if (parent) {\r\n              parent.removeChild(container);\r\n          }\r\n      }\r\n      /**\r\n       * Clear debouncing timer if assigned\r\n       */\r\n      function clearDebounceTimer() {\r\n          if (debounceTimer) {\r\n              window.clearTimeout(debounceTimer);\r\n          }\r\n      }\r\n      /**\r\n       * Attach the container to DOM\r\n       */\r\n      function attach() {\r\n          if (!container.parentNode) {\r\n              doc.body.appendChild(container);\r\n          }\r\n      }\r\n      /**\r\n       * Check if container for autocomplete is displayed\r\n       */\r\n      function containerDisplayed() {\r\n          return !!container.parentNode;\r\n      }\r\n      /**\r\n       * Clear autocomplete state and hide container\r\n       */\r\n      function clear() {\r\n          // prevent the update call if there are pending AJAX requests\r\n          keypressCounter++;\r\n          items = [];\r\n          inputValue = \"\";\r\n          selected = undefined;\r\n          detach();\r\n      }\r\n      /**\r\n       * Update autocomplete position\r\n       */\r\n      function updatePosition() {\r\n          if (!containerDisplayed()) {\r\n              return;\r\n          }\r\n          containerStyle.height = \"auto\";\r\n          containerStyle.width = input.offsetWidth + \"px\";\r\n          var maxHeight = 0;\r\n          var inputRect;\r\n          function calc() {\r\n              var docEl = doc.documentElement;\r\n              var clientTop = docEl.clientTop || doc.body.clientTop || 0;\r\n              var clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\r\n              var scrollTop = window.pageYOffset || docEl.scrollTop;\r\n              var scrollLeft = window.pageXOffset || docEl.scrollLeft;\r\n              inputRect = input.getBoundingClientRect();\r\n              var top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\r\n              var left = inputRect.left + scrollLeft - clientLeft;\r\n              containerStyle.top = top + \"px\";\r\n              containerStyle.left = left + \"px\";\r\n              maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\r\n              if (maxHeight < 0) {\r\n                  maxHeight = 0;\r\n              }\r\n              containerStyle.top = top + \"px\";\r\n              containerStyle.bottom = \"\";\r\n              containerStyle.left = left + \"px\";\r\n              containerStyle.maxHeight = maxHeight + \"px\";\r\n          }\r\n          // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\r\n          calc();\r\n          calc();\r\n          if (settings.customize && inputRect) {\r\n              settings.customize(input, inputRect, container, maxHeight);\r\n          }\r\n      }\r\n      /**\r\n       * Redraw the autocomplete div element with suggestions\r\n       */\r\n      function update() {\r\n          // delete all children from autocomplete DOM container\r\n          while (container.firstChild) {\r\n              container.removeChild(container.firstChild);\r\n          }\r\n          // function for rendering autocomplete suggestions\r\n          var render = function (item, currentValue) {\r\n              var itemElement = doc.createElement(\"div\");\r\n              itemElement.textContent = item.label || \"\";\r\n              return itemElement;\r\n          };\r\n          if (settings.render) {\r\n              render = settings.render;\r\n          }\r\n          // function to render autocomplete groups\r\n          var renderGroup = function (groupName, currentValue) {\r\n              var groupDiv = doc.createElement(\"div\");\r\n              groupDiv.textContent = groupName;\r\n              return groupDiv;\r\n          };\r\n          if (settings.renderGroup) {\r\n              renderGroup = settings.renderGroup;\r\n          }\r\n          var fragment = doc.createDocumentFragment();\r\n          var prevGroup = \"#9?$\";\r\n          items.forEach(function (item) {\r\n              if (item.group && item.group !== prevGroup) {\r\n                  prevGroup = item.group;\r\n                  var groupDiv = renderGroup(item.group, inputValue);\r\n                  if (groupDiv) {\r\n                      groupDiv.className += \" group\";\r\n                      fragment.appendChild(groupDiv);\r\n                  }\r\n              }\r\n              var div = render(item, inputValue);\r\n              if (div) {\r\n                  div.addEventListener(\"click\", function (ev) {\r\n                      settings.onSelect(item, input);\r\n                      clear();\r\n                      ev.preventDefault();\r\n                      ev.stopPropagation();\r\n                  });\r\n                  if (item === selected) {\r\n                      div.className += \" selected\";\r\n                  }\r\n                  fragment.appendChild(div);\r\n              }\r\n          });\r\n          container.appendChild(fragment);\r\n          if (items.length < 1) {\r\n              if (settings.emptyMsg) {\r\n                  var empty = doc.createElement(\"div\");\r\n                  empty.className = \"empty\";\r\n                  empty.textContent = settings.emptyMsg;\r\n                  container.appendChild(empty);\r\n              }\r\n              else {\r\n                  clear();\r\n                  return;\r\n              }\r\n          }\r\n          attach();\r\n          updatePosition();\r\n          updateScroll();\r\n      }\r\n      function updateIfDisplayed() {\r\n          if (containerDisplayed()) {\r\n              update();\r\n          }\r\n      }\r\n      function resizeEventHandler() {\r\n          updateIfDisplayed();\r\n      }\r\n      function scrollEventHandler(e) {\r\n          if (e.target !== container) {\r\n              updateIfDisplayed();\r\n          }\r\n          else {\r\n              e.preventDefault();\r\n          }\r\n      }\r\n      function keyupEventHandler(ev) {\r\n          var keyCode = ev.which || ev.keyCode || 0;\r\n          var ignore = [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];\r\n          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {\r\n              var key = ignore_1[_i];\r\n              if (keyCode === key) {\r\n                  return;\r\n              }\r\n          }\r\n          if (keyCode >= 112 /* F1 */ && keyCode <= 123 /* F12 */) {\r\n              return;\r\n          }\r\n          // the down key is used to open autocomplete\r\n          if (keyCode === 40 /* Down */ && containerDisplayed()) {\r\n              return;\r\n          }\r\n          startFetch(0 /* Keyboard */);\r\n      }\r\n      /**\r\n       * Automatically move scroll bar if selected item is not visible\r\n       */\r\n      function updateScroll() {\r\n          var elements = container.getElementsByClassName(\"selected\");\r\n          if (elements.length > 0) {\r\n              var element = elements[0];\r\n              // make group visible\r\n              var previous = element.previousElementSibling;\r\n              if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\r\n                  element = previous;\r\n              }\r\n              if (element.offsetTop < container.scrollTop) {\r\n                  container.scrollTop = element.offsetTop;\r\n              }\r\n              else {\r\n                  var selectBottom = element.offsetTop + element.offsetHeight;\r\n                  var containerBottom = container.scrollTop + container.offsetHeight;\r\n                  if (selectBottom > containerBottom) {\r\n                      container.scrollTop += selectBottom - containerBottom;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Select the previous item in suggestions\r\n       */\r\n      function selectPrev() {\r\n          if (items.length < 1) {\r\n              selected = undefined;\r\n          }\r\n          else {\r\n              if (selected === items[0]) {\r\n                  selected = items[items.length - 1];\r\n              }\r\n              else {\r\n                  for (var i = items.length - 1; i > 0; i--) {\r\n                      if (selected === items[i] || i === 1) {\r\n                          selected = items[i - 1];\r\n                          break;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Select the next item in suggestions\r\n       */\r\n      function selectNext() {\r\n          if (items.length < 1) {\r\n              selected = undefined;\r\n          }\r\n          if (!selected || selected === items[items.length - 1]) {\r\n              selected = items[0];\r\n              return;\r\n          }\r\n          for (var i = 0; i < (items.length - 1); i++) {\r\n              if (selected === items[i]) {\r\n                  selected = items[i + 1];\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      function keydownEventHandler(ev) {\r\n          var keyCode = ev.which || ev.keyCode || 0;\r\n          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {\r\n              var containerIsDisplayed = containerDisplayed();\r\n              if (keyCode === 27 /* Esc */) {\r\n                  clear();\r\n              }\r\n              else {\r\n                  if (!containerDisplayed || items.length < 1) {\r\n                      return;\r\n                  }\r\n                  keyCode === 38 /* Up */\r\n                      ? selectPrev()\r\n                      : selectNext();\r\n                  update();\r\n              }\r\n              ev.preventDefault();\r\n              if (containerIsDisplayed) {\r\n                  ev.stopPropagation();\r\n              }\r\n              return;\r\n          }\r\n          if (keyCode === 13 /* Enter */) {\r\n              if (selected) {\r\n                  settings.onSelect(selected, input);\r\n                  clear();\r\n              }\r\n              if (preventSubmit) {\r\n                  ev.preventDefault();\r\n              }\r\n          }\r\n      }\r\n      function focusEventHandler() {\r\n          if (showOnFocus) {\r\n              startFetch(1 /* Focus */);\r\n          }\r\n      }\r\n      function startFetch(trigger) {\r\n          // if multiple keys were pressed, before we get update from server,\r\n          // this may cause redrawing our autocomplete multiple times after the last key press.\r\n          // to avoid this, the number of times keyboard was pressed will be\r\n          // saved and checked before redraw our autocomplete box.\r\n          var savedKeypressCounter = ++keypressCounter;\r\n          var val = input.value;\r\n          if (val.length >= minLen || trigger === 1 /* Focus */) {\r\n              clearDebounceTimer();\r\n              debounceTimer = window.setTimeout(function () {\r\n                  settings.fetch(val, function (elements) {\r\n                      if (keypressCounter === savedKeypressCounter && elements) {\r\n                          items = elements;\r\n                          inputValue = val;\r\n                          selected = items.length > 0 ? items[0] : undefined;\r\n                          update();\r\n                      }\r\n                  }, 0 /* Keyboard */);\r\n              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);\r\n          }\r\n          else {\r\n              clear();\r\n          }\r\n      }\r\n      function blurEventHandler() {\r\n          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\r\n          setTimeout(function () {\r\n              if (doc.activeElement !== input) {\r\n                  clear();\r\n              }\r\n          }, 200);\r\n      }\r\n      /**\r\n       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\r\n       */\r\n      container.addEventListener(\"mousedown\", function (evt) {\r\n          evt.stopPropagation();\r\n          evt.preventDefault();\r\n      });\r\n      /**\r\n       * Fixes #30: autocomplete closes when scrollbar is clicked in IE\r\n       * See: https://stackoverflow.com/a/9210267/13172349\r\n       */\r\n      container.addEventListener(\"focus\", function () { return input.focus(); });\r\n      /**\r\n       * This function will remove DOM elements and clear event handlers\r\n       */\r\n      function destroy() {\r\n          input.removeEventListener(\"focus\", focusEventHandler);\r\n          input.removeEventListener(\"keydown\", keydownEventHandler);\r\n          input.removeEventListener(keyUpEventName, keyupEventHandler);\r\n          input.removeEventListener(\"blur\", blurEventHandler);\r\n          window.removeEventListener(\"resize\", resizeEventHandler);\r\n          doc.removeEventListener(\"scroll\", scrollEventHandler, true);\r\n          clearDebounceTimer();\r\n          clear();\r\n      }\r\n      // setup event handlers\r\n      input.addEventListener(\"keydown\", keydownEventHandler);\r\n      input.addEventListener(keyUpEventName, keyupEventHandler);\r\n      input.addEventListener(\"blur\", blurEventHandler);\r\n      input.addEventListener(\"focus\", focusEventHandler);\r\n      window.addEventListener(\"resize\", resizeEventHandler);\r\n      doc.addEventListener(\"scroll\", scrollEventHandler, true);\r\n      return {\r\n          destroy: destroy\r\n      };\r\n  }\r\n\r\n  return autocomplete;\r\n\r\n});\r\n"]}