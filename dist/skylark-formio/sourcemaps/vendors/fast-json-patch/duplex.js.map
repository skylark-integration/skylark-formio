{"version":3,"sources":["vendors/fast-json-patch/duplex.js"],"names":["define","helpers_1","core_1","beforeDict","WeakMap","Mirror","obj","this","observers","Map","ObserverInfo","callback","observer","generate","mirror","get","object","_generate","value","patches","length","applyPatch","temp","path","toJSON","newKeys","_objectKeys","oldKeys","deleted","t","oldVal","key","hasOwnProperty","undefined","Array","isArray","push","op","escapePathComponent","newVal","_deepClone","unobserve","root","observe","getMirror","observerInfo","getObserverFromMirror","set","next","dirtyCheck","fastCheck","clearTimeout","setTimeout","window","addEventListener","document","documentElement","attachEvent","delete","removeObserverFromMirror","removeEventListener","detachEvent","compare","tree1","tree2"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACF,SACEC,EACAC,GAIA,IAAIC,EAAa,IAAIC,QACjBC,EAAU,WAKV,OAJA,SAAgBC,GACZC,KAAKC,UAAY,IAAIC,IACrBF,KAAKD,IAAMA,GAHN,GAOTI,EAAgB,WAKhB,OAJA,SAAsBC,EAAUC,GAC5BL,KAAKI,SAAWA,EAChBJ,KAAKK,SAAWA,GAHL,GAgGnB,SAASC,EAASD,GACd,IAAIE,EAASX,EAAWY,IAAIH,EAASI,QACrCC,EAAUH,EAAOI,MAAON,EAASI,OAAQJ,EAASO,QAAS,IACvDP,EAASO,QAAQC,QACjBlB,EAAOmB,WAAWP,EAAOI,MAAON,EAASO,SAE7C,IAAIG,EAAOV,EAASO,QAOpB,OANIG,EAAKF,OAAS,IACdR,EAASO,WACLP,EAASD,UACTC,EAASD,SAASW,IAGnBA,EAGX,SAASL,EAAUH,EAAQR,EAAKa,EAASI,GACrC,GAAIjB,IAAQQ,EAAZ,CAG0B,mBAAfR,EAAIkB,SACXlB,EAAMA,EAAIkB,UAOd,IALA,IAAIC,EAAUxB,EAAUyB,YAAYpB,GAChCqB,EAAU1B,EAAUyB,YAAYZ,GAEhCc,GAAU,EAELC,EAAIF,EAAQP,OAAS,EAAGS,GAAK,EAAGA,IAAK,CAC1C,IACIC,EAAShB,EADTiB,EAAMJ,EAAQE,IAElB,IAAI5B,EAAU+B,eAAe1B,EAAKyB,SAAuBE,IAAb3B,EAAIyB,SAAiCE,IAAXH,IAA+C,IAAvBI,MAAMC,QAAQ7B,GAaxGa,EAAQiB,MAAOC,GAAI,SAAUd,KAAMA,EAAO,IAAMtB,EAAUqC,oBAAoBP,KAC9EH,GAAU,MAd+G,CACzH,IAAIW,EAASjC,EAAIyB,GACI,iBAAVD,GAAgC,MAAVA,GAAmC,iBAAVS,GAAgC,MAAVA,EAC5EtB,EAAUa,EAAQS,EAAQpB,EAASI,EAAO,IAAMtB,EAAUqC,oBAAoBP,IAG1ED,IAAWS,KACD,EACVpB,EAAQiB,MAAOC,GAAI,UAAWd,KAAMA,EAAO,IAAMtB,EAAUqC,oBAAoBP,GAAMb,MAAOjB,EAAUuC,WAAWD,OASjI,GAAKX,GAAWH,EAAQL,QAAUO,EAAQP,OAG1C,IAASS,EAAI,EAAGA,EAAIJ,EAAQL,OAAQS,IAAK,CACrC,IAAIE,EAAMN,EAAQI,GACb5B,EAAU+B,eAAelB,EAAQiB,SAAqBE,IAAb3B,EAAIyB,IAC9CZ,EAAQiB,MAAOC,GAAI,MAAOd,KAAMA,EAAO,IAAMtB,EAAUqC,oBAAoBP,GAAMb,MAAOjB,EAAUuC,WAAWlC,EAAIyB,QAc7H,OACCV,WAAanB,EAAOmB,WACpBoB,UAnJD,SAAmBC,EAAM9B,GACrBA,EAAS6B,aAmJZE,QA9ID,SAAiBrC,EAAKK,GAClB,IACIC,EACAE,EArBR,SAAmBR,GACf,OAAOH,EAAWY,IAAIT,GAoBTsC,CAAUtC,GACvB,GAAKQ,EAIA,CACD,IAAI+B,EAxBZ,SAA+B/B,EAAQH,GACnC,OAAOG,EAAON,UAAUO,IAAIJ,GAuBLmC,CAAsBhC,EAAQH,GACjDC,EAAWiC,GAAgBA,EAAajC,cALxCE,EAAS,IAAIT,EAAOC,GACpBH,EAAW4C,IAAIzC,EAAKQ,GAMxB,GAAIF,EACA,OAAOA,EAIX,GAFAA,KACAE,EAAOI,MAAQjB,EAAUuC,WAAWlC,GAChCK,EAAU,CACVC,EAASD,SAAWA,EACpBC,EAASoC,KAAO,KAChB,IAAIC,EAAa,WACbpC,EAASD,IAETsC,EAAY,WACZC,aAAavC,EAASoC,MACtBpC,EAASoC,KAAOI,WAAWH,IAET,oBAAXI,SACHA,OAAOC,kBACPD,OAAOC,iBAAiB,UAAWJ,GACnCG,OAAOC,iBAAiB,QAASJ,GACjCG,OAAOC,iBAAiB,YAAaJ,GACrCG,OAAOC,iBAAiB,UAAWJ,GACnCG,OAAOC,iBAAiB,SAAUJ,KAGlCK,SAASC,gBAAgBC,YAAY,YAAaP,GAClDK,SAASC,gBAAgBC,YAAY,UAAWP,GAChDK,SAASC,gBAAgBC,YAAY,cAAeP,GACpDK,SAASC,gBAAgBC,YAAY,YAAaP,GAClDK,SAASC,gBAAgBC,YAAY,WAAYP,KA0B7D,OAtBAtC,EAASO,WACTP,EAASI,OAASV,EAClBM,EAAS6B,UAAY,WACjB5B,EAASD,GACTuC,aAAavC,EAASoC,MA5D9B,SAAkClC,EAAQF,GACtCE,EAAON,UAAUkD,OAAO9C,EAASD,UA4D7BgD,CAAyB7C,EAAQF,GACX,oBAAXyC,SACHA,OAAOO,qBACPP,OAAOO,oBAAoB,UAAWV,GACtCG,OAAOO,oBAAoB,QAASV,GACpCG,OAAOO,oBAAoB,YAAaV,GACxCG,OAAOO,oBAAoB,UAAWV,KAGtCK,SAASC,gBAAgBK,YAAY,YAAaX,GAClDK,SAASC,gBAAgBK,YAAY,UAAWX,GAChDK,SAASC,gBAAgBK,YAAY,cAAeX,GACpDK,SAASC,gBAAgBK,YAAY,YAAaX,MAI9DpC,EAAON,UAAUuC,IAAIpC,EAAU,IAAID,EAAaC,EAAUC,IACnDA,GA6EVC,SAAAA,EACAiD,QAZD,SAAiBC,EAAOC,GACpB,IAAI7C,KAEJ,OADAF,EAAU8C,EAAOC,EAAO7C,EAAS,IAC1BA","file":"../../../vendors/fast-json-patch/duplex.js","sourcesContent":["define([\r\n    \"./helpers\",\r\n    \"./core\"\r\n],function(\r\n    helpers_1,\r\n    core_1\r\n){\r\n\r\n\r\n    var beforeDict = new WeakMap();\r\n    var Mirror = (function () {\r\n        function Mirror(obj) {\r\n            this.observers = new Map();\r\n            this.obj = obj;\r\n        }\r\n        return Mirror;\r\n    }());\r\n    var ObserverInfo = (function () {\r\n        function ObserverInfo(callback, observer) {\r\n            this.callback = callback;\r\n            this.observer = observer;\r\n        }\r\n        return ObserverInfo;\r\n    }());\r\n    function getMirror(obj) {\r\n        return beforeDict.get(obj);\r\n    }\r\n    function getObserverFromMirror(mirror, callback) {\r\n        return mirror.observers.get(callback);\r\n    }\r\n    function removeObserverFromMirror(mirror, observer) {\r\n        mirror.observers.delete(observer.callback);\r\n    }\r\n    /**\r\n     * Detach an observer from an object\r\n     */\r\n    function unobserve(root, observer) {\r\n        observer.unobserve();\r\n    }\r\n    /**\r\n     * Observes changes made to an object, which can then be retrieved using generate\r\n     */\r\n    function observe(obj, callback) {\r\n        var patches = [];\r\n        var observer;\r\n        var mirror = getMirror(obj);\r\n        if (!mirror) {\r\n            mirror = new Mirror(obj);\r\n            beforeDict.set(obj, mirror);\r\n        }\r\n        else {\r\n            var observerInfo = getObserverFromMirror(mirror, callback);\r\n            observer = observerInfo && observerInfo.observer;\r\n        }\r\n        if (observer) {\r\n            return observer;\r\n        }\r\n        observer = {};\r\n        mirror.value = helpers_1._deepClone(obj);\r\n        if (callback) {\r\n            observer.callback = callback;\r\n            observer.next = null;\r\n            var dirtyCheck = function () {\r\n                generate(observer);\r\n            };\r\n            var fastCheck = function () {\r\n                clearTimeout(observer.next);\r\n                observer.next = setTimeout(dirtyCheck);\r\n            };\r\n            if (typeof window !== 'undefined') {\r\n                if (window.addEventListener) {\r\n                    window.addEventListener('mouseup', fastCheck);\r\n                    window.addEventListener('keyup', fastCheck);\r\n                    window.addEventListener('mousedown', fastCheck);\r\n                    window.addEventListener('keydown', fastCheck);\r\n                    window.addEventListener('change', fastCheck);\r\n                }\r\n                else {\r\n                    document.documentElement.attachEvent('onmouseup', fastCheck);\r\n                    document.documentElement.attachEvent('onkeyup', fastCheck);\r\n                    document.documentElement.attachEvent('onmousedown', fastCheck);\r\n                    document.documentElement.attachEvent('onkeydown', fastCheck);\r\n                    document.documentElement.attachEvent('onchange', fastCheck);\r\n                }\r\n            }\r\n        }\r\n        observer.patches = patches;\r\n        observer.object = obj;\r\n        observer.unobserve = function () {\r\n            generate(observer);\r\n            clearTimeout(observer.next);\r\n            removeObserverFromMirror(mirror, observer);\r\n            if (typeof window !== 'undefined') {\r\n                if (window.removeEventListener) {\r\n                    window.removeEventListener('mouseup', fastCheck);\r\n                    window.removeEventListener('keyup', fastCheck);\r\n                    window.removeEventListener('mousedown', fastCheck);\r\n                    window.removeEventListener('keydown', fastCheck);\r\n                }\r\n                else {\r\n                    document.documentElement.detachEvent('onmouseup', fastCheck);\r\n                    document.documentElement.detachEvent('onkeyup', fastCheck);\r\n                    document.documentElement.detachEvent('onmousedown', fastCheck);\r\n                    document.documentElement.detachEvent('onkeydown', fastCheck);\r\n                }\r\n            }\r\n        };\r\n        mirror.observers.set(callback, new ObserverInfo(callback, observer));\r\n        return observer;\r\n    }\r\n    /**\r\n     * Generate an array of patches from an observer\r\n     */\r\n    function generate(observer) {\r\n        var mirror = beforeDict.get(observer.object);\r\n        _generate(mirror.value, observer.object, observer.patches, \"\");\r\n        if (observer.patches.length) {\r\n            core_1.applyPatch(mirror.value, observer.patches);\r\n        }\r\n        var temp = observer.patches;\r\n        if (temp.length > 0) {\r\n            observer.patches = [];\r\n            if (observer.callback) {\r\n                observer.callback(temp);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n    // Dirty check if obj is different from mirror, generate patches and update mirror\r\n    function _generate(mirror, obj, patches, path) {\r\n        if (obj === mirror) {\r\n            return;\r\n        }\r\n        if (typeof obj.toJSON === \"function\") {\r\n            obj = obj.toJSON();\r\n        }\r\n        var newKeys = helpers_1._objectKeys(obj);\r\n        var oldKeys = helpers_1._objectKeys(mirror);\r\n        var changed = false;\r\n        var deleted = false;\r\n        //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\r\n        for (var t = oldKeys.length - 1; t >= 0; t--) {\r\n            var key = oldKeys[t];\r\n            var oldVal = mirror[key];\r\n            if (helpers_1.hasOwnProperty(obj, key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {\r\n                var newVal = obj[key];\r\n                if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null) {\r\n                    _generate(oldVal, newVal, patches, path + \"/\" + helpers_1.escapePathComponent(key));\r\n                }\r\n                else {\r\n                    if (oldVal !== newVal) {\r\n                        changed = true;\r\n                        patches.push({ op: \"replace\", path: path + \"/\" + helpers_1.escapePathComponent(key), value: helpers_1._deepClone(newVal) });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                patches.push({ op: \"remove\", path: path + \"/\" + helpers_1.escapePathComponent(key) });\r\n                deleted = true; // property has been deleted\r\n            }\r\n        }\r\n        if (!deleted && newKeys.length == oldKeys.length) {\r\n            return;\r\n        }\r\n        for (var t = 0; t < newKeys.length; t++) {\r\n            var key = newKeys[t];\r\n            if (!helpers_1.hasOwnProperty(mirror, key) && obj[key] !== undefined) {\r\n                patches.push({ op: \"add\", path: path + \"/\" + helpers_1.escapePathComponent(key), value: helpers_1._deepClone(obj[key]) });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Create an array of patches from the differences in two objects\r\n     */\r\n    function compare(tree1, tree2) {\r\n        var patches = [];\r\n        _generate(tree1, tree2, patches, '');\r\n        return patches;\r\n    }\r\n\r\n\r\n    return {\r\n     applyPatch : core_1.applyPatch,\r\n     unobserve,\r\n     observe,\r\n     generate,\r\n     compare\r\n    };\r\n\r\n});"]}