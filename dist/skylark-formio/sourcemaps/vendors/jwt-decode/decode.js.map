{"version":3,"sources":["vendors/jwt-decode/decode.js"],"names":["define","base64_url_decode","InvalidTokenError","message","this","prototype","Error","name","token","options","pos","header","JSON","parse","split","e"],"mappings":";;;;;;;AAACA,QACC,uBACA,SAASC,GACT,aAEA,SAASC,EAAkBC,GACzBC,KAAKD,QAAUA,EAMjB,OAHAD,EAAkBG,UAAY,IAAIC,MAClCJ,EAAkBG,UAAUE,KAAO,oBAE5B,SAAUC,EAAMC,GACrB,GAAqB,iBAAVD,EACT,MAAM,IAAIN,EAAkB,2BAI9B,IAAIQ,GAAyB,KAD7BD,EAAUA,OACQE,OAAkB,EAAI,EACxC,IACE,OAAOC,KAAKC,MAAMZ,EAAkBO,EAAMM,MAAM,KAAKJ,KACrD,MAAOK,GACP,MAAM,IAAIb,EAAkB,4BAA8Ba,EAAEZ","file":"../../../vendors/jwt-decode/decode.js","sourcesContent":[" define([\r\n  './base64_url_decode'\r\n],function(base64_url_decode) {\r\n  'use strict';\r\n\r\n  function InvalidTokenError(message) {\r\n    this.message = message;\r\n  }\r\n\r\n  InvalidTokenError.prototype = new Error();\r\n  InvalidTokenError.prototype.name = 'InvalidTokenError';\r\n\r\n  return function (token,options) {\r\n    if (typeof token !== 'string') {\r\n      throw new InvalidTokenError('Invalid token specified');\r\n    }\r\n\r\n    options = options || {};\r\n    var pos = options.header === true ? 0 : 1;\r\n    try {\r\n      return JSON.parse(base64_url_decode(token.split('.')[pos]));\r\n    } catch (e) {\r\n      throw new InvalidTokenError('Invalid token specified: ' + e.message);\r\n    }\r\n  };\r\n\r\n\r\n});"]}