{"version":3,"sources":["vendors/jwt-decode/base64_url_decode.js"],"names":["define","atob","str","output","replace","length","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err"],"mappings":";;;;;;;AAAAA,QACE,UACA,SAASC,GAWT,OAAO,SAASC,GACd,IAAIC,EAASD,EAAIE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAClD,OAAQD,EAAOE,OAAS,GACtB,KAAK,EACH,MACF,KAAK,EACHF,GAAU,KACV,MACF,KAAK,EACHA,GAAU,IACV,MACF,QACE,KAAM,4BAGV,IACE,OA1BJ,SAA0BD,GACxB,OAAOI,mBAAmBL,EAAKC,GAAKE,QAAQ,OAAQ,SAAUG,EAAGC,GAC/D,IAAIC,EAAOD,EAAEE,WAAW,GAAGC,SAAS,IAAIC,cAIxC,OAHIH,EAAKJ,OAAS,IAChBI,EAAO,IAAMA,GAER,IAAMA,KAoBNI,CAAiBV,GACxB,MAAOW,GACP,OAAOb,EAAKE","file":"../../../vendors/jwt-decode/base64_url_decode.js","sourcesContent":["define([\r\n  './atob'\r\n],function(atob) {\r\n  function b64DecodeUnicode(str) {\r\n    return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\r\n      var code = p.charCodeAt(0).toString(16).toUpperCase();\r\n      if (code.length < 2) {\r\n        code = '0' + code;\r\n      }\r\n      return '%' + code;\r\n    }));\r\n  }\r\n\r\n  return function(str) {\r\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    switch (output.length % 4) {\r\n      case 0:\r\n        break;\r\n      case 2:\r\n        output += \"==\";\r\n        break;\r\n      case 3:\r\n        output += \"=\";\r\n        break;\r\n      default:\r\n        throw \"Illegal base64url string!\";\r\n    }\r\n\r\n    try{\r\n      return b64DecodeUnicode(output);\r\n    } catch (err) {\r\n      return atob(output);\r\n    }\r\n  };\r\n});\r\n\r\n\r\n\r\n"]}