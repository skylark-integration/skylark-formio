/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../../../validator/Validator","../../../components/_classes/component/Component","../../../Formio","../../vendors/getify/npo"],function(t,e,s,i,r){"use strict";return void 0===e.validators.stripe&&(e.validators.stripe={key:"validate.stripe",message(t){let e="";return t.lastResult&&t.lastResult.error&&(e=t.lastResult.error.message),t.t(t.errorMessage("stripe"),{field:t.errorLabel,stripe:e,stripeError:t.lastResult.error,data:t.data})},check:(t,e,s)=>!(!t.paymentDone&&t.lastResult)||!t.lastResult.error&&!t.isEmpty(s)}),class extends s{constructor(t,e,s){super(t,e,s);this.stripeReady=i.requireLibrary("stripe","Stripe","https://js.stripe.com/v3/",!0),this.lastResult=null,this.paymentDone=!1,this.validators.push("stripe")}elementInfo(){const t=super.elementInfo();return t.type="input",t.attr.type="hidden",t.changeEvent="change",t}authorizePending(){this.addClass(this.element,"stripe-submitting"),this.removeClass(this.element,"stripe-error"),this.removeClass(this.element,"stripe-submitted")}authorizeError(t){this.removeClass(this.element,"stripe-submitting"),this.addClass(this.element,"stripe-submit-error"),this.removeClass(this.element,"stripe-submitted"),this.lastResult||(this.lastResult={}),this.lastResult.error=t,this.setValue(this.getValue(),{changed:!0})}authorizeDone(t){this.removeClass(this.element,"stripe-submit-error"),this.removeClass(this.element,"stripe-submitting"),this.addClass(this.element,"stripe-submitted"),this.stripeSuccess.style.display="block",this.component.stripe.payButton&&this.component.stripe.payButton.enable&&(this.stripeElementPayButton.style.display="none",this.stripeSeparator.style.display="none"),this.stripeElementCard.style.display="none",this.setValue(t.token.id),this.paymentDone=!0}authorize(){if(this.paymentDone)return;const e=this;return new r((s,i)=>{e.authorizePending();const r=t.cloneDeep(e.component.stripe.cardData)||{};return t.each(r,(t,s)=>{r[s]=e.t(t)}),e.stripe.createToken(e.stripeCard,r).then(t=>{t.error?(e.authorizeError(t.error),i(t.error)):(e.authorizeDone(t),s())})})}onElementCardChange(t){!t.empty||this.component.validate&&this.component.validate.required||delete t.error;const e=t.complete||this.lastResult&&!!this.lastResult.error!=!!t.error||this.lastResult&&this.lastResult.error&&t.error&&this.lastResult.error.code!==t.error.code||!1;this.lastResult=t;const s=t.empty?"":".";this.setValue(s,{changed:e})}beforeSubmit(){if(this.lastResult&&!this.lastResult.empty||this.component.validate&&this.component.validate.required)return this.authorize()}build(){super.build();const e=this.component.stripe.payButton.successLabel||"Payment successful";if(this.stripeSuccess=this.ce("div",{class:"Stripe-success",style:"display: none"},this.t(e)),this.element.appendChild(this.stripeSuccess),this.component.stripe.payButton&&this.component.stripe.payButton.enable){this.stripeElementPayButton=this.ce("div",{class:"Stripe-paybutton"}),this.element.appendChild(this.stripeElementPayButton);const t=this.component.stripe.payButton.separatorLabel||"Or";this.stripeSeparator=this.ce("div",{class:"Stripe-separator",style:"display: none"},this.t(t)),this.element.appendChild(this.stripeSeparator)}this.stripeElementCard=this.ce("div"),this.element.appendChild(this.stripeElementCard),this.stripeReady.then(()=>{this.stripe=new Stripe(this.component.stripe.apiKey);let e={};this.component.stripe&&(e=t.cloneDeep(this.component.stripe.stripeElementsOptions)||{}),void 0===e.locale&&(e.locale=this.options.language);const s=this.stripe.elements(e);let i={};if(this.component.stripe&&(i=this.component.stripe.stripeElementOptions||{}),this.stripeCard=s.create("card",i),this.stripeCard.mount(this.stripeElementCard),this.addEventListener(this.stripeCard,"change",this.onElementCardChange.bind(this)),this.component.stripe.payButton&&this.component.stripe.payButton.enable){const t=this.stripe.paymentRequest(this.component.stripe.payButton.paymentRequest);this.addEventListener(t,"token",t=>{this.authorizeDone(t,!0),t.complete("success")});let e={};this.component.stripe.payButton&&(e=this.component.stripe.payButton.stripeOptions||{}),e.paymentRequest=t;const i=s.create("paymentRequestButton",e);t.canMakePayment().then(t=>{t&&(this.stripeSeparator.style.display="block",i.mount(this.stripeElementPayButton))})}})}}});
//# sourceMappingURL=../../../sourcemaps/contrib/stripe/stripe/Stripe.js.map
