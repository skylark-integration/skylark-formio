/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../../components/datagrid/DataGrid","../modaledit/ModalEdit","./EditTable.form"],function(t,e,s,o){"use strict";return class o extends e{static schema(...t){return e.schema({label:"Edit Table",key:"editTable",type:"edittable",input:!0,tree:!0,components:[],columns:[]},...t)}static get builderInfo(){return{title:"Edit Table",icon:"th",group:"data",weight:50,schema:o.schema()}}constructor(...e){super(...e);const s=t.get(this.component,"rowGroups",[]);this.hasColumns()&&(this.component.components=this.componentComponents),this.groupsMode&&this.addEmptyRows(this.totalRowsNumber(s))}hasColumns(){return this.getColumns().length>0}hasExtraColumn(){return!1}hasAddButton(){return super.hasAddButton()&&this.hasColumns()}componentSchema(...t){return s.schema({rows:0,editor:"ckeditor",hideLabel:!0},...t)}getColumns(){const e=t.get(this,"component.columns",[]);return t.filter(t.map(e,e=>t.pick(e,["label","key"])),e=>!t.isEqual(e,this.emptyColumn))}getGroups(){return t.get(this.component,"rowGroups",[])}totalRowsNumber(e){return t.sum(t.map(e,"numberOfRows"))}addEmptyRows(e){this.dataValue=t.range(e).map(()=>({}))}get emptyColumn(){return{label:"",key:""}}get componentComponents(){return this.getColumns().map(({label:t,key:e})=>this.componentSchema({label:t,key:e}))}get tableClass(){const e=t.get(this.component,"type","edittable"),s=["table","table-bordered",`table-${e}`,"form-group",`formio-${e}-table`].join(" ");let o=t.get(this.component,"tableClass");return""!==o&&t.isString(o)||(o=s),["striped","bordered","hover","condensed"].forEach(t=>{this.component[t]&&(o=`${o} table-${t}`)}),o}get groupsMode(){return t.get(this.component,"enableRowGroups",!1)}build(t={}){super.build(t),this.tableElement.className=this.tableClass,this.builderMode&&!this.hasColumns()&&this.element.appendChild(this.builderView()),this.setMeta()}buildRows(){super.buildRows(),this.groupsMode&&this.buildGroups()}buildGroups(){const e=t.get(this.component,"rowGroups",[]),s=t.map(e,"numberOfRows"),o=this.tableElement.querySelectorAll("tbody>tr"),n=this.tableElement.querySelector("tbody"),r=this.getRowChunks(s,o).map(t.head);e.map(t=>this.buildGroup(t)).forEach((t,e)=>{const s=r[e];s&&n.insertBefore(t,s)})}getRowChunks(e,s){const[,o]=e.reduce(([t,e],s)=>{const o=t+s;return[o,[...e,[t,o]]]},[0,[]]);return o.map(e=>t.slice(s,...e))}buildGroup({label:t}){const e=this.getColumns().length,s=this.ce("td",{colspan:e,class:"edittable-group-label"},t);return this.ce("tr",null,s)}buildRow(t,e,s={}){if(this.builderMode)return null;this.rows[e]={};const o=this.componentComponents,n=o.length-1,r=o.map((o,r)=>{const i=this.buildComponent(o,r,t,e,this.getComponentState(o,s));return this.hasRemoveButtons()&&r===n&&i.append(this.removeButton(e)),i});return this.ce("tr",null,r)}removeButton(e){const s=t.get(this.component,"type","edittable"),o=this.ce("button",{type:"button",class:`btn btn-xxs btn-danger formio-${s}-remove`},this.ce("i",{class:this.iconClass("remove")}));return this.addEventListener(o,"click",t=>{t.preventDefault(),this.removeValue(e)}),o}builderView(){return this.ce("div",{class:"well edittable-placeholder"},[this.ce("i",{class:this.iconClass("warning-sign")})," ",this.t("No columns provided")])}getMeta(){const t=this.getGroups();return this.hasColumns&&t.length?t.reduce((t,e)=>(t[e.label]=e.numberOfRows,t),{}):null}setMeta(){const e=t.get(this.component,"key"),s=this.getMeta();e&&s&&t.set(this.root,["_submission","metadata",e],s)}}});
//# sourceMappingURL=../../sourcemaps/contrib/edittable/EditTable.js.map
