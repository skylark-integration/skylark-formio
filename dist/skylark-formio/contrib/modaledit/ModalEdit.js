/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["skylark-lodash","../../components/textarea/TextArea","./ModalEdit.form"],function(t,e,i){"use strict";return class i extends e{static schema(...t){return e.schema({type:"modaledit",label:"Modal Edit",key:"modalEdit",modalLayout:"fixed"},...t)}static get builderInfo(){return{title:"Modal Edit",group:"data",icon:"font",weight:40,schema:i.schema()}}renderElement(t=""){return this.renderTemplate("modaledit",{content:t})}attach(t){return this.loadRefs(t,{container:"single",edit:"single"}),super.attach(t)}attachElement(t){Object.defineProperty(t,"value",{get:function(){return this.innerHTML},set:function(t){this.innerHTML=t}});const e=this.showModal.bind(this);this.addEventListener(this.refs.container,"dblclick",e),this.addEventListener(this.refs.edit,"click",e)}createModal(t){const e=this,i=this.ce("div");this.setContent(i,this.renderTemplate("modaldialog")),i.refs={},this.loadRefs.call(i,i,{overlay:"single",content:"single",inner:"single",close:"single"});const n=this.getElementRect(this.refs.container),s=this.getModalLayout(n),o=this.getModalStyle(s);return Object.assign(i.refs.content.style,o),i.refs.inner.appendChild(t),this.addEventListener(i.refs.overlay,"click",t=>{t.preventDefault(),i.close()}),this.addEventListener(i.refs.close,"click",t=>{t.preventDefault(),i.close()}),this.addEventListener(i,"close",()=>{this.removeChildFrom(i,document.body)}),i.close=function(){i.dispatchEvent(new CustomEvent("close")),e.removeChildFrom(i,document.body)},document.body.appendChild(i),i}updateOnChange(t,e=!1){super.updateOnChange(t,e)&&this.updateContentView(this.dataValue)}showModal(){const t=this.ce("div");this.setContent(t,super.renderElement(this.dataValue));const e=t.children[0];this.isPlain&&(e.style.resize="vertical"),super.attachElement(e),this.createModal(e)}updateContentView(e=""){const i=t.get(this,"refs.input[0]",null);return this.setContent(i,e)}getElementRect(t){return t.getBoundingClientRect()}getModalStyle(e,i={}){const n=t.mapValues(t.pick(e,["top","left","width"]),t=>`${t}px`);return{...{position:"absolute",height:"auto"},...i,...n}}getModalLayout(t){const{width:e,height:i}=this.getModalSize(t.width,t.height);return{left:t.left,minHeight:i,top:t.top,width:e}}getModalSize(e,i){const[n,s]=this.defaultModalSize,o=t.get(this.component,"modalLayout","fixed"),{widthProp:a,heightProp:d}=this.layoutProps[o],h=t.get(this.component,a,n),l=t.get(this.component,d,s);return"fluid"===o?{width:Math.max(e,h),height:Math.max(i,l)}:{width:h,height:l}}get defaultModalSize(){return[475,300]}get layoutProps(){return{fixed:{widthProp:"width",heightProp:"height"},fluid:{widthProp:"minWidth",heightProp:"minHeight"}}}}});
//# sourceMappingURL=../../sourcemaps/contrib/modaledit/ModalEdit.js.map
