/**
 * skylark-formio - A version of formio.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-formio/
 * @license MIT
 */
define(["../../components/textfield/TextField","../../Formio"],function(e,t){"use strict";return class o extends e{static schema(...t){return e.schema({type:"location",label:"Location",key:"location",map:{key:"",region:"",gmapId:"",autocompleteOptions:{}}},...t)}static get builderInfo(){return{title:"Location",group:"advanced",icon:"map",weight:36,schema:o.schema()}}init(){super.init();let e="https://maps.googleapis.com/maps/api/js?v=3&libraries=places&callback=googleMapsCallback";this.component.map&&this.component.map.key&&(e+=`&key=${this.component.map.key}`),this.component.map&&this.component.map.region&&(e+=`&region=${this.component.map.region}`),t.requireLibrary("googleMaps","google.maps.places",e)}get defaultSchema(){return o.schema()}get emptyValue(){return""}get inputInfo(){const e=super.inputInfo;return e.attr.class+=" Gmap-search",e}renderElement(e,t){return super.renderElement(e,t)+this.renderTemplate("map",{mapId:this.component.map.gmapId})}attach(e){const t=super.attach(e);return this.loadRefs(e,{gmapElement:"multiple"}),t}attachElement(e,o){super.attachElement(e,o),t.libraryReady("googleMaps").then(()=>{const t=new google.maps.LatLng(45.5041482,-73.5574125),a={zoom:19,center:t,mapTypeId:google.maps.MapTypeId.ROADMAP,styles:[{featureType:"poi",stylers:[{visibility:"off"}]},{featureType:"transit",stylers:[{visibility:"off"}]}]};if(!this.refs.gmapElement[o])return;e.map=new google.maps.Map(this.refs.gmapElement[o],a),this.addMarker(t,"Default Marker",e);let n={};this.component.map&&(n=this.component.map.autocompleteOptions||{});const s=new google.maps.places.Autocomplete(e,n);s.addListener("place_changed",()=>{const t=s.getPlace();t.geometry?(t.geometry.viewport?e.map.fitBounds(t.geometry.viewport):(e.map.setCenter(t.geometry.location),e.map.setZoom(17)),e.marker.setIcon({url:t.icon,size:new google.maps.Size(71,71),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(17,34),scaledSize:new google.maps.Size(35,35)}),e.marker.setPosition(t.geometry.location),this.setValue(t.name)):console.log("Autocomplete's returned place contains no geometry")})})}addMarker(e,t,o){o.marker=new google.maps.Marker({position:e,map:o.map,title:t,draggable:!0}),o.marker.addListener("dragend",e=>{const t=new google.maps.Geocoder,o={lat:parseFloat(e.latLng.lat()),lng:parseFloat(e.latLng.lng())};t.geocode({location:o},(e,t)=>{t===google.maps.GeocoderStatus.OK?e[1]?this.setValue(e[0].formatted_address):console.log("No results found"):console.log(`Geocoder failed due to: ${t}`)})})}}});
//# sourceMappingURL=../../sourcemaps/contrib/location/Location.js.map
